restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 7 instances of IDatabaseInfo {
  0: { Session Count = 145; Grid Count = 23156; Path = \\hpccluster\hpccluster-scratch\smuda\CapillaryRise_studyDB }
  1: { Session Count = 93; Grid Count = 945; Path = D:\local\local_Testcase_databases\Testcase_HeatedWall }
  2: { Session Count = 175; Grid Count = 253; Path = D:\local\local_test_db }
  3: { Session Count = 79; Grid Count = 777; Path = \\hpccluster\hpccluster-scratch\smuda\XNSFE_testDB }
  4: { Session Count = 753; Grid Count = 20966; Path = \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB }
  5: { Session Count = 173; Grid Count = 341; Path = D:\local\local_XNSE_StudyDB }
  6: { Session Count = 67; Grid Count = 301; Path = \\terminal03\Users\smuda\local\terminal03_XNSE_studyDB }
}

 Console ready for input. Type 'help' for help.

==============
//var myDb = OpenOrCreateDefaultDatabase();
var myDb = OpenOrCreateDatabase(@"\\hpccluster\hpccluster-scratch\smuda\XNSE_studyDB")
**************
==============
ExecutionQueues;
**************
List of 3 instances of BatchProcessorClient {
  0: MiniBatchProcessor client @D:\local\binaries
  1: MS HPC client DC2, @\\hpccluster\hpccluster-scratch\smuda\binaries
  2: MiniBatchProcessor client @\\hpccluster\hpccluster-scratch\smuda\binaries
}
==============
ExecutionQueues[1].AllowedDatabases;
**************
List of 0 instances of IDatabaseInfo {
}
==============
//var myBatch = new MsHPC2012Client(@"\\hpccluster\hpccluster-scratch\smuda\binaries", "hpccluster");
var myBatch = ExecutionQueues[1];
**************
==============
using BoSSS.Application.XNSE_Solver;
**************
==============
**************
==============
WorkflowMgm.Init("Droplet3D");   // set project name
**************
Project name is set to 'Droplet3D'.

==============
//WorkflowMgm.SetEqualityBasedSessionJobControllCorrelation();
**************
==============
**************
==============
// Testcase setup
// ==============
bool steadyInterface = true;
bool oscillating     = true;

double radius = 0.25;  
double a      = 1.25;
double b      = 1.25;
double c      = 0.64;
**************
==============
// ========================
// physical parameter setup
// ========================
**************
==============
bool dropletConfig = true;    // if true heavy fluid inside and light fluid outside

double rho_h;                // heavy fluid
double mu_h;
double rho_l;                // light fluid
double mu_l;
double sigma;
 
double Lscale = 1.0;
double dt;
double t_end;

int setup = 0;
switch(setup) {
    case 0: {
        // Hysing: La = 500
        rho_h = 1;
        mu_h  = 0.1;
        rho_l = 1;
        mu_l  = 0.1;
        sigma = 0.2; 
        dt    = 0.001;
        t_end = 10;
        break;
    }
    case 1: {
        // Hysing: La = 5000
        rho_h = 1e4;
        mu_h  = 1;
        rho_l = 1e4;
        mu_l  = 1;
        sigma = 0.5; 
        dt    = 0.05;
        t_end = 125;
        break;
    }
    case 2: {
        // Hysing: La = 0.005
        rho_h = 1;
        mu_h  = 10;
        rho_l = 1;
        mu_l  = 10;
        sigma = 1; 
        dt    = 5e-4 ;
        t_end = 1.25;
        break;
    }
    case 3: {
        // Air - Water: 
        rho_h  = 1e3;
        mu_h   = 1e-3;
        rho_l  = 1.2;
        mu_l   = 17.1e-6;
        sigma  = 72.75e-3;
        Lscale = 0.01;
        dt     = 3e-5;
        t_end  = 0.3;
        break;
    }
}
**************
==============
// ===========================
// Grids for Convergence Study
// ===========================
**************
==============
var GridSeq = new IGridInfo[1];
int[] kelemSeq = new int[]{ 16 };
**************
==============
double L = 1.0 * Lscale;   
**************
==============
for(int iGrid = 0; iGrid < GridSeq.Length; iGrid++) {
    
    int kelem = kelemSeq[iGrid];
    
    GridCommons grd;

    double[] xNodes = GenericBlas.Linspace(-(L/2.0), (L/2.0), kelem + 1);
    double[] yNodes = GenericBlas.Linspace(-(L/2.0), (L/2.0), kelem + 1);   
    double[] zNodes = GenericBlas.Linspace(-(L/2.0), (L/2.0), kelem + 1);    
    grd = Grid3D.Cartesian3DGrid(xNodes, yNodes, zNodes);

    grd.EdgeTagNames.Add(1, "wall");
 
    grd.DefineEdgeTags(delegate (double[] X) {
        byte et = 0;
        if (Math.Abs(X[0] + (L/2.0)) <= 1.0e-8)
            et = 1;
        if (Math.Abs(X[0] - (L/2.0)) <= 1.0e-8)
            et = 1;
        if (Math.Abs(X[1] + (L/2.0)) <= 1.0e-8)
            et = 1;
        if (Math.Abs(X[1] - (L/2.0)) <= 1.0e-8)
            et = 1;
        if (Math.Abs(X[2] + (L/2.0)) <= 1.0e-8)
            et = 1;
        if (Math.Abs(X[2] - (L/2.0)) <= 1.0e-8)
            et = 1;

        return et;
    });

    grd.Name = "Droplet3D_mesh"+kelem;
    myDb.SaveGrid(ref grd);
    
    GridSeq[iGrid] = grd;
}
**************
Grid Edge Tags changed.
An equivalent grid (04b86afb-d238-41c5-a311-0997f1ee1002) is already present in the database -- the grid will not be saved.

==============
**************
==============
// ======================
// Create Control objects
// ======================
**************
==============
using BoSSS.Application.XNSE_Solver.PhysicalBasedTestcases;
**************
==============
int[] degS = new int[] { 2 };
**************
==============
**************
==============
//XNSE_Control[,] controls = new XNSE_Control[GridSeq.Length, degS.Length];
List<XNSE_Control> controls = new List<XNSE_Control>();
**************
==============
for(int iDeg = 0; iDeg < degS.Length; iDeg++) {
for(int iGrd = 0; iGrd < GridSeq.Length; iGrd++) {
    
    XNSE_Control C = new XNSE_Control();

    C.savetodb          = true;
    C.ContinueOnIoError = false;
    
    int pDeg = degS[iDeg];   
    var grd  = GridSeq[iGrd];

    C.SetDGdegree(pDeg);
    
    C.SetGrid(grd);
    C.AddBoundaryValue("wall");

    if(oscillating){
        string r_str = (radius * Lscale).ToString();
        string a_str = (a * Lscale).ToString();
        string b_str = (b * Lscale).ToString();
        string c_str = (c * Lscale).ToString();
        C.AddInitialValue("Phi", "X => ((X[0]).Pow2() / "+a_str+".Pow2() + (X[1]).Pow2() / "+b_str+".Pow2() + (X[2]).Pow2() / "+c_str+".Pow2()).Sqrt() - "+r_str, false);  
    } else {
        string r_str = (radius * Lscale).ToString();
        C.AddInitialValue("Phi", "X => ((X[0]).Pow2() + (X[1]).Pow2()).Sqrt() - "+r_str, false);
        double pJump     = sigma/(radius * Lscale);
        string pJump_str = pJump.ToString();
        C.AddInitialValue("Pressure#A", "X => "+pJump_str, false);
    }
    
    if(dropletConfig){    // A inside, B outside
        C.PhysicalParameters.rho_A = rho_h;
        C.PhysicalParameters.rho_B = rho_l;
        C.PhysicalParameters.mu_A  = mu_h;
        C.PhysicalParameters.mu_B  = mu_l;
        C.PhysicalParameters.Sigma = sigma;
    } else {
        C.PhysicalParameters.rho_A = rho_l;
        C.PhysicalParameters.rho_B = rho_h;
        C.PhysicalParameters.mu_A  = mu_l;
        C.PhysicalParameters.mu_B  = mu_h;
        C.PhysicalParameters.Sigma = sigma;
    }
    
    C.dtMin         = dt;
    C.dtMax         = dt;
    C.NoOfTimesteps = (int)(t_end/dt);
    
    C.AdaptiveMeshRefinement = false;
    C.RefineStrategy         = XNSE_Control.RefinementStrategy.constantInterface;
    C.BaseRefinementLevel    = 1;
  

    C.LSContiProjectionMethod                         = BoSSS.Solution.LevelSetTools.ContinuityProjectionOption.ConstrainedDG;
    C.Option_LevelSetEvolution                        = LevelSetEvolution.None;
    //C.Option_LevelSetEvolution                        = LevelSetEvolution.FastMarching;
    C.FastMarchingPenaltyTerms                        = BoSSS.Solution.LevelSetTools.Smoothing.JumpPenalization.jumpPenalizationTerms.Jump;
    C.AdvancedDiscretizationOptions.SST_isotropicMode = BoSSS.Solution.XNSECommon.SurfaceStressTensor_IsotropicMode.LaplaceBeltrami_ContactLine;
    
    C.TimesteppingMode = AppControl._TimesteppingMode.Steady;

    C.TimeSteppingScheme           = BoSSS.Solution.XdgTimestepping.TimeSteppingScheme.BDF3;
    C.Timestepper_BDFinit          = BoSSS.Solution.Timestepping.TimeStepperInit.SingleInit;
    C.Timestepper_LevelSetHandling = BoSSS.Solution.XdgTimestepping.LevelSetHandling.None;
    //C.Timestepper_LevelSetHandling = BoSSS.Solution.XdgTimestepping.LevelSetHandling.Coupled_Once;
    
    C.saveperiod = 1;
    
    C.SessionName = "Droplet3D_k" + pDeg + "_mesh" + iGrd + "_steady";
    
    //controls[iDeg,iGrd] = C;
    controls.Add(C);
    C.CreateJob(); // job will be permanently linked to control object

}
}
**************
==============
controls.Count()
**************
1
==============
//Info(controls[0,0]);
//controls[0,0].SessionName
controls.ElementAt(0).SessionName
**************
Droplet3D_k2_mesh0_steady
==============
**************
==============
//var j00 = controls[0,0].GetJob();
**************
==============
//j00.Activate(myBatch);
**************
==============
//j00.Status;
**************
==============
//j00.Stdout;
**************
==============
//j00.Stderr;
**************
==============
foreach(var cntrl in controls) {
    Console.WriteLine("Submitting Sessions: {0}", cntrl.SessionName);
    var job              = cntrl.GetJob();
    //job.NumberOfMPIProcs = 4;
    job.Activate(myBatch);
}
**************
Submitting Sessions: Droplet3D_k2_mesh0_steady
Loading session d5d0e3a2-b47e-4602-b644-7be3d6a02bc6 failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session b3e86543-1b07-405c-a359-ae9592e5d3df failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session 097e1b7d-e16c-4525-a5dc-1c47cd35a00a failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.Timestepper_Scheme'.'
Loading session 137b157c-93c2-4d88-9971-8d3c688eba75 failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\137b157c-93c2-4d88-9971-8d3c688eba75\Session.info'.'
Loading session 28adc7a7-a336-435b-b560-d3c02f46c43d failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\28adc7a7-a336-435b-b560-d3c02f46c43d\Session.info'.'
Loading session d5d0e3a2-b47e-4602-b644-7be3d6a02bc6 failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session b3e86543-1b07-405c-a359-ae9592e5d3df failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session 097e1b7d-e16c-4525-a5dc-1c47cd35a00a failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.Timestepper_Scheme'.'
Loading session 137b157c-93c2-4d88-9971-8d3c688eba75 failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\137b157c-93c2-4d88-9971-8d3c688eba75\Session.info'.'
Loading session 28adc7a7-a336-435b-b560-d3c02f46c43d failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\28adc7a7-a336-435b-b560-d3c02f46c43d\Session.info'.'

Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\Droplet3D-XNSE_Solver2020Nov11_134818
copied 32 files.
   written file: control.obj
   copied 'amd64' runtime.
deployment finished.
System.Net.Sockets.SocketException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 130.83.248.133:5800. Type 'LastError' for details.

==============
LastError
**************
System.Net.Sockets.SocketException (0x80004005): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 130.83.248.133:5800

Server stack trace: 
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at System.Runtime.Remoting.Channels.RemoteConnection.CreateNewSocket(EndPoint ipEndPoint)
   at System.Runtime.Remoting.Channels.RemoteConnection.CreateNewSocket()
   at System.Runtime.Remoting.Channels.SocketCache.GetSocket(String machinePortAndSid, Boolean openNew)
   at System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink.SendRequestWithRetry(IMessage msg, ITransportHeaders requestHeaders, Stream requestStream)
   at System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink.ProcessMessage(IMessage msg, ITransportHeaders requestHeaders, Stream requestStream, ITransportHeaders& responseHeaders, Stream& responseStream)
   at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage(IMessage msg)

Exception rethrown at [0]: 
   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   at Microsoft.Hpc.Scheduler.Store.ISchedulerStoreInternal.Register(String clientSource, String userName, ConnectionRole role, Version clientVersion, ConnectionToken& token, UserPrivilege& privilege, Version& serverVersion, Dictionary`2& serverProps)
   at Microsoft.Hpc.Scheduler.Store.StoreServer.RegisterWithServer()
   at Microsoft.Hpc.Scheduler.Store.StoreServer._Connect()
   at Microsoft.Hpc.Scheduler.Store.StoreServer.Connect(String server, Int32 port, Boolean serviceAsClient, ServiceAsClientIdentityProvider identityProvider, String serviceAsClientUser, String serviceAsClientPass)
   at Microsoft.Hpc.Scheduler.Store.SchedulerStoreSvc..ctor(String server, Int32 port, Boolean serviceAsClient, ServiceAsClientIdentityProvider provider, String serviceAsClientUser, String serviceAsClientPass, Boolean overHttp)
   at Microsoft.Hpc.Scheduler.Store.SchedulerStoreSvc.RemoteConnect(String server, Int32 port, Boolean serviceAsClient, ServiceAsClientIdentityProvider provider, String userName, String password, Boolean overHttp)
   at Microsoft.Hpc.Scheduler.Store.SchedulerStoreSvc.RemoteConnect(String server, Int32 port)
   at Microsoft.Hpc.Scheduler.Store.SchedulerStore.Connect(String server)
   at Microsoft.Hpc.Scheduler.Scheduler.Connect(String cluster)
   at BoSSS.Application.BoSSSpad.MsHPC2012Client.Submit(Job myJob, String DeploymentDirectory) in D:\BoSSS-experimental\public\src\L4-application\BoSSSpad\MsHPC2012Client.cs:line 238
   at BoSSS.Application.BoSSSpad.Job.Activate(BatchProcessorClient bpc, Boolean DeleteOldDeploymentsAndSessions) in D:\BoSSS-experimental\public\src\L4-application\BoSSSpad\Job.cs:line 1266
   at <InteractiveExpressionClass>.Host(Object& $retval)
   at Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in D:\BoSSS-experimental\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 357
==============
**************
==============
**************
==============
**************
==============
**************
==============
//WorkflowMgm.Sessions
**************
==============
//WorkflowMgm.Sessions.Take(1).DeleteAll()
**************
==============
**************
==============
//WorkflowMgm.Sessions.Pick(0).Export().WithSupersampling(2).Do()
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
