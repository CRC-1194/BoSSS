restart
**************
  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 6 instances of IDatabaseInfo {
  0: { Session Count = 145; Grid Count = 23156; Path = \\hpccluster\hpccluster-scratch\smuda\CapillaryRise_studyDB }
  1: { Session Count = 175; Grid Count = 253; Path = D:\local\local_test_db }
  2: { Session Count = 79; Grid Count = 777; Path = \\hpccluster\hpccluster-scratch\smuda\XNSFE_testDB }
  3: { Session Count = 418; Grid Count = 8975; Path = \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB }
  4: { Session Count = 157; Grid Count = 109; Path = D:\local\local_XNSE_StudyDB }
  5: { Session Count = 19; Grid Count = 19; Path = \\terminal03\Users\smuda\local\terminal03_XNSE_studyDB }
}

 Console ready for input. Type 'help' for help.

==============
using BoSSS.Application.XNSE_Solver;
**************
==============
WorkflowMgm.Init("RisingBubble")
**************
Project name is set to 'RisingBubble'.

==============
WorkflowMgm.Sessions;
**************
List of 70 instances of ISessionInfo {
  0: RisingBubble	RisingBubble_test5_k2_mesh0	03/20/2020 17:05:24	d42334d4...
  1: RisingBubble	RisingBubble_test3_k2_mesh0*	03/20/2020 11:32:38	93ed2247...
  2: RisingBubble	RisingBubble_test2_k2_mesh0*	03/19/2020 20:50:14	aed2439e...
  3: RisingBubble	RisingBubble_test_k2_mesh0*	03/19/2020 17:47:43	dc391866...
  4: RisingBubble	RisingBubble_ConvStudy2_k2_mesh2_AMR1_restart	05/08/2020 19:00:01	8eddbff6...
  5: RisingBubble	RisingBubble_ConvStudy_k3_mesh0_rerun*	05/09/2020 19:14:08	d42767d7...
  6: RisingBubble	RisingBubble_ConvStudy2_k2_mesh2_AMR1_restart*	05/08/2020 18:57:22	eab5f1a4...
  7: RisingBubble	RisingBubble_ConvStudy2_k2_mesh2_AMR1_restart*	05/08/2020 18:55:44	725f9ba6...
  8: RisingBubble	RisingBubble_ConvStudy2_k2_mesh2	04/18/2020 11:55:54	a10b325a...
  9: RisingBubble	RisingBubble_tc2_ConvStudy2_k2_mesh2	04/18/2020 12:08:38	30ceac81...
  10: RisingBubble	RisingBubble_tc2_ConvStudy2_k2_mesh1	04/18/2020 12:08:37	4711d0de...
  11: RisingBubble	RisingBubble_ConvStudy2_k2_mesh1	04/18/2020 11:55:51	b222efe0...
  12: RisingBubble	RisingBubble_ExtVelLB3_k2_mesh1*	04/19/2020 20:11:05	27695456...
  13: RisingBubble	RisingBubble_ConvStudy2_k2_mesh0	04/18/2020 11:55:48	cec115b7...
  14: RisingBubble	RisingBubble_tc2_ConvStudy2_k3_mesh4*	04/18/2020 12:09:28	1bdcbf9e...
  15: RisingBubble	RisingBubble_tc2_ConvStudy2_k4_mesh2*	04/18/2020 12:09:31	5c84a9a4...
  16: RisingBubble	RisingBubble_tc2_ConvStudy2_k4_mesh3*	04/18/2020 12:09:27	b043b2c9...
  17: RisingBubble	RisingBubble_tc2_ConvStudy2_k3_mesh2*	04/18/2020 12:09:18	9fbae8ce...
  18: RisingBubble	RisingBubble_tc2_ConvStudy2_k4_mesh1*	04/18/2020 12:09:15	2d89fe1c...
  19: RisingBubble	RisingBubble_tc2_ConvStudy2_k2_mesh4*	04/18/2020 12:09:00	b2d5114c...
  20: RisingBubble	RisingBubble_tc2_ConvStudy2_k3_mesh3*	04/18/2020 12:09:03	93a0c852...
  21: RisingBubble	RisingBubble_tc2_ConvStudy2_k3_mesh1*	04/18/2020 12:08:51	0b53b932...
  22: RisingBubble	RisingBubble_tc2_ConvStudy2_k2_mesh3*	04/18/2020 12:08:43	1f40ddde...
  23: RisingBubble	RisingBubble_ConvStudy2_k2_mesh2_AMR1*	04/18/2020 11:58:24	c620be9f...
  24: RisingBubble	RisingBubble_ConvStudy2_k3_mesh2_AMR1*	04/18/2020 11:58:27	f6084112...
  25: RisingBubble	RisingBubble_ConvStudy2_k4_mesh2*	04/18/2020 11:56:16	0425fb79...
  26: RisingBubble	RisingBubble_ConvStudy2_k4_mesh1*	04/18/2020 11:56:13	0c6dfbf2...
  27: RisingBubble	RisingBubble_ConvStudy2_k4_mesh0*	04/18/2020 11:56:10	709b89e9...
  28: RisingBubble	RisingBubble_ConvStudy2_k3_mesh2*	04/18/2020 11:56:07	860c8824...
  29: RisingBubble	RisingBubble_ConvStudy2_k3_mesh1*	04/18/2020 11:56:02	d6eda6d3...
  30: RisingBubble	RisingBubble_ConvStudy2_k3_mesh0*	04/18/2020 11:55:59	cd40b071...
  31: RisingBubble	RisingBubble_ExtVelLB_k2_mesh1_restart*	04/17/2020 15:18:22	bc355a70...
  32: RisingBubble	RisingBubble_tc2_ConvStudy_k2_mesh2_restart*	04/17/2020 14:43:50	7a7385d1...
  33: RisingBubble	RisingBubble_ConvStudy_k3_mesh12	03/26/2020 09:43:00	f6cdd826...
  34: RisingBubble	RisingBubble_ConvStudy_k2_mesh2	03/23/2020 11:06:01	b74d773f...
  35: RisingBubble	RisingBubble_Fourier_k2_mesh1_VierProcTest*	04/02/2020 23:11:13	d5baf490...
  36: RisingBubble	RisingBubble_Fourier_k2_mesh1_ZwoProcTest*	04/02/2020 23:09:26	00841606...
  37: RisingBubble	RisingBubble_Fourier_k2_mesh1_parallelTest*	04/01/2020 18:45:35	ee80e51d...
  38: RisingBubble	RisingBubble_ExtVelCurv2_k2_mesh1*	03/31/2020 10:23:09	84087e56...
  39: RisingBubble	RisingBubble_ExtVelLB2_k2_mesh1*	03/31/2020 10:21:47	ab0a7316...
  40: RisingBubble	RisingBubble_ConvStudy_k2_mesh12	03/26/2020 09:42:42	4510aed9...
  41: RisingBubble	RisingBubble_ExtVelCurv_k2_mesh1*	03/30/2020 16:45:02	09f68852...
  42: RisingBubble	RisingBubble_ExtVelLB_k2_mesh1*	03/30/2020 16:43:52	cfbee3d5...
  43: RisingBubble	RisingBubble_ConvStudy_k3_mesh1	03/23/2020 10:43:42	de42008a...
  44: RisingBubble	RisingBubble_FastMarchCurv_k2_mesh1	03/26/2020 10:42:07	3226987a...
  45: RisingBubble	RisingBubble_Fourier_k2_mesh1	03/26/2020 10:46:02	b760b42f...
  46: RisingBubble	RisingBubble_tc2_FastMarchCurv_k2_mesh1*	03/26/2020 10:51:39	bf6a3d14...
  47: RisingBubble	RisingBubble_ConvStudy_k3_mesh02	03/26/2020 09:42:48	c3be0727...
  48: RisingBubble	RisingBubble_ConvStudy_k2_mesh02	03/26/2020 09:42:38	9b4dcbd7...
  49: RisingBubble	RisingBubble_tc2_ConvStudy_k2_mesh1	03/23/2020 22:05:22	44504bf6...
  50: RisingBubble	RisingBubble_ConvStudy_k2_mesh1	03/23/2020 10:43:12	97e8e806...
  51: RisingBubble	RisingBubble_tc2_ConvStudy_k2_mesh0	03/23/2020 22:05:20	d3c1cfe5...
  52: RisingBubble	RisingBubble_tc2_ConvStudy_k2_mesh2*	03/23/2020 22:05:28	931391e0...
  53: RisingBubble	RisingBubble_ConvStudy_k2_mesh0	03/23/2020 10:43:07	6106f0e5...
  54: RisingBubble	RisingBubble_ConvStudy_k3_mesh3*	03/23/2020 11:06:25	7fe15c36...
  55: RisingBubble	RisingBubble_ConvStudy_k3_mesh2*	03/23/2020 11:06:19	5a4ef53c...
  56: RisingBubble	RisingBubble_ConvStudy_k2_mesh3*	03/23/2020 11:06:06	be84e68d...
  57: RisingBubble	RisingBubble_ConvStudy_k3_mesh0*	03/23/2020 10:43:43	403366e9...
  58: RisingBubble	RisingBubble_ConvStudy_k3_mesh0_rerun*	05/12/2020 10:14:17	1cb27342...
  59: RisingBubble	RisingBubble_ConvStudy_k3_mesh0_restart	05/09/2020 08:49:47	4c450744...
  60: RisingBubble	RisingBubble_ConvStudy_k3_mesh0_rerun*	05/08/2020 18:45:50	8351c0ba...
  61: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB_nofullReinit	05/12/2020 09:29:40	d5b0db0c...
  62: RisingBubble	RisingBubble_methodStudy_k2_Fourier*	05/12/2020 09:47:09	747456a3...
  63: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB_defaultFilter*	05/12/2020 09:30:05	d3792020...
  64: RisingBubble	RisingBubble_methodStudy_k2_Fourier*	05/11/2020 13:45:14	cc5da5b4...
  65: RisingBubble	RisingBubble_methodStudy_k2_ExtVelCurv*	05/11/2020 13:44:27	9b3e12c5...
  66: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB*	05/11/2020 13:43:21	c2ffe833...
  67: RisingBubble	RisingBubble_methodStudy_k2_FastMarchCurv*	05/11/2020 13:41:59	8854c134...
  68: RisingBubble	RisingBubble_methodStudy_k2_FastMarchLB*	05/11/2020 13:40:08	c7166386...
  69: RisingBubble	RisingBubble_methodStudy_k2_FastMarchLB*	05/11/2020 13:33:02	ddeb14e7...
}
==============
var sess = WorkflowMgm.Sessions;
**************
==============
//string studyName = "RisingBubble_ConvStudy2_k2";
string studyName = "methodStudy_k2_";
//string studyName = "RisingBubble";
List<ISessionInfo> evalSess = new List<ISessionInfo>();
List<ISessionInfo> evalSessNT = new List<ISessionInfo>();
foreach(var sess in WorkflowMgm.Sessions) {
    if(sess.Name.Contains(studyName)) {
        if(Convert.ToBoolean(sess.SuccessfulTermination))
            evalSess.Add(sess);  
        else 
            evalSessNT.Add(sess);
    }        
}
evalSessNT
**************
List of 8 instances of ISessionInfo {
  0: RisingBubble	RisingBubble_methodStudy_k2_Fourier*	05/12/2020 09:47:09	747456a3...
  1: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB_defaultFilter*	05/12/2020 09:30:05	d3792020...
  2: RisingBubble	RisingBubble_methodStudy_k2_Fourier*	05/11/2020 13:45:14	cc5da5b4...
  3: RisingBubble	RisingBubble_methodStudy_k2_ExtVelCurv*	05/11/2020 13:44:27	9b3e12c5...
  4: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB*	05/11/2020 13:43:21	c2ffe833...
  5: RisingBubble	RisingBubble_methodStudy_k2_FastMarchCurv*	05/11/2020 13:41:59	8854c134...
  6: RisingBubble	RisingBubble_methodStudy_k2_FastMarchLB*	05/11/2020 13:40:08	c7166386...
  7: RisingBubble	RisingBubble_methodStudy_k2_FastMarchLB*	05/11/2020 13:33:02	ddeb14e7...
}
==============
evalSess.ElementAt(0).Export().WithSupersampling(2).Do()
**************
Starting export process... Data will be written to the following directory:
C:\Users\smuda\AppData\Local\BoSSS\plots\sessions\RisingBubble__RisingBubble_methodStudy_k2_ExtVelLB_nofullReinit__d5b0db0c-5696-4457-8ef4-f3e1ad4e0903
==============
//var evalSess = WorkflowMgm.Sessions.Skip(4).Take(1);
//evalSess.Add(evalSessNT.ElementAt(2));
//evalSess.RemoveAt(4);
evalSess
**************
List of 1 instances of ISessionInfo {
  0: RisingBubble	RisingBubble_methodStudy_k2_ExtVelLB_nofullReinit	05/12/2020 09:29:40	d5b0db0c...
}
==============
evalSess = evalSess.OrderBy(s => s.KeysAndQueries["Grid:hMax"]).ToList();
//evalSess = evalSess.OrderBy(s => s.KeysAndQueries["Grid:hMin"]).ToList();
**************
==============
var data = evalSess.ReadLogDataForXNSE(XNSE_Control.LoggingValues.RisingBubble); //, evalName: "NoCells-", keyName: "Grid:NoOfCells");
**************
Element at 0: time vs area
Element at 1: time vs center of mass - x
Element at 2: time vs center of mass - y
Element at 3: time vs circularity
Element at 4: time vs rise velocity

==============
ISessionInfoExtensions.PlotData(data.ElementAt(3), "time", "circularity")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(data.ElementAt(4), "time", "rise velocity")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(data.ElementAt(0), "time", "area")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
using ilPSP.Utils;
**************
(1,2): warning CS0105: The using directive for `ilPSP.Utils' appeared previously in this namespace
No. of errors|warnings: 0|1.

==============
int n = 0;
foreach(var grp in data.ElementAt(3).dataGroups) {
    Plot2Ddata dat = new Plot2Ddata();
    dat.AddDataGroup(grp);
    string name = "RB_test"+n+".txt";
    dat.SaveToTextFile(name);
    n++;
}
**************
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written

==============
**************
==============
// ===================
// read reference data
// ===================
bool setup2 = false;
**************
==============
using System.IO;
**************
(1,2): warning CS0105: The using directive for `System.IO' appeared previously in this namespace
No. of errors|warnings: 0|1.

==============
// g1 TU Dortmund (TP2D); g2 EPFL Lausanne (FreeLIFE); g3 Uni Magdebug (MooNMD)
string[] groups = new string[] {"TP2D", "FreeLIFE", "MooNMD"};
int[,] datLvl;
string datCase;
if(!setup2) {
    datCase = "c1g";
    datLvl  = new int[,] {{4, 5, 6, 7}, {1, 2, 3, -1}, {1, 2, 3, 4}};    // testcase 1
} else {    
    datCase = "c2g";
    datLvl  = new int[,] {{4, 5, 6, 7, 8}, {1, 2, 3, -1, -1}, {2, 3, 4, -1, -1}};    // testcase 2
}
List<Plot2Ddata>[,] dataRef = new List<Plot2Ddata>[4,3];
for (int grp = 1; grp <= 3; grp++) {
    List<Plot2Ddata>[] datSet = new List<Plot2Ddata>[4];
    // 1: area 2: circularity 3: center y 4: rise velocity
    for (int j = 0; j < 4; j++) {
        datSet[j] = new List<Plot2Ddata>();
    }

    int numL = datLvl.GetLength(1);
    for (int l = 0; l < numL; l++) {
        if(datLvl[grp-1,l] == -1)
            continue;
        // Read all data
        string dat  = datCase+grp+"l"+datLvl[grp - 1,l]+".txt";
        string path = @"D:\BoSSS-experimental\public\examples\XNSE_Solver\RisingBubble\referenceData_Featflow\data_bench_quantities\"+dat;
        string[] lines = File.ReadAllLines(path);
        double[] time = new double[lines.Length];
        double[][] valueDat = new double[4][];
        for(int j = 0; j < 4; j++)
            valueDat[j] = new double[lines.Length];

        for (int i = 0; i < lines.Length; i++) {
            //var datString = lines[i].Split(new string[] {" "}, StringSplitOptions.RemoveEmptyEntries);
            //Console.WriteLine("num split strings at 0: {0}", datString[0]);
            time[i] = Convert.ToDouble(lines[i].Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0]);            
            for (int j = 0; j < 4; j++) {
                valueDat[j][i] = Convert.ToDouble(lines[i].Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[j+1]);
            }
        }        
        // Build DataSet
        for (int j = 0; j < 4; j++) {
            string datName = groups[grp-1]+"_l"+datLvl[grp - 1,l];
            datSet[j].Add(new Plot2Ddata(new KeyValuePair<string, double[][]>(datName, new double[][] { time, valueDat[j] })));
        }
    }
    
    for (int j = 0; j < 4; j++) {
        dataRef[j,grp-1] = datSet[j];
    }
}
**************
==============
//ISessionInfoExtensions.PlotData(dataRef[1,0].Last(), "time", "circularity")
**************
==============
List<Plot2Ddata> dataRefm = data;
for (int i = 0; i < 2; i++) {
    dataRefm[0] = dataRefm.ElementAt(0).Merge(dataRef[0,i].Last());
    dataRefm[3] = dataRefm.ElementAt(3).Merge(dataRef[1,i].Last());
    dataRefm[2] = dataRefm.ElementAt(2).Merge(dataRef[2,i].Last());
    dataRefm[4] = dataRefm.ElementAt(4).Merge(dataRef[3,i].Last());
}
**************
==============
ISessionInfoExtensions.PlotData(dataRefm.ElementAt(3), "time", "circularity")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(dataRefm.ElementAt(4), "time", "rise velocity")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(dataRefm.ElementAt(0), "time", "area")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
// ======================================
// check specific values against ref Data
// ======================================
int numDat = data.ElementAt(3).dataGroups.Length;
**************
==============
// eval min circularity (0.9010 - 0.9013) at (1.875 - 1.9041)
double[] circMin = new double[numDat];
double[] circMinTime = new double[numDat];
int nd = 0;
foreach(var dgrp in data.ElementAt(3).dataGroups) {
    double Min  = Double.MaxValue;
    double time = 0.0;
    for(int i = 0; i < dgrp.Values.Length; i++) {
        if(dgrp.Values[i] < Min) {
            Min  = dgrp.Values[i];
            time = dgrp.Abscissas[i];
        }
    }
    circMin[nd] = Min;
    circMinTime[nd] = time;
    nd++;
    
    double cMinErr = 0.0;
    if(Min < 0.9010)
        cMinErr = 100*(Min-0.9010)/0.9010;
    if(Min > 0.9013)
        cMinErr = 100*(Min-0.9013)/0.9013;
    double tcMinErr = 0.0;
    if(time < 1.875)
        tcMinErr = 100*(time-1.875)/1.875;
    if(time > 1.9041)
        tcMinErr = 100*(time-1.9041)/1.9041;
    Console.WriteLine("c_{min} = "+Min+" ("+cMinErr+") at t = "+time+" ("+tcMinErr+")");
}
**************
c_{min} = 0.9025299283894 (0.136461598735167) at t = 1.88699999999993 (0)
c_{min} = 0.902127081240987 (0.0917653656925508) at t = 1.88999999999993 (0)
c_{min} = 0.902354728841088 (0.117023060145128) at t = 1.8869999999999 (0)
c_{min} = 0.903072994645932 (0.196715260837907) at t = 1.8779999999999 (0)
c_{min} = 0.90274570668586 (0.1604023838744) at t = 1.88100000000002 (0)
c_{min} = 0.901646027025952 (0.0383919922281138) at t = 1.86999999999998 (-0.266666666667739)

==============
int lineColor     = 0;
PlotFormat format = new PlotFormat(Style: Styles.Boxes);
// min circularity (0.9010 - 0.9013)
Gnuplot gp        = new Gnuplot(baseLineFormat: format);
gp.Cmd("set boxwidth 0.2");
//gp.SetXLabel(xLabel);
gp.Cmd("set xrange [0:"+(numDat+1)+"]");
//gp.SetYLabel(yLabel);
gp.Cmd("set yrange [0.9007:0.9016]");
gp.Cmd("set grid xtics ytics");
double[] range = Enumerable.Range(0, numDat).Select(i => 1 + (numDat - 1) * ((double)i / (numDat - 1))).ToArray();
gp.PlotXY(range, circMin, "test", format);
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.9010, 0.9010 }, "ref min", new PlotFormat(Style: Styles.Lines));
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.9013, 0.9013 }, "ref max", new PlotFormat(Style: Styles.Lines));
gp.WriteDeferredPlotCommands();
gp.Execute();
// at (1.875 - 1.9041)
Gnuplot gp2 = new Gnuplot(baseLineFormat: format);
gp2.Cmd("set boxwidth 0.2");
//gp.SetXLabel(xLabel);
gp2.Cmd("set xrange [0:"+(numDat+1)+"]");
//gp.SetYLabel(yLabel);
gp2.Cmd("set yrange [1.7799:1.9332]");
gp2.Cmd("set grid xtics ytics");
gp2.PlotXY(range, circMinTime, "test", format);
gp2.PlotXY(new double[] { 0, numDat+1 }, new double[] { 1.875, 1.875 }, "ref min", new PlotFormat(Style: Styles.Lines));
gp2.PlotXY(new double[] { 0, numDat+1 }, new double[] { 1.9041, 1.9041 }, "ref max", new PlotFormat(Style: Styles.Lines));
gp2.WriteDeferredPlotCommands();
gp2.Execute();
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
// eval max rise velocity (0.2415 - 0.2421) at (0.9211 - 0.9313)
double[] riseMax = new double[numDat];
double[] riseMaxTime = new double[numDat];
nd = 0;
foreach(var dgrp in data.ElementAt(4).dataGroups) {
    double Max  = Double.MinValue;
    double time = 0.0;
    for(int i = 0; i < dgrp.Values.Length; i++) {
        if(dgrp.Values[i] > Max) {
            Max  = dgrp.Values[i];
            time = dgrp.Abscissas[i];
        }
    }
    riseMax[nd] = Max;
    riseMaxTime[nd] = time;
    nd++;
    
    double vMaxErr = 0.0;
    if(Max < 0.2415)
        vMaxErr = 100*(Max-0.2415)/0.2415;
    if(Max > 0.2421)
        vMaxErr = 100*(Max-0.2421)/0.2421;
    double tvMaxErr = 0.0;
    if(time < 0.9211)
        tvMaxErr = 100*(time-0.9211)/0.9211;
    if(time > 0.9313)
        tvMaxErr = 100*(time-0.9313)/0.9313;
    Console.WriteLine("V_{max} = "+Max+" ("+vMaxErr+") at t = "+time+" ("+tvMaxErr+")");
}
**************
V_{max} = 0.241201457700652 (-0.123619999730022) at t = 0.918000000000025 (-0.336554120071112)
V_{max} = 0.241348635611234 (-0.0626767655345668) at t = 0.918000000000025 (-0.336554120071112)
V_{max} = 0.241203908374263 (-0.122605228048442) at t = 0.918000000000001 (-0.336554120073715)
V_{max} = 0.240916157035802 (-0.241756920992961) at t = 0.915000000000001 (-0.66225165562903)
V_{max} = 0.240920459977498 (-0.239975164597097) at t = 0.914999999999985 (-0.662251655630766)
V_{max} = 0.240213100903822 (-0.53287747253747) at t = 0.910000000000001 (-1.20508088155455)

==============
int lineColor     = 0;
PlotFormat format = new PlotFormat(Style: Styles.Boxes);
//
// max rise velocity (0.2415 - 0.2421)
//
Gnuplot gp        = new Gnuplot(baseLineFormat: format);
gp.Cmd("set boxwidth 0.2");
//gp.SetXLabel(xLabel);
gp.Cmd("set xrange [0:"+(numDat+1)+"]");
//gp.SetYLabel(yLabel);
gp.Cmd("set yrange [0.2409:0.2427]");
gp.Cmd("set grid xtics ytics");
gp.PlotXY(range, riseMax, "test", format);
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.2415, 0.2415 }, "ref min", new PlotFormat(Style: Styles.Lines));
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.2421, 0.2421 }, "ref max", new PlotFormat(Style: Styles.Lines));
gp.WriteDeferredPlotCommands();
gp.Execute();
//
// at (0.9211 - 0.9313)
//
Gnuplot gp2 = new Gnuplot(baseLineFormat: format);
gp2.Cmd("set boxwidth 0.2");
//gp.SetXLabel(xLabel);
gp2.Cmd("set xrange [0:"+(numDat+1)+"]");
//gp.SetYLabel(yLabel);
gp2.Cmd("set yrange [0.9109:0.9415]");
gp2.Cmd("set grid xtics ytics");
gp2.PlotXY(range, riseMaxTime, "test", format);
gp2.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.9211, 0.9211 }, "ref min", new PlotFormat(Style: Styles.Lines));
gp2.PlotXY(new double[] { 0, numDat+1 }, new double[] { 0.9313, 0.9313 }, "ref max", new PlotFormat(Style: Styles.Lines));
gp2.WriteDeferredPlotCommands();
gp2.Execute();
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
// get terminal height (1.0799 - 1.081)
double[] height = new double[numDat];
nd = 0;
List<double> terminalHeight = new List<double>();
foreach(var dgrp in data.ElementAt(2).dataGroups) {
    //terminalHeight.Add(dgrp.Values.Last());
    double theight = dgrp.Values.Last();
    height[nd] = theight;
    nd++;
    
    double hErr = 0.0;
    if(theight < 1.0799)
        hErr = 100*(theight-1.0799)/1.0799;
    if(theight > 1.081)
        hErr = 100*(theight-1.081)/1.081;
    Console.WriteLine("h_{end} = "+theight+" ("+hErr+")");
}
**************
h_{end} = 1.08001207446236 (0)
h_{end} = 1.0803628075547 (0)
h_{end} = 1.07968526552569 (-0.0198846628678558)
h_{end} = 1.07902120278965 (-0.0813776470367731)
h_{end} = 1.07848129861909 (-0.131373403177161)
h_{end} = 1.07315320519129 (-0.624761071276053)

==============
int lineColor     = 0;
PlotFormat format = new PlotFormat(Style: Styles.Boxes);
//
// terminal height (1.0799 - 1.081)
//
Gnuplot gp        = new Gnuplot(baseLineFormat: format);
gp.Cmd("set boxwidth 0.2");
//gp.SetXLabel(xLabel);
gp.Cmd("set xrange [0:"+(numDat+1)+"]");
//gp.SetYLabel(yLabel);
gp.Cmd("set yrange [1.079:1.082]");
gp.Cmd("set grid xtics ytics");
gp.PlotXY(range, height, "test", format);
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 1.0799, 1.0799 }, "ref min", new PlotFormat(Style: Styles.Lines));
gp.PlotXY(new double[] { 0, numDat+1 }, new double[] { 1.081, 1.081 }, "ref max", new PlotFormat(Style: Styles.Lines));
gp.WriteDeferredPlotCommands();
gp.Execute();
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
// ======================
// convergence evaluation
// ======================
**************
==============
string keyName = "Grid:hMax";
double[] abscissas = evalSess.Skip(1).Select(s => Convert.ToDouble(s.KeysAndQueries[keyName])).ToArray();
var convData = ISessionInfoExtensions.LogDataToConvergenceData(data, abscissas);
**************
==============
ISessionInfoExtensions.PlotData(convData.ElementAt(3), keyName, "circularity - norm", true)
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(convData.ElementAt(4), keyName, "rise velocity - norm", true)
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
ISessionInfoExtensions.PlotData(convData.ElementAt(0), keyName, "area - norm", true)
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
**************
==============
convData.ElementAt(0).Regression()
**************
List of 3 instances of KeyValuePair{String,Double} {
  0: [l_1 error norm, 2.38593864818002]
  1: [l_2 error norm, 2.3990143888085]
  2: [l_{inf} error norm, 2.3597565440137]
}
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
