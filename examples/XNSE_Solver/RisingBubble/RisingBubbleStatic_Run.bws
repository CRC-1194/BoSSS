restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 4 instances of IDatabaseInfo {
  0: { Session Count = 145; Grid Count = 23156; Path = \\hpccluster\hpccluster-scratch\smuda\CapillaryRise_studyDB }
  1: { Session Count = 175; Grid Count = 253; Path = D:\local\local_test_db }
  2: { Session Count = 77; Grid Count = 769; Path = \\hpccluster\hpccluster-scratch\smuda\XNSFE_testDB }
  3: { Session Count = 100; Grid Count = 3386; Path = \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB }
}

 Console ready for input. Type 'help' for help.

==============
//var myDb = OpenOrCreateDefaultDatabase();
var myDb = OpenOrCreateDatabase(@"\\hpccluster\hpccluster-scratch\smuda\XNSE_studyDB")
**************
==============
ExecutionQueues;
**************
List of 1 instances of BatchProcessorClient {
  0: BoSSS.Application.BoSSSpad.MiniBatchProcessorClient
}
==============
ExecutionQueues[0].AllowedDatabases;
**************
List of 0 instances of IDatabaseInfo {
}
==============
var myBatch = new MsHPC2012Client(@"\\hpccluster\hpccluster-scratch\smuda\binaries", "hpccluster");
**************
==============
using BoSSS.Application.XNSE_Solver;
using BoSSS.Solution.LevelSetTools.FourierLevelSet;
**************
==============
**************
==============
WorkflowMgm.Init("RisingBubbleStatic");   // set project name
**************
Project name is set to 'RisingBubbleStatic'.

==============
//WorkflowMgm.SetEqualityBasedSessionJobControllCorrelation();
**************
==============
**************
==============
**************
==============
// ========================
// physical parameter setup
// ========================
**************
==============
int setup = 0;
**************
==============
// ===========================
// Grids for Convergence Study
// ===========================
**************
==============
var GridSeq = new IGridInfo[7];
int[] kelemSeq = new int[]{ 10, 20, 40, 60, 80, 120, 160 };
**************
==============
bool freeslip = true;
**************
==============
for(int iGrid = 0; iGrid < GridSeq.Length; iGrid++) {
    
    int kelem = kelemSeq[iGrid];
    
    GridCommons grd;

    double[] Xnodes = GenericBlas.Linspace(0, 1.0, kelem + 1);
    double[] Ynodes = GenericBlas.Linspace(0, 2.0, 2 * kelem + 1);
    grd = Grid2D.Cartesian2DGrid(Xnodes, Ynodes, periodicY: false);


    grd.EdgeTagNames.Add(2, "pressure_outlet_upper");
    if(freeslip) {
        grd.EdgeTagNames.Add(1, "freeslip_lower");
        grd.EdgeTagNames.Add(3, "freeslip_side");
    } else {
        grd.EdgeTagNames.Add(1, "navierslip_linear_lower");
        grd.EdgeTagNames.Add(3, "navierslip_linear_side");
    }
        
    grd.DefineEdgeTags(delegate (double[] X) {   
        byte et = 0;
        if (Math.Abs(X[1]) <= 1.0e-8)       
            et = 1;
        if (Math.Abs(X[1] - 2.0) <= 1.0e-8)
            et = 2;
        if (Math.Abs(X[0]) <= 1.0e-8)
            et = 3;
        if (Math.Abs(X[0] - 1.0) <= 1.0e-8)
            et = 3;
        return et;
    });
/*    
    grd.AddPredefinedPartitioning("ZwoProcSplit", delegate (double[] X) {
        int rank;
        double x = X[0];
        if (x < 0.5)
            rank = 0;
        else
            rank = 1;
        return rank;
    });

    grd.AddPredefinedPartitioning("VierProcSplit", delegate (double[] X) {
        int rank;
        double x = X[0];
        if (x < 0.35)
            rank = 0;
        else if (x < 0.5)
           rank = 1;
        else if (x < 0.75)
            rank = 2;
        else
            rank = 3;
        return rank;
    });
*/
    grd.Name = "RisingBubbleStatic_ConvergenceStudyMesh"+iGrid; //+"_withPartitioning";
    myDb.SaveGrid(ref grd);
    
    GridSeq[iGrid] = grd;
}
**************
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.
Grid Edge Tags changed.
An equivalent grid is already present in the database -- the grid will not be saved.

==============
/*
for(int iGrid = 0; iGrid < GridSeq.Length; iGrid++) {
    
    ((GridCommons)GridSeq[iGrid]).AddPredefinedPartitioning("ZwoProcSplit", delegate (double[] X) {
        int rank;
        double x = X[0];
        if (x < 0.5)
            rank = 0;
        else
            rank = 1;
        return rank;
    });

    ((GridCommons)GridSeq[iGrid]).AddPredefinedPartitioning("VierProcSplit", delegate (double[] X) {
        int rank;
        double x = X[0];
        if (x < 0.35)
            rank = 0;
        else if (x < 0.5)
            rank = 1;
        else if (x < 0.75)
            rank = 2;
        else
            rank = 3;
        return rank;
    });
}
*/
**************
Incomplete statement - missing closing parentheses?.

==============
// Fourier Level Set
// =================
double[] center = new double[] { 0.5, 1.0 }; 
double radius = 0.25;

int numSp = 640;    // should increase for higher resolutions
double[] FourierP = new double[numSp];
double[] samplP = new double[numSp];
for (int sp = 0; sp < numSp; sp++) {
    FourierP[sp] = sp * (2 * Math.PI / (double)numSp);
    samplP[sp] = radius;
}

var FLSCSeq = new FourierLevSetControl[GridSeq.Length];
//double circum = 2.0 * Math.PI * radius;
//double filter = (circum * 20.0) / ((double)numSp / 2.0);
for(int iGrid = 0; iGrid < GridSeq.Length; iGrid++) {
FLSCSeq[iGrid] = new BoSSS.Solution.LevelSetTools.FourierLevelSet.FourierLevSetControl(FourierType.Polar, 2 * Math.PI, FourierP, samplP, 1.0 / (double)kelemSeq[iGrid]) {
    //C.FourierLevSetControl = new FourierLevSetControl(FourierType.Polar, 2.0*Math.PI, PeriodicFunc, radius, 1.0/(double)kelem) { 
    center = center,
    FourierEvolve = Fourier_Evolution.MaterialPoints,
    centerMove = CenterMovement.Reconstructed
    //curvComp_extended = false
};
}
**************
==============
// ======================
// Create Control objects
// ======================
**************
==============
using BoSSS.Application.XNSE_Solver.PhysicalBasedTestcases;
**************
==============
int[] degS = new int[] { 2, 3 };
**************
==============
**************
==============
**************
==============
int deg0 = 0;
int grd0 = 0;
XNSE_Control[,] controls = new XNSE_Control[degS.Length-deg0, GridSeq.Length-grd0];
**************
==============
for(int iDeg = deg0; iDeg < degS.Length; iDeg++) {
for(int iGrd = grd0; iGrd < GridSeq.Length; iGrd++) {
    
    var C = RisingBubble.RB_forWorksheet(setup);
    
    int pDeg = degS[iDeg];   
    var grd  = GridSeq[iGrd];

    C.SetDGdegree(pDeg);
    
    C.SetGrid(grd);
    //C.GridPartType    = GridPartType.Predefined;
    //C.GridPartOptions = "ZwoProcSplit";
    C.AddBoundaryValue("pressure_outlet_upper");
    string RB;
    if(freeslip) {
        C.AddBoundaryValue("freeslip_lower");
        C.AddBoundaryValue("freeslip_side");
        
        RB = "freeslip";
    } else {
        C.AddBoundaryValue("navierslip_linear_lower");
        C.AddBoundaryValue("navierslip_linear_side");
        C.PhysicalParameters.betaS_A = 10.0;
        
        RB = "navierslip";
    }
        
    C.TimesteppingMode = AppControl._TimesteppingMode.Steady;
    
    C.LSContiProjectionMethod      = BoSSS.Solution.LevelSetTools.ContinuityProjectionOption.ConstrainedDG;
    C.Timestepper_LevelSetHandling = BoSSS.Solution.XdgTimestepping.LevelSetHandling.None;
    C.Option_LevelSetEvolution     = BoSSS.Application.XNSE_Solver.LevelSetEvolution.None;   
    
    
    C.SessionName = "RisingBubbleStatic_"+RB+"_ConvStudy_k" + pDeg + "_mesh" + iGrd;
    
    controls[iDeg-deg0,iGrd-grd0] = C;
    C.CreateJob(); // job will be permanently linked to control object
}
}
**************
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB
Info: setting database path to: \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB

==============
//Info(controls[0,0]);
controls[1,6].SessionName
**************
RisingBubbleStatic_freeslip_ConvStudy_k3_mesh6
==============
bool[,] restartJob = new bool[,] {{false, false, false, true, false, true, false},{false, false, true, true, false, false, true}};    //freeslip
//bool[,] restartJob = new bool[,] {{false, false, false, true, true, false, false},{false, false, false, false, false, true, true}};    //navierslip
List<XNSE_Control> controlsRe = new List<XNSE_Control>();
for(int iDeg = deg0; iDeg < degS.Length; iDeg++) {
for(int iGrd = grd0; iGrd < GridSeq.Length; iGrd++) {
    if(restartJob[iDeg-deg0,iGrd-grd0]) {
        controlsRe.Add(controls[iDeg-deg0,iGrd-grd0]);
    }
}
}
**************
==============
controlsRe
**************
List of 5 instances of XNSE_Control {
  0: BoSSS.Application.XNSE_Solver.XNSE_Control
  1: BoSSS.Application.XNSE_Solver.XNSE_Control
  2: BoSSS.Application.XNSE_Solver.XNSE_Control
  3: BoSSS.Application.XNSE_Solver.XNSE_Control
  4: BoSSS.Application.XNSE_Solver.XNSE_Control
}
==============
controlsRe.ElementAt(0).SessionName
**************
RisingBubbleStatic_freeslip_ConvStudy_k2_mesh3
==============
//var j00 = controls[0,0].GetJob();
**************
==============
//LastError
**************
==============
//j00.Activate(myBatch);
**************
==============
//j00.Status;
**************
==============
//j00.Stdout;
**************
==============
//j00.Stderr;
**************
==============
foreach(var cntrl in controlsRe) {
    Console.WriteLine("Submitting Sessions: {0}", cntrl.SessionName);
    var job              = cntrl.GetJob();
    //job.NumberOfMPIProcs = 4;
    job.Activate(myBatch);
}
**************
Submitting Sessions: RisingBubbleStatic_freeslip_ConvStudy_k2_mesh3
Loading session cb067bc2-4304-471e-9406-a427736405ed failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\cb067bc2-4304-471e-9406-a427736405ed\Session.info'.'
Loading session f5875fea-ef93-457f-a350-4e0f25851584 failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\f5875fea-ef93-457f-a350-4e0f25851584\Session.info'.'
Job not submitted yet, or no result session is known - starting submission.
Warning: no database is set for the job to submit; nothing ma be saved.
Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\RisingBubbleStatic-XNSE_Solver2020Apr03_102208
copied 32 files.
   writing file: control.obj
   copied 'amd64' runtime.
deployment finished.
Submitting Sessions: RisingBubbleStatic_freeslip_ConvStudy_k2_mesh5
Job not submitted yet, or no result session is known - starting submission.
Warning: no database is set for the job to submit; nothing ma be saved.
Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\RisingBubbleStatic-XNSE_Solver2020Apr03_102211
copied 32 files.
   writing file: control.obj
   copied 'amd64' runtime.
deployment finished.
Submitting Sessions: RisingBubbleStatic_freeslip_ConvStudy_k3_mesh2
Job not submitted yet, or no result session is known - starting submission.
Warning: no database is set for the job to submit; nothing ma be saved.
Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\RisingBubbleStatic-XNSE_Solver2020Apr03_102214
copied 32 files.
   writing file: control.obj
   copied 'amd64' runtime.
deployment finished.
Submitting Sessions: RisingBubbleStatic_freeslip_ConvStudy_k3_mesh3
Job not submitted yet, or no result session is known - starting submission.
Warning: no database is set for the job to submit; nothing ma be saved.
Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\RisingBubbleStatic-XNSE_Solver2020Apr03_102217
copied 32 files.
   writing file: control.obj
   copied 'amd64' runtime.
deployment finished.
Submitting Sessions: RisingBubbleStatic_freeslip_ConvStudy_k3_mesh6
Job not submitted yet, or no result session is known - starting submission.
Warning: no database is set for the job to submit; nothing ma be saved.
Deploying executables and additional files ...
Deployment directory: \\hpccluster\hpccluster-scratch\smuda\binaries\RisingBubbleStatic-XNSE_Solver2020Apr03_102220
copied 32 files.
   writing file: control.obj
   copied 'amd64' runtime.
deployment finished.

==============
**************
==============
**************
==============
//WorkflowMgm.Sessions
**************
==============
//WorkflowMgm.Sessions.Skip(10).Take(2).DeleteAll()
**************
==============
**************
==============
**************
==============
//databases.Pick(3).Sessions
**************
==============
**************
==============
//databases.Pick(3).Sessions.Take(2).DeleteAll()
**************
==============
**************
==============
//databases.Pick(3).Sessions.Pick(0).Delete()
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
