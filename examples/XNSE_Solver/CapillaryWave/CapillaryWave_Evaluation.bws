restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 6 instances of IDatabaseInfo {
  0: { Session Count = 145; Grid Count = 23156; Path = \\hpccluster\hpccluster-scratch\smuda\CapillaryRise_studyDB }
  1: { Session Count = 175; Grid Count = 253; Path = D:\local\local_test_db }
  2: { Session Count = 79; Grid Count = 777; Path = \\hpccluster\hpccluster-scratch\smuda\XNSFE_testDB }
  3: { Session Count = 731; Grid Count = 13257; Path = \\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB }
  4: { Session Count = 172; Grid Count = 337; Path = D:\local\local_XNSE_StudyDB }
  5: { Session Count = 67; Grid Count = 301; Path = \\terminal03\Users\smuda\local\terminal03_XNSE_studyDB }
}

 Console ready for input. Type 'help' for help.

==============
using BoSSS.Application.XNSE_Solver;
**************
==============
WorkflowMgm.Init("CapillaryWave")
**************
Project name is set to 'CapillaryWave'.

==============
WorkflowMgm.Sessions;
**************
Loading session d5d0e3a2-b47e-4602-b644-7be3d6a02bc6 failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session b3e86543-1b07-405c-a359-ae9592e5d3df failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.PressureBlockPrecondMode'.'
Loading session 097e1b7d-e16c-4525-a5dc-1c47cd35a00a failed with message 'Unexpected end when deserializing object. Path 'm_KeysAndQueries.Timestepper_Scheme'.'
Loading session 137b157c-93c2-4d88-9971-8d3c688eba75 failed with message 'Could not find file '\\HPCCLUSTER\hpccluster-scratch\smuda\XNSE_studyDB\sessions\137b157c-93c2-4d88-9971-8d3c688eba75\Session.info'.'
List of 38 instances of ISessionInfo {
  0: CapillaryWave	CapillaryWave_test_k2_mesh0	03/18/2020 21:27:41	7126f6b4...
  1: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh2_restart	06/09/2020 13:36:19	5e418fff...
  2: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1_AMR1	06/09/2020 13:36:12	6d04d7af...
  3: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0_AMR2	06/09/2020 13:36:10	2dd9f2ed...
  4: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1_AMR1*	06/09/2020 13:20:49	7c31fb7d...
  5: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0_AMR2*	06/09/2020 13:20:45	37f968e5...
  6: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0_AMR2*	06/09/2020 13:15:15	d328a0b4...
  7: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1_AMR1*	06/09/2020 13:14:52	484a136b...
  8: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh2_restart*	06/09/2020 13:14:21	ec93756a...
  9: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1	04/18/2020 13:25:46	06def218...
  10: CapillaryWave	CapillaryWave_Setup0_convStudy_k2_mesh2	04/18/2020 12:45:40	714dcbb2...
  11: CapillaryWave	CapillaryWave_Setup0_convStudy_k2_mesh1	04/18/2020 12:45:23	05b5ea49...
  12: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh3*	04/18/2020 13:26:29	d3a3171d...
  13: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh2*	04/18/2020 13:26:07	7f9130d3...
  14: CapillaryWave	CapillaryWave_Setup0_convStudy_k2_mesh3*	04/18/2020 12:54:23	6f816774...
  15: CapillaryWave	CapillaryWave_Setup0_convStudy_k2_mesh0	04/14/2020 22:51:49	b2161c12...
  16: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0	04/14/2020 22:49:55	b0bb4911...
  17: CapillaryWave	CapillaryWave_Setup3_k2_mesh2	03/26/2020 11:08:20	836becc2...
  18: CapillaryWave	CapillaryWave_Setup2_k2_mesh2	03/26/2020 11:09:22	031ca6f7...
  19: CapillaryWave	CapillaryWave_Setup0_k2_mesh2	03/26/2020 11:10:29	2c3771a5...
  20: CapillaryWave	CapillaryWave_Setup1_k2_mesh2	03/26/2020 11:09:54	49c7f8d4...
  21: CapillaryWave	CapillaryWave_Setup1_k2_mesh1	03/24/2020 14:28:10	28a39008...
  22: CapillaryWave	CapillaryWave_Setup2_k2_mesh1	03/24/2020 14:28:51	eecc50f2...
  23: CapillaryWave	CapillaryWave_Setup3_k2_mesh1	03/24/2020 14:29:40	eed03bcf...
  24: CapillaryWave	CapillaryWave_Setup0_k2_mesh1	03/24/2020 12:10:51	14f70fbe...
  25: CapillaryWave	CapillaryWave_Setup3_k2_mesh0	03/23/2020 21:35:37	bdd58f86...
  26: CapillaryWave	CapillaryWave_Setup0_k2_mesh0	03/23/2020 21:34:01	0af8a853...
  27: CapillaryWave	CapillaryWave_Setup2_k2_mesh0	03/23/2020 21:34:58	fcfecf85...
  28: CapillaryWave	RisingBubble_methodStudy_k2_FastMarchLB	05/11/2020 21:53:27	64d111fd...
  29: CapillaryWave	RisingBubble_methodStudy_k2_Fourier	05/11/2020 21:54:47	24079dd1...
  30: CapillaryWave	RisingBubble_methodStudy_k2_ExtVelCurv*	05/11/2020 21:54:33	25fb257f...
  31: CapillaryWave	RisingBubble_methodStudy_k2_ExtVelLB*	05/11/2020 21:54:16	29b37ba7...
  32: CapillaryWave	RisingBubble_methodStudy_k2_FastMarchCurv*	05/11/2020 21:53:59	73196dfa...
  33: CapillaryWave	RisingBubble_methodStudy_k2_Fourier*	05/11/2020 14:22:47	77f86c91...
  34: CapillaryWave	RisingBubble_methodStudy_k2_ExtVelCurv*	05/11/2020 14:21:50	acd160b5...
  35: CapillaryWave	RisingBubble_methodStudy_k2_ExtVelLB*	05/11/2020 14:20:58	e7123802...
  36: CapillaryWave	RisingBubble_methodStudy_k2_FastMarchCurv*	05/11/2020 14:19:52	efe95caf...
  37: CapillaryWave	RisingBubble_methodStudy_k2_FastMarchLB*	05/11/2020 14:19:05	d879012c...
}
==============
var sess = WorkflowMgm.Sessions;
**************
==============
string studyName = "_Setup0_convStudy_k3";
//string studyName = "_Setup0_k2";
//string studyName = "_k2_mesh2";
//string studyName = "methodStudy_k2_";
List<ISessionInfo> studySess = new List<ISessionInfo>();
List<ISessionInfo> studySessNT = new List<ISessionInfo>();
foreach(var sess in WorkflowMgm.Sessions) {
    if(sess.Name.Contains(studyName)) {
        if(Convert.ToBoolean(sess.SuccessfulTermination))
            studySess.Add(sess);  
        else 
            studySessNT.Add(sess);
    }        
}
studySessNT
**************
List of 7 instances of ISessionInfo {
  0: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1_AMR1*	06/09/2020 13:20:49	7c31fb7d...
  1: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0_AMR2*	06/09/2020 13:20:45	37f968e5...
  2: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh0_AMR2*	06/09/2020 13:15:15	d328a0b4...
  3: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh1_AMR1*	06/09/2020 13:14:52	484a136b...
  4: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh2_restart*	06/09/2020 13:14:21	ec93756a...
  5: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh3*	04/18/2020 13:26:29	d3a3171d...
  6: CapillaryWave	CapillaryWave_Setup0_convStudy_k3_mesh2*	04/18/2020 13:26:07	7f9130d3...
}
==============
//studySess.ElementAt(3).KeysAndQueries["Grid:NoOfCells"];
studySessNT.ElementAt(5).Timesteps.First().Export().WithSupersampling(2).Do();
//studySess.ElementAt(0).OpenSessionDirectory()
**************
Starting export process... Data will be written to the following directory:
C:\Users\smuda\AppData\Local\BoSSS\plots\sessions\CapillaryWave__CapillaryWave_Setup0_convStudy_k3_mesh3__d3a3171d-809b-4013-b8ee-fdd1fa712120
==============
//studySess.Add(WorkflowMgm.Sessions.Pick(11));
//studySess.Add(studySessNT.Pick(1));
//studySess.RemoveAt(1);
studySess
**************
List of 3 instances of ISessionInfo {
  0: CapillaryWave  CapillaryWave_Setup0_convStudy_k3_mesh2_restart 06/09/2020 13:36:19 5e418fff...
  1: CapillaryWave  CapillaryWave_Setup0_convStudy_k3_mesh1 04/18/2020 13:25:46 06def218...
  2: CapillaryWave  CapillaryWave_Setup0_convStudy_k3_mesh0 04/14/2020 22:49:55 b0bb4911...
}
==============
int stpInd = 0;
**************
==============
//studySess.Pick(3).OpenSessionDirectory()
studySess = studySess.OrderBy(s => s.KeysAndQueries["Grid:hMax"]).ToList();
**************
==============
var data = studySess.ReadLogDataForXNSE(XNSE_Control.LoggingValues.Wavelike);
**************
Element at 0: time vs magnitude
Element at 1: time vs real
Element at 2: time vs imaginary

==============
ISessionInfoExtensions.PlotData(data.ElementAt(0), "time", "amplitude")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============

Plot2Ddata dat = new Plot2Ddata();
//Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, yValues, Tvalues);
dat.AddDataGroup(data.ElementAt(0).dataGroups[0]);
string name = "CW_Setup0_fixts_k3_Amplitude.txt";
dat.SaveToTextFile(name);

**************
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written
BoSSS.Application.BoSSSpad.Plot2Ddata+XYvalues
==============
//var prop = ISessionInfoExtensions.ComputeOscillationProperties(data.ElementAt(0).dataGroups[3], false)
**************
==============
//prop.Item1
**************
==============
**************
==============
// ===================
// read reference data
// ===================
string[] refData = new string[]{ "La3e5", "La3e3", "La120", "La3" };
**************
==============
using System.IO;
**************
==============
Plot2Ddata[] dataRef = new Plot2Ddata[4];
for (int j = 0; j < 4; j++) {
    // Read all data
    string dat  = "CWrefDatConv_"+refData[j]+".txt";
    string path = @"D:\BoSSS-experimental\public\examples\XNSE_Solver\CapillaryWave\RefData_Prosperetti\"+dat;
    string[] lines = File.ReadAllLines(path);
    double[] time = new double[lines.Length];
    double[] val = new double[lines.Length];

    for (int i = 0; i < lines.Length; i++) {
        //var datString = lines[i].Split(new string[] {" "}, StringSplitOptions.RemoveEmptyEntries);
        //Console.WriteLine("num split strings at 0: {0}", datString[0]);
        time[i] = Convert.ToDouble(lines[i].Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries)[0]);            
        val[i] = Math.Abs(Convert.ToDouble(lines[i].Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries)[1]));
    }        
    // Build DataSet
    dataRef[j] = new Plot2Ddata(new KeyValuePair<string, double[][]>(refData[j], new double[][] { time, val }));
}
**************
==============
//ISessionInfoExtensions.PlotData(dataRef[0], "time", "amplitude")
**************
==============
/*
List<Plot2Ddata> dataRefm = data;
for (int i = 0; i < 4; i++) {
    dataRefm[0] = dataRefm.ElementAt(0).Merge(dataRef[i]);
}
*/
**************
Incomplete statement - missing closing parentheses?.

==============
List<Plot2Ddata> dataRefm = data;
dataRefm[0] = dataRefm.ElementAt(0).Merge(dataRef[stpInd]);
**************
==============
ISessionInfoExtensions.PlotData(dataRefm[0], "time", "amplitude")
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
**************
==============
// ===========
// export data
// ===========
**************
==============
/*
for(int stp = 0; stp < 4; stp++) {
    Plot2Ddata dat            = new Plot2Ddata();
    //Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, yValues, Tvalues);
    dat.AddDataGroup(data.ElementAt(0).dataGroups[stp]);
    string name = "CW_Setup"+stp+"_Amplitude.txt";
    dat.SaveToTextFile(name);
}
*/
**************
Incomplete statement - missing closing parentheses?.

==============
/*
for(int stp = 4; stp < 8; stp++) {
    Plot2Ddata dat            = new Plot2Ddata();
    //Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, yValues, Tvalues);
    dat.AddDataGroup(data.ElementAt(0).dataGroups[stp]);
    string name = "CW_Setup"+stp+"_AmplitudeRef.txt";
    dat.SaveToTextFile(name);
}
*/
**************
Incomplete statement - missing closing parentheses?.

==============
**************
==============
// ======================
// convergence evaluation
// ======================
**************
==============
string keyName = "Grid:hMax";
double[] abscissa = studySess.Select(s => Convert.ToDouble(s.KeysAndQueries[keyName])).ToArray();
**************
==============
double[] refAbs = dataRef[stpInd].dataGroups[0].Abscissas;
double[] refVal = dataRef[stpInd].dataGroups[0].Values;
**************
==============
var convData = ISessionInfoExtensions.LogDataToConvergenceData(data, abscissa, refAbs, refVal);
**************
==============
ISessionInfoExtensions.PlotData(convData.ElementAt(0), keyName, "amplitude - norm", true)
**************
Using gnuplot: C:\Users\smuda\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
convData.ElementAt(0).Regression()
**************
List of 3 instances of KeyValuePair{String,Double} {
  0: [l_1 error norm, 1.34407986986142]
  1: [l_2 error norm, 1.33599245219531]
  2: [l_{inf} error norm, 0.433354167489241]
}
==============
//data.Pick(0)
**************
==============
// ======
// export
// ======
**************
==============
Plot2Ddata dat            = new Plot2Ddata();
var datGrp                = convData.ElementAt(0).dataGroups[0];
Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, datGrp.Abscissas, datGrp.Values);
dat.AddDataGroup(xyVal);
string name = "CW_setup"+stpInd+"_k2_ErrConvl1.txt";
//dat.SaveToTextFile(name);
**************
BoSSS.Application.BoSSSpad.Plot2Ddata+XYvalues
==============
Plot2Ddata dat            = new Plot2Ddata();
var datGrp                = convData.ElementAt(0).dataGroups[1];
Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, datGrp.Abscissas, datGrp.Values);
dat.AddDataGroup(xyVal);
string name = "CW_setup"+stpInd+"_k3_ErrConvl2.txt";
dat.SaveToTextFile(name);
**************
Warning: Handling of logarithms still unclear in 'SaveToTextFile', Raw Data Written
BoSSS.Application.BoSSSpad.Plot2Ddata+XYvalues
==============
Plot2Ddata dat            = new Plot2Ddata();
var datGrp                = convData.ElementAt(0).dataGroups[2];
Plot2Ddata.XYvalues xyVal = new Plot2Ddata.XYvalues(null, datGrp.Abscissas, datGrp.Values);
dat.AddDataGroup(xyVal);
string name = "CW_setup"+stpInd+"_k2_ErrConvlinf.txt";
//dat.SaveToTextFile(name);
**************
BoSSS.Application.BoSSSpad.Plot2Ddata+XYvalues
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
