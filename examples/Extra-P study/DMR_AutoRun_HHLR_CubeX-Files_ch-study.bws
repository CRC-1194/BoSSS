restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 1 instances of IDatabaseInfo {
  0: { Session Count = 12; Grid Count = 31; Path = P:\testDB }
}

 Console ready for input. Type 'help' for help.

==============
// Does not matter for submission on HHLR (is set in source code)
string WFlowName = "DMR_CUBE_test";
**************
==============
WorkflowMgm.Init(WFlowName);
**************
Project name is set to 'DMR_CUBE_test'.

==============
WorkflowMgm.AllJobs;
**************
List of 0 instances of KeyValuePair{String,Job} {
}
==============
//string dbPath = @"T:\bosss_db_paper_ibmdmr";
//string dbPath = @"S:\work\scratch\yp19ysog\bosss_db_performance";
//string dbPath = @"S:\home\yp19ysog\bosss_db_paper_ibmdmr2";
//var myDb = OpenOrCreateDatabase(@"\\dc1\userspace\weber\testDB");

//string dbPath = @"T:\bosss_db_paper_ibmdmr";
//string dbPath = @"S:\work\scratch\yp19ysog\bosss_db_performance";
//string dbPath = @"S:\home\yp19ysog\bosss_db_paper_ibmdmr2";
//string dbPath = @"W:\work\scratch\jw52xeqa\DB_trash";
string dbPath = @"W:\work\scratch\jw52xeqa\trash";
///string dbPath = @"W:\work\scratch\jw52xeqa\DB_trash"/string dbPath = @"V:\testDB";
var myDb      = OpenOrCreateDatabase(dbPath);
**************
Opening existing database 'W:\work\scratch\jw52xeqa\trash'.

==============
var myBatch = (SlurmClient)ExecutionQueues[2];
**************
==============
//MiniBatchProcessor.Server.StartIfNotRunning();
**************
==============
using CNS;
using BoSSS.Application.IBM_Solver;
using BoSSS.Foundation.Grid.RefElements;
using BoSSS.Solution.Timestepping;
using System.Text;
using System.Threading.Tasks;
using ilPSP.Tracing;
**************
==============
Type solver = typeof(CNS.Program);
**************
==============
// Use the self-compiled BoSSSpad (release mode)
solver.Assembly.Location;
**************
B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\bin\Release\CNS.exe
==============
//------------------------------------------------
//   Parameter study - Time to make changes 
//------------------------------------------------
int savePeriod = int.MaxValue;

int[] dgDegree           = {2};

double xMax      = 4.0;
double yMax      = 1.0;
int _numOfCellsX = 400;
int _numOfCellsY = 100;

double[] sensorLimit     = {1e-3};  // sensorLimit = 1e-3 (except for IBMDMR --> 1e-4)
double CFLFraction = 0.1;

ExplicitSchemes myScheme = ExplicitSchemes.RungeKutta;
//ExplicitSchemes myScheme = ExplicitSchemes.LTS;
//ExplicitSchemes myScheme = ExplicitSchemes.AdamsBashforth;
int explicitScheme       = (int) myScheme;
int[] explicitOrder        = {1};
int[] numberOfSubGrids     = {3};
intÂ reclusteringInterval = 1;
int maxNumOfSubSteps     = 0;

double endTime = 0.7;
**************
==============
int bla = 7;
//int[] cores = new int[bla];
//double[] gridscale=new double[bla-2];
//for(int ct = 0; ct < bla; ct++)
//  cores[ct] = (int)Math.Pow(2, ct);
//for(int ct=0;ct < bla-2;ct++)
//    gridscale[ct]=Math.Pow(2,ct-2);

int timeSteps = 100;

int[] cores = new int[] {128};
//double[] gridscale = new double[] {1,2,4,8,16,32};
double[] gridscale = new double[] {16};
**************
==============
cores
**************
List of 1 instances of Int32 {
  0: 128
}
==============
gridscale
**************
List of 1 instances of Double {
  0: 16
}
==============
// Feed the machine
double numOfCellsX_0 = 80;
double numOfCellsY_0 = 20;
for (int c = 0; c < cores.Length; c++){
for (int dg = 0; dg < dgDegree.Length; dg++){
        for(int sl = 0; sl < sensorLimit.Length; sl++){
            for(int or = 0; or < explicitOrder.Length; or++){
                for(int sg = 0; sg < numberOfSubGrids.Length; sg++){
                    for(int gr=0;gr< gridscale.Length; gr++){
        
                        int numOfCellsX = (int)(numOfCellsX_0*gridscale[gr]);
                        int numOfCellsY = (int)(numOfCellsY_0*gridscale[gr]);
                        // Shock Tube
        string jobName = null;
        if (myScheme == ExplicitSchemes.RungeKutta){
            jobName = string.Format("DMR_p{0}_xCells{1}_yCells{2}_s0={3:0.0E-00}_CFLFrac{4}_RK{5}_{6}cores",
                dgDegree[dg], numOfCellsX, numOfCellsY, sensorLimit[sl], CFLFraction, explicitOrder[or], cores[c]);
        } else if (myScheme == ExplicitSchemes.AdamsBashforth){
            jobName = string.Format("DMR_p{0}_xCells{1}_yCells{2}_s0={3:0.0E-00}_CFLFrac{4}_AB{5}",
                dgDegree[dg], numOfCellsX, numOfCellsY, sensorLimit[sl], CFLFraction, explicitOrder[or]);            
        } else {
            jobName = string.Format("DMR_p{0}_xCells{1}_yCells{2}_s0={3:0.0E-00}_CFLFrac{4}_ALTS{5}_{6}_re{7}_subs{8}",
                dgDegree[dg], numOfCellsX, numOfCellsY, sensorLimit[sl], CFLFraction, explicitOrder[or], numberOfSubGrids, reclusteringInterval, maxNumOfSubSteps);                
        }
            
        string StartupString = string.Format("cs:CNS.TestCases.DoubleMachReflectionHHLR({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14})",
        savePeriod, dgDegree[dg], xMax, yMax, numOfCellsX, numOfCellsY, sensorLimit[sl], CFLFraction, explicitScheme, explicitOrder[or], numberOfSubGrids[sg], reclusteringInterval, maxNumOfSubSteps, endTime, timeSteps);
        
        var oneJob = new Job(jobName+"_2", solver);
        oneJob.SetControlStatement(StartupString);
        oneJob.NumberOfMPIProcs = cores[c];
               
        oneJob.ExecutionTime = "02:00:00"; // 1 day
        
        //oneJob.HHLR_project = "project00747";  // Markus
        //oneJob.HHLR_project = "project00717";  // Dennis
        //oneJob.HHLR_project = "project01217";  // Jens
        
        oneJob.MemPerCPU = "2500";
        //oneJob.MemPerCPU    = "1600";
        //oneJob.EmailAddress = "geisenhofer@fdy.tu-darmstadt.de";
        oneJob.UseComputeNodesExclusive = true;
        Console.WriteLine(jobName);
        oneJob.Activate(myBatch);
}
}
}
}
}
}
**************
DMR_p2_xCells1280_yCells320_s0=1.0E-03_CFLFrac0.1_RK1_128cores
Deploying job DMR_p2_xCells1280_yCells320_s0=1.0E-03_CFLFrac0.1_RK1_128cores_2 ... 
Deploying executables and additional files ...
Deployment directory: X:\Deployerie\DMR_CUBE_test-CNS2020Dec02_165211
copied 32 files.
deployment finished.
16398394


==============
WorkflowMgm.AllJobs;
**************
System.Reflection.TargetInvocationException occurred: Exception has been thrown by the target of an invocation.. Type 'LastError' for details.

==============
LastError
**************
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> Renci.SshNet.Common.SshConnectionException: An existing connection was forcibly closed by the remote host ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host
   at Renci.SshNet.Abstractions.SocketAbstraction.Read(Socket socket, Byte[] buffer, Int32 offset, Int32 size, TimeSpan timeout)
   at Renci.SshNet.Session.ReceiveMessage()
   at Renci.SshNet.Session.MessageListener()
   --- End of inner exception stack trace ---
   at Renci.SshNet.Session.WaitOnHandle(WaitHandle waitHandle, TimeSpan timeout)
   at Renci.SshNet.Channels.ChannelSession.Open()
   at Renci.SshNet.SshCommand.BeginExecute(AsyncCallback callback, Object state)
   at BoSSS.Application.BoSSSpad.SlurmClient.EvaluateStatus(Job myJob, Int32& SubmitCount, Boolean& isRunning, Boolean& wasSuccessful, Boolean& isFailed, String& DeployDir) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\SlurmClient.cs:line 74
   at BoSSS.Application.BoSSSpad.Job.GetStatus(Int32& SubmitCount, String& DD) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\Job.cs:line 534
   at BoSSS.Application.BoSSSpad.Job.ToString() in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\Job.cs:line 713
   at System.Collections.Generic.KeyValuePair`2.ToString()
   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)
   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)
   at BoSSS.Foundation.IO.IEnumerableExtensions.Summary[T](IEnumerable`1 entities) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\IEnumerableExtensions.cs:line 52
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 382
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
