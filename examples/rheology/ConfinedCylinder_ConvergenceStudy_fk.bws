restart
**************

  BoSSSpad C# interpreter
  _______________________

Unable to open database: 
primary path: X:\bosss_db_lichtenberg
No alternative paths specified.
IOException caught while opening database #1 at 'X:\bosss_db_lichtenberg': Unable to open database - all given paths either don't exist or are ruled out by the machine filter.
Databases loaded:
List of 1 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 0; Path = C:\Users\flori\default_bosss_db }
}
Setting Matlab Connector to Octave...

 Console ready for input. Type 'help' for help.

==============
databases;
**************
List of 1 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 0; Path = C:\Users\flori\default_bosss_db }
}
==============
var myDb = OpenOrCreateDefaultDatabase();
**************
==============
ExecutionQueues;
**************
List of 3 instances of BatchProcessorClient {
  0: MiniBatchProcessor client @C:\Users\flori\AppData\Local\BoSSS-LocalJobs
  1: SlurmClient: fk69umer@lcluster3.hrz.tu-darmstadt.de, Slurm account: project01287
  2: MS HPC client HPCCLUSTER, @\\dc1\userspace\kummer\cluster
}
==============
//(ExecutionQueues[1] as SlurmClient).TestSSH();
**************
==============
ExecutionQueues[0].AllowedDatabases;
**************
List of 1 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 0; Path = C:\Users\flori\default_bosss_db }
}
==============
//object.ReferenceEquals(ExecutionQueues[1].AllowedDatabases[0], databases[1]);
**************
==============
using BoSSS.Application.Rheology;
**************
==============
**************
==============
WorkflowMgm.Init("Cylinder");
**************
Project name is set to 'Cylinder'.

==============
WorkflowMgm.SetEqualityBasedSessionJobControllCorrelation();
**************
==============
**************
==============
// ===========================
// Grids for Convergence Study
// ===========================
**************
==============
databases[0].Grids;
**************
List of 0 instances of IGridInfo {
}
==============
var GridSeq = new IGridInfo[4];
**************
==============
GridSeq[3] = databases[0].Grids.FirstOrDefault(g => g.NumberOfCells == 29424 && g.Name == "confined_cylinder");
**************
==============
GridSeq[2] = databases[0].Grids.FirstOrDefault(g => g.NumberOfCells == 8504 && g.Name == "confined_cylinder");
**************
==============
GridSeq[1] = databases[0].Grids.FirstOrDefault(g => g.NumberOfCells == 2416 && g.Name == "confined_cylinder");
**************
==============
GridSeq[0] = databases[0].Grids.FirstOrDefault(g => g.NumberOfCells == 640 && g.Name == "confined_cylinder");
**************
==============
GridSeq;
**************
List of 4 instances of IGridInfo {
  0: 
  1: 
  2: 
  3: 
}
==============
// Plotting 
//PlotGrid("g2416", g2416);
**************
==============
Func<Vector, string> edgeTagFunc = delegate (Vector X) {
    double x = X[0];
    double y = X[1];
    
    if (Math.Abs(x - (-15)) < 1.0e-10)
        return "Velocity_inlet";
    if (Math.Abs(x - (15)) < 1.0e-10)
        return "Pressure_Outlet";
    if (Math.Abs(y - (-2)) < 1.0e-10)
        return "Wall_bottom";        
    if (Math.Abs(y - (+2)) < 1.0e-10)
        return "Wall_top";
    if (-1.0 < y && y < 1.0 && -1.0 < x  && x < 1.0)
        return "Wall_cylinder";
                    
    throw new ArgumentOutOfRangeException("at x = " + x + "and y = " + y);
};
**************
==============
// import Grid if not present
for(int iGrid = 0; iGrid < GridSeq.Length; iGrid++) {
    if(GridSeq[iGrid] == null) {
        var path = System.IO.Path.Combine(
            CurrentDocDir,
            @"Cylinder_GRIDS\mesh_karman_OriginalBox_MEDIUM_" + iGrid + ".msh");
        Gmsh gmshGrid         = new Gmsh(path);
        GridCommons bosssGrid = gmshGrid.GenerateBoSSSGrid();
        
        bosssGrid.Name = "confined_cylinder";
        bosssGrid.DefineEdgeTags(edgeTagFunc);
        myDb.SaveGrid(ref bosssGrid);  
        GridSeq[iGrid] = bosssGrid;
    }
}
**************

Grid Edge Tags changed.

Grid Edge Tags changed.

Grid Edge Tags changed.

Grid Edge Tags changed.

==============
GridSeq;
**************
List of 4 instances of IGridInfo {
  0: { Guid = 445bf1e8-5082-4100-83db-a53f2d2aeb97; Name = confined_cylinder; Cell Count = 640; Dim = 2 }
  1: { Guid = b87b95c1-10d8-4b99-bc82-9c5fec70219d; Name = confined_cylinder; Cell Count = 2416; Dim = 2 }
  2: { Guid = 3cfced02-dbe6-4449-a3d0-d9e258813608; Name = confined_cylinder; Cell Count = 8504; Dim = 2 }
  3: { Guid = 70c0393d-62b9-4c32-9c86-1173251617da; Name = confined_cylinder; Cell Count = 29424; Dim = 2 }
}
==============
//PlotGrid("name", GridSeq[0]);
**************
Initializing gird...
done.
Grid containing 6 EdgeTag names: 
   0: inner edge -- tag = 0   (marked as 'inner_edge') in output file.
   1: Velocity_inlet -- tag = 1
   2: Wall_top -- tag = 2
   3: Wall_cylinder -- tag = 3
   4: Pressure_Outlet -- tag = 4
   5: Wall_bottom -- tag = 5
Writing output file C:\Users\flori\Documents\BoSSS-master\public\examples\rheology\name...

==============
AllGrids;
**************
List of 4 instances of IGridInfo {
  0: { Guid = 70c0393d-62b9-4c32-9c86-1173251617da; Name = confined_cylinder; Cell Count = 29424; Dim = 2 }
  1: { Guid = 3cfced02-dbe6-4449-a3d0-d9e258813608; Name = confined_cylinder; Cell Count = 8504; Dim = 2 }
  2: { Guid = b87b95c1-10d8-4b99-bc82-9c5fec70219d; Name = confined_cylinder; Cell Count = 2416; Dim = 2 }
  3: { Guid = 445bf1e8-5082-4100-83db-a53f2d2aeb97; Name = confined_cylinder; Cell Count = 640; Dim = 2 }
}
==============
// ======================
// Create Control objects
// ======================
**************
==============
int[] degS = new int[] { 1, 2, 3, 4 };
**************
==============
RheologyControl[,] controls = new RheologyControl[GridSeq.Length,degS.Length];
**************
==============
for(int iDeg = 0; iDeg < degS.Length; iDeg++) {
for(int iGrd = 0; iGrd < GridSeq.Length; iGrd++) {
    var C    = RheologyControlExamples.ConfinedCylinder();
    int pDeg = degS[iDeg];   
    var grd  = GridSeq[iGrd];
    
    C.SetGrid(grd);
    C.SetDGdegree(pDeg);
    C.SessionName = "ConvStudy_k" + pDeg + "_mesh" + iGrd;
    
    if(pDeg <= 1)
        C.LinearSolver.SolverCode = LinearSolverCode.classic_pardiso;
    
    controls[iDeg,iGrd] = C;
    C.CreateJob(); // job will be permanently linked to control object
}
}
**************
==============
**************
==============
Info(controls[0,0]);
**************
NoOfMultigridLevels: 1 (Int32)
TimesteppingMode: Steady (_TimesteppingMode)
ControlFileText: Null
GeneratedFromCode: False (Boolean)
ControlFileText_Index: 0 (Int32)
FieldOptions:  [0]:   Key: VelocityX (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [1]:   Key: VelocityY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [2]:   Key: Pressure (String)
  Value:    Degree: 0 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [3]:   Key: StressXX (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [4]:   Key: StressXY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [5]:   Key: StressYY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [6]:   Key: ResidualMomentumX (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [7]:   Key: ResidualMomentumY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [8]:   Key: ResidualConti (String)
  Value:    Degree: 0 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [9]:   Key: ResidualStressXX (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [10]:   Key: ResidualStressXY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [11]:   Key: ResidualStressYY (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [12]:   Key: PhiDG (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
 [13]:   Key: Phi (String)
  Value:    Degree: 1 (Int32)
   SaveToDB: TRUE (SaveToDBOpt)
BoundaryValues:  [0]:   Key: Wall_top (String)
  Value:    Evaluators:     [0]:      Key: VelocityX (String)
     Value: Delegate
   Values:     [0]:      Key: VelocityX (String)
     Value:    type: Null
 [1]:   Key: Velocity_inlet (String)
  Value:    Evaluators:     [0]:      Key: VelocityX (String)
     Value: Delegate
    [1]:      Key: VelocityY (String)
     Value: Delegate
    [2]:      Key: StressXX (String)
     Value: Delegate
    [3]:      Key: StressXY (String)
     Value: Delegate
    [4]:      Key: StressYY (String)
     Value: Delegate
   Values:     [0]:      Key: VelocityX (String)
     Value:     [1]:      Key: VelocityY (String)
     Value:     [2]:      Key: StressXX (String)
     Value:     [3]:      Key: StressXY (String)
     Value:     [4]:      Key: StressYY (String)
     Value:    type: Null
 [2]:   Key: Pressure_Outlet (String)
  Value:    Evaluators:    Values:    type: Null
BoundaryValueChanges: InitialValues_EvaluatorsVec:  [0]:   Key: Phi (String)
  Value: Delegate
InitialValues_Evaluators:  [0]:   Key: Phi (String)
  Value: Delegate
InitialValues:  [0]:   Key: Phi (String)
  Value: Tags: dtFixed: 1.79769313486232E+304 (Double)
Reynolds: 1 (Double)
Weissenberg: 0.3 (Double)
beta: 0.59 (Double)
alpha: 1 (Double)
ObjectiveParam: 1 (Double)
giesekusfactor: 0.1 (Double)
Stokes: False (Boolean)
StokesConvection: True (Boolean)
SetInitialConditions: False (Boolean)
GravitySource: False (Boolean)
ConvCritStress: 1E-10 (Double)
RaiseWeissenberg: True (Boolean)
WeissenbergIncrement: 0.1001 (Double)
UsePerssonSensor: False (Boolean)
SensorLimit: 0.0001 (Double)
UseArtificialDiffusion: False (Boolean)
useFDJacobianForOperatorMatrix: False (Boolean)
FixedStreamwisePeriodicBC: False (Boolean)
SrcPressureGrad:  [0]: -1 (Double)
 [1]: 0 (Double)
ViscousPenaltyScaling: 1 (Double)
Penalty1:  [0]: 0 (Double)
 [1]: 0 (Double)
Penalty2: 1 (Double)
PresPenalty1:  [0]: 0 (Double)
 [1]: 0 (Double)
PresPenalty2: 1 (Double)
StressPenalty: 1 (Double)
RefinementLevel: 10 (Int32)
dt: 0.1 (Double)
Timestepper_Scheme: ImplicitEuler (TimesteppingScheme)
ComputeL2Error: False (Boolean)
Bodyforces: True (Boolean)
AnalysisLevel: 2 (Int32)
SkipSolveAndEvaluateResidual: False (Boolean)
SetInitialPressure: False (Boolean)
SetParamsAnalyticalSol: False (Boolean)
VelFunctionU: Delegate
VelFunctionV: Delegate
PresFunction: Delegate
ExSol_Velocity: Null
ExSol_Pressure: Null
ExSol_Stress: Null
GravityX: Null
GravityY: Null
GravityXX: Null
GravityXY: Null
GravityYY: Null
GravityDiv: Null
deg: 0 (Int32)
grd: 0 (Int32)
LinearSolver:  verbose: False (Boolean)
 MaxKrylovDim: 30 (Int32)
 MaxSolverIterations: 500 (Int32)
 MinSolverIterations: 1 (Int32)
 ConvergenceCriterion: 1E-07 (Double)
 SolverCode: classic_pardiso (LinearSolverCode)
 NoOfMultigridLevels: 1 (Int32)
 exp_localPrec_muA: 1 (Int32)
 exp_localPrec_Min_dt: 0 (Int32)
 TargetBlockSize: 100000 (Int32)
NonLinearSolver:  verbose: False (Boolean)
 MaxSolverIterations: 50 (Int32)
 MinSolverIterations: 1 (Int32)
 ConvergenceCriterion: 1E-07 (Double)
 UnderRelax: 1 (Double)
 SolverCode: Newton (NonLinearSolverCode)
 constantNewtonIterations: 1 (Int32)
 UsePresRefPoint: True (Boolean)
 printLambda: False (Boolean)
AgglomerationThreshold: 0.1 (Double)
MultiStepInit: True (Boolean)
TimeSteppingScheme: ImplicitEuler (TimeSteppingScheme)
Queries: RestartInfo: Null
GridGuid: GridFunc: Null
GridPartType: METIS (GridPartType)
GridPartOptions: Null
SessionName: ConvStudy_k1_mesh0 (String)
ProjectName: Cylinder (String)
ProjectDescription: Null
NoOfTimesteps: 1 (Int32)
staticTimestep: True (Boolean)
Endtime: 1.79769313486232E+308 (Double)
saveperiod: 1 (Int32)
rollingSaves: False (Boolean)
dtMin: 1.79769313486232E+304 (Double)
dtMax: 1.79769313486232E+304 (Double)
ImmediatePlotPeriod: -1 (Int32)
SuperSampling: 0 (Int32)
savetodb: False (Boolean)
TracingNamespaces: Null
DbPath: C:\Users\flori\default_bosss_db (String)
AlternateDbPaths: logFileDirectory: . (String)
Paramstudy_CaseIdentification: Null
Paramstudy_ContinueOnError: True (Boolean)
DynamicLoadBalancing_RedistributeAtStartup: False (Boolean)
DynamicLoadBalancing_CellCostEstimatorFactories: DynamicLoadBalancing_Period: -1 (Int32)
DynamicLoadBalancing_ImbalanceThreshold: 0.12 (Double)
DynamicLoadBalancing_On: False (Boolean)
AdaptiveMeshRefinement: False (Boolean)
AMR_startUpSweeps: 1 (Int32)
CutCellQuadratureType: Saye (MomentFittingVariants)
ContinueOnIoError: True (Boolean)
BurstSave: 1 (Int32)

==============
// ==================
// Activate first job
// ==================
**************
==============
controls[0,0].RestartInfo == null;
**************
True
==============
var j00 = controls[0,0].GetJob();
**************
==============
j00.NumberOfMPIProcs = 4;
**************
==============
j00.Activate(ExecutionQueues[1]);
**************
System.NotSupportedException occurred: Job can only be activated once.. Type 'LastError' for details.

==============
j00.Status;
**************
System.ArgumentNullException occurred: Value cannot be null.
Parameter name: path1. Type 'LastError' for details.

==============
j00.Stderr;
**************
System.ArgumentNullException occurred: Value cannot be null.
Parameter name: path1. Type 'LastError' for details.

==============
LastError;
**************
System.ArgumentNullException: Value cannot be null.
Parameter name: path1
   at System.IO.Path.Combine(String path1, String path2)
   at BoSSS.Application.BoSSSpad.SlurmClient.EvaluateStatus(Job myJob, Int32& SubmitCount, Boolean& isRunning, Boolean& wasSuccessful, Boolean& isFailed, String& DeployDir) in C:\Users\flori\Documents\BoSSS-master\public\src\L4-application\BoSSSpad\SlurmClient.cs:line 189
   at BoSSS.Application.BoSSSpad.Job.GetStatus(Int32& SubmitCount, String& DD) in C:\Users\flori\Documents\BoSSS-master\public\src\L4-application\BoSSSpad\Job.cs:line 708
   at <InteractiveExpressionClass>.Host(Object& $retval)
   at Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in C:\Users\flori\Documents\BoSSS-master\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 346
==============
j00.Stdout;
**************
System.ArgumentNullException occurred: Value cannot be null.
Parameter name: path1. Type 'LastError' for details.

==============
// =============
// Activate Jobs
// =============
**************
==============
**************
==============
**************
==============
WorkflowMgm.AllJobs;
**************
List of 1 instances of KeyValuePair{String,Job} {
  0: [ConvStudy_k1_mesh0, ConvStudy_k1_mesh0: FinishedSuccessful (SlurmClient: fk69umer@lcluster3.hrz.tu-darmstadt.de, Slurm account: project01217)]
}
==============
var C00clone = WorkflowMgm.AllJobs.Pick(0).Value.GetControl();
**************
==============
controls[0,0].GetJob();
**************
ConvStudy_k1_mesh0: FinishedSuccessful (SlurmClient: fk69umer@lcluster3.hrz.tu-darmstadt.de, Slurm account: project01217)
==============
**************
==============
var SI = controls[0,0].GetAllSessions();
**************
==============
SI[0].Timesteps;
**************
List of 12 instances of ITimestepInfo {
  0:  { Time-step: 0; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  1:  { Time-step: 1.0; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  2:  { Time-step: 1.1; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  3:  { Time-step: 1.2; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  4:  { Time-step: 1.3; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  5:  { Time-step: 1.4; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  6:  { Time-step: 1.5; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  7:  { Time-step: 1.6; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  8:  { Time-step: 1.7; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  9:  { Time-step: 1.8; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  10:  { Time-step: 1.9; Physical time: 0s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
  11:  { Time-step: 1; Physical time: 0.1s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
}
==============
var final = SI[0].Timesteps.Last();
**************
==============
var rtsi = ((RheologyTimestepInfo) (((TimestepProxy)final).GetInternal()));
**************
==============
rtsi;
**************
 { Time-step: 1; Physical time: 0.1s; Fields: Phi, VelocityX, VelocityY, ResidualMomentumX, ResidualMomentumY, Pressure, ResidualConti, StressXX, StressXY, StressYY, ResidualStressXX, ResidualStressXY, ResidualStressYY; Name:  }
==============
rtsi.currentWeissenbergNumber;
**************
1
==============
//var fdyBatch = new MsHPC2012Client(
//   DeploymentBaseDirectory : @"\\130.83.248.247\userspace\kummer\cluster", 
//   ServerName : "hpccluster", 
//   Username : @"FDY\kummer", 
//   DeployRuntime : true);
**************
==============
**************
==============
//var lichtbBatch = new SlurmClient(
//   DeploymentBaseDirectory : @"X:\bosss_deploy", 
//   ServerName : "lcluster3.hrz.tu-darmstadt.de", 
//   Username : @"fk69umer", 
//   PrivateKeyFilePath : @"C:\Users\flori\.ssh\id_rsa",
//   AskForPassword : false);
**************
==============
//AddExecutionQueue(lichtbBatch);
**************
==============
//SaveExecutionQueues();
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
