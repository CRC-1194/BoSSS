; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyDateTimeString GetDateTimeString('yyyy-mm-dd', '', '');

#define MyAppName "BoSSS"
#define MyAppVersion MyDateTimeString;
#define MyAppPublisher "Chair of Fluid Dynamics (FDY), TU Darmstadt"
#define MyAppURL "http://www.fdy.tu-darmstadt.de/fdy/fdyresearch/bossscode/index.de.jsp"
;#define MyAppBuildNo {%BUILD_NUMBER|0}

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{4155DC6D-D5E2-43D8-A458-8ACAD4F931BC}}
AppName={#MyAppName}
; BUILD_NUMBER is a jenkins enviroment variable
AppVersion={#GetEnv("BUILD_NUMBER")} ({#MyAppVersion})
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={code:DefDirRoot}\FDY\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=.\license.txt
OutputBaseFilename=BoSSS-setup-{#GetEnv("BUILD_NUMBER")}
;OutputBaseFilename={%BUILD_NUMBER%|0}
Compression=lzma
SolidCompression=yes
PrivilegesRequired=none
; absolutly neccesary to forward the chnages of PATH without restart/logoff
ChangesEnvironment=yes


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: ".\bin\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: ".\doc\APIreference\*"; DestDir: "{app}\doc\APIreference"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\doc\BoSSSPad_Command_Overview.pdf"; DestDir: "{app}\doc"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\doc\BoSSShandbook.pdf"; DestDir: "{app}\doc"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\doc\ControlExamples\IBM\*"; DestDir: "{app}\doc\ControlExamples\IBM"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\doc\ControlExamples\CNS\*"; DestDir: "{app}\doc\ControlExamples\CNS"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"         
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{group}\BoSSSpad (console)"; Filename: "{app}\bin\Release\BoSSSpad.exe"; Parameters: "--console"        
Name: "{group}\BoSSSpad (worksheet)"; Filename: "{app}\bin\Release\BoSSSpad.exe"         
Name: "{group}\BoSSS Handbook"; Filename: "{app}\doc\BoSSShandbook.pdf" 
Name: "{group}\BoSSS API Reference"; Filename: "{app}\doc\APIreference\index.html" 


[Registry]
; as elevated user (Admin): set BOSSS_INSTALL system-wide
Root: HKLM; \
   Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
   Flags: deletevalue; \
   ValueType: expandsz; \
   ValueName: "BOSSS_INSTALL"; \
   ValueData: "{app}"; \
   Check: not IsRegularUser()
Root: HKLM; \
    Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; \
    ValueName: "Path"; \
    ValueData: "{olddata};{app}\bin\Release;"; \
    Check: NeedsAddPath(ExpandConstant('{app}\bin\Release')) and ( not IsRegularUser() )
; as regular user (non-admin): set BOSSS_INSTALL only local
Root: HKCU; \
   Subkey: "Environment"; \
   Flags: deletevalue; \
   ValueType: expandsz; \
   ValueName: "BOSSS_INSTALL"; \
   ValueData: "{app}"; \
   Check: IsRegularUser()
Root: HKCU; \
    Subkey: "Environment"; \
    ValueType: expandsz; \
    ValueName: "Path"; \
    ValueData: "{olddata};{app}\bin\Release;"; \
    Check: NeedsAddPath(ExpandConstant('{app}\bin\Release')) and ( IsRegularUser() )

[Run]
 Filename: bcl.exe; \
 Flags: waituntilterminated runhidden; \
 Description: "Initialization run of bcl";

[Run]
 Filename: bcl.exe; \
 Flags: postinstall nowait runhidden; \
 Description: "Install BoSSS Visualizer Plugins for Visual Studio"; \
 Parameters: "visualizers-inst"

[Code]
function NeedsAddPath(Param: string): boolean;
var
  OrigPath: string;
begin
  if not RegQueryStringValue(HKEY_LOCAL_MACHINE,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'Path', OrigPath)
  then begin
    Result := True;
    exit;
  end;
  // look for the path with leading and trailing semicolon
  // Pos() returns 0 if not found
  Result := Pos(';' + Param + ';', ';' + OrigPath + ';') = 0;
end;

// checks is the user is Admin or Regular (non-elevated)
function IsRegularUser(): Boolean;
 begin
 Result := not (IsAdminLoggedOn or IsPowerUserLoggedOn);
 end;

// the program files dir. for admins,
// the local app directory for regular users.  
function DefDirRoot(Param: String): String;
 begin
 if IsRegularUser then
 Result := ExpandConstant('{localappdata}')
 else
 Result := ExpandConstant('{pf}')
 end;

