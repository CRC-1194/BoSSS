restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 2 instances of IDatabaseInfo {
  0: { Session Count = 12; Grid Count = 31; Path = P:\testDB }
  1: { Session Count = 0; Grid Count = 2; Path = V:\Test4Anne\DB_Rheology }
}

 Console ready for input. Type 'help' for help.

==============
string WFlowName = "Xdg_4cores_run0";
WorkflowMgm.Init(WFlowName);
**************
Project name is set to 'Xdg_4cores_run0'.

==============
using System.IO;
using BoSSS.Application.SipPoisson;
**************
==============
string dateString = "2019-12-9";
string File       = "SolverRuns--" + dateString + ".json";
string FilePath   = Path.Combine(CurrentDocDir, File);
var SessTab       = TableExtensions.LoadFromFile(FilePath);
**************
==============
//SessTab.Print();
**************
==============
// ====================
// Evaluation, plotting
// ====================
**************
==============
SessTab.GetColumnNames();
**************
List of 93 instances of String {
  0: SessionName
  1: DGdegree:Phi
  2: DGdegree:u
  3: GeneratedFromCode
  4: ControlFileText_Index
  5: dtFixed
  6: TimesteppingMode
  7: SetDefaultDiriBndCnd
  8: ViscosityMode
  9: MU_A
  10: MU_B
  11: ExcactSolSupported
  12: PrePreCond
  13: AgglomerationThreshold
  14: penalty_multiplyer
  15: pOff
  16: SuppressExceptionPrompt
  17: GridPartType
  18: ProjectName
  19: NoOfTimesteps
  20: Endtime
  21: saveperiod
  22: rollingSaves
  23: dtMin
  24: dtMax
  25: ImmediatePlotPeriod
  26: SuperSampling
  27: savetodb
  28: logFileDirectory
  29: Paramstudy_ContinueOnError
  30: LinearSolver.verbose
  31: LinearSolver.MaxKrylovDim
  32: LinearSolver.MaxSolverIterations
  33: LinearSolver.MinSolverIterations
  34: LinearSolver.ConvergenceCriterion
  35: LinearSolver.SolverCode
  36: LinearSolver.NoOfMultigridLevels
  37: LinearSolver.exp_localPrec_muA
  38: LinearSolver.exp_localPrec_Min_dt
  39: LinearSolver.TargetBlockSize
  40: LinearSolver.Parallelism
  41: NonLinearSolver.verbose
  42: NonLinearSolver.PrecondSolver.verbose
  43: NonLinearSolver.PrecondSolver.MaxKrylovDim
  44: NonLinearSolver.PrecondSolver.MaxSolverIterations
  45: NonLinearSolver.PrecondSolver.MinSolverIterations
  46: NonLinearSolver.PrecondSolver.ConvergenceCriterion
  47: NonLinearSolver.PrecondSolver.SolverCode
  48: NonLinearSolver.PrecondSolver.NoOfMultigridLevels
  49: NonLinearSolver.PrecondSolver.exp_localPrec_muA
  50: NonLinearSolver.PrecondSolver.exp_localPrec_Min_dt
  51: NonLinearSolver.PrecondSolver.TargetBlockSize
  52: NonLinearSolver.PrecondSolver.Parallelism
  53: NonLinearSolver.MaxSolverIterations
  54: NonLinearSolver.MinSolverIterations
  55: NonLinearSolver.ConvergenceCriterion
  56: NonLinearSolver.UnderRelax
  57: NonLinearSolver.SolverCode
  58: NonLinearSolver.constantNewtonIterations
  59: NonLinearSolver.UsePresRefPoint
  60: DynamicLoadBalancing_RedistributeAtStartup
  61: DynamicLoadBalancing_Period
  62: DynamicLoadBalancing_ImbalanceThreshold
  63: DynamicLoadBalancing_On
  64: AdaptiveMeshRefinement
  65: AMR_startUpSweeps
  66: CutCellQuadratureType
  67: ContinueOnIoError
  68: Grid:NoOfCells
  69: Grid:hMax
  70: Grid:hMin
  71: UsedNoOfMultigridLevels
  72: maxBlkSize
  73: minBlkSize
  74: NumberOfMatrixBlox
  75: NoOfCutCellBlocks
  76: DOFs
  77: minSolRunT
  78: maxSolRunT
  79: Conv
  80: NoIter
  81: maxMultigridlvl
  82: RegularTerminated
  83: MaxMatrixAssembly_time
  84: MaxAggregation_basis_init_time
  85: MaxSolver_Init_time
  86: MaxSolver_Run_time
  87: MaxRunSolver
  88: SumMatrixAssembly_time
  89: SumAggregation_basis_init_time
  90: SumSolver_Init_time
  91: SumSolver_Run_time
  92: SumRunSolver
}
==============
var SubTab_1 = SessTab.ExtractColumns("SessionName","DGdegree:u", "Grid:NoOfCells", "LinearSolver.SolverCode", "DOFs", "minSolRunT", "maxSolRunT", "NoIter", "RegularTerminated", "Conv","MaxRunSolver","SumRunSolver");
**************
==============
var SubTab_2 = SubTab_1.ExtractRows(delegate(int i, IDictionary<string,object> row) {
    return (Convert.ToBoolean(row["RegularTerminated"]) == true)
          && (Convert.ToInt32(row["Conv"]) != 0);
    });
**************
==============
var SubTab = SubTab_2.ExtractColumns("SessionName","DGdegree:u", "Grid:NoOfCells", "LinearSolver.SolverCode", "DOFs", "minSolRunT", "NoIter","MaxRunSolver","SumRunSolver");
**************
==============
SubTab.Print();
**************
    SessionName                                     DGdegree:u Grid:NoOfCells LinearSolver.SolverCode DOFs   minSolRunT   NoIter MaxRunSolver SumRunSolver  
0:  XdgPoissonVelocity_J32768_k3_exp_Kcycle_schwarz 3          32768          41                      678080 4311.2578927 38     4336.3742493 17345.4940034 
1:  XdgPoissonVelocity_J4096_k5_exp_Kcycle_schwarz  5          4096           41                      245504 2824.8744243 65     2855.102386  11420.4092277 
2:  XdgPoissonVelocity_J32768_k2_exp_Kcycle_schwarz 2          32768          41                      339040 190.6200107  12     202.1494403  808.5966389   
3:  XdgPoissonVelocity_J4096_k5_exp_gmres_levelpmg  5          4096           47                      245504 264.1723571  861    294.4425055  1177.6833254  
4:  XdgPoissonVelocity_J512_k5_exp_Kcycle_schwarz   5          512            41                      33152  46.9964002   30     51.5422461   206.1683038   
5:  XdgPoissonVelocity_J32768_k3_exp_gmres_levelpmg 3          32768          47                      678080 267.465625   328    292.582624   1170.3278827  
6:  XdgPoissonVelocity_J32768_k2_classic_pardiso    2          32768          2                       339040 744.8986473  1      756.3148234  3025.2580716  
7:  XdgPoissonVelocity_J64_k5_exp_Kcycle_schwarz    5          64             41                      4928   28.141541    164    28.9988569   115.9945943   
8:  XdgPoissonVelocity_J4096_k3_exp_Kcycle_schwarz  3          4096           41                      87680  46.5739332   18     50.2387835   200.9542441   
9:  XdgPoissonVelocity_J8_k5_exp_Kcycle_schwarz     5          8              41                      896    1.6999191    38     1.876611     7.5064138     
10: XdgPoissonVelocity_J512_k3_exp_Kcycle_schwarz   3          512            41                      11840  4.6034876    21     5.1872962    20.7491295    
11: XdgPoissonVelocity_J64_k3_exp_Kcycle_schwarz    3          64             41                      1760   1.8949427    53     2.061425     8.2455365     
12: XdgPoissonVelocity_J8_k3_exp_Kcycle_schwarz     3          8              41                      320    0.2615684    10     0.3395257    1.3568444     
13: XdgPoissonVelocity_J4096_k2_exp_Kcycle_schwarz  2          4096           41                      43840  9.2288334    14     11.0002633   44.0006871    
14: XdgPoissonVelocity_J512_k2_exp_Kcycle_schwarz   2          512            41                      5920   1.3611543    15     1.6498037    6.5990456     
15: XdgPoissonVelocity_J64_k2_exp_Kcycle_schwarz    2          64             41                      880    0.3700064    13     0.4673693    1.8687574     
16: XdgPoissonVelocity_J8_k2_exp_Kcycle_schwarz     2          8              41                      160    0.1833122    4      0.2319573    0.9276432     
17: XdgPoissonVelocity_J32768_k2_exp_gmres_levelpmg 2          32768          47                      339040 105.6249796  125    117.1378551  468.5501601   
18: XdgPoissonVelocity_J512_k5_exp_gmres_levelpmg   5          512            47                      33152  14.1592872   226    18.2980746   73.1871901    
19: XdgPoissonVelocity_J4096_k3_exp_gmres_levelpmg  3          4096           47                      87680  15.3541329   157    18.9923676   75.9632945    
20: XdgPoissonVelocity_J8_k5_exp_gmres_levelpmg     5          8              47                      896    6.2585177    3980   6.4348275    25.7392089    
21: XdgPoissonVelocity_J512_k3_exp_gmres_levelpmg   3          512            47                      11840  1.8296474    119    2.3922424    9.5688743     
22: XdgPoissonVelocity_J64_k3_exp_gmres_levelpmg    3          64             47                      1760   11.7565141   4499   11.9363611   47.7453486    
23: XdgPoissonVelocity_J8_k3_exp_gmres_levelpmg     3          8              47                      320    0.153949     62     0.2227189    0.8905737     
24: XdgPoissonVelocity_J4096_k2_exp_gmres_levelpmg  2          4096           47                      43840  7.1394411    89     8.9389201    35.7517317    
25: XdgPoissonVelocity_J512_k2_exp_gmres_levelpmg   2          512            47                      5920   0.750489     72     1.036648     4.1464493     
26: XdgPoissonVelocity_J64_k2_exp_gmres_levelpmg    2          64             47                      880    0.19683      52     0.2947302    1.1788146     
27: XdgPoissonVelocity_J8_k2_exp_gmres_levelpmg     2          8              47                      160    0.1415001    18     0.1896933    0.7586817     
28: XdgPoissonVelocity_J512_k5_classic_pardiso      5          512            2                       33152  25.5244418   1      29.706403    118.8233198   
29: XdgPoissonVelocity_J4096_k3_classic_pardiso     3          4096           2                       87680  63.6951077   1      67.4220408   269.6873338   
30: XdgPoissonVelocity_J64_k5_classic_pardiso       5          64             2                       4928   1.3935302    1      2.2593811    9.0359794     
31: XdgPoissonVelocity_J8_k5_classic_pardiso        5          8              2                       896    0.20655      1      0.3823454    1.5292588     
32: XdgPoissonVelocity_J512_k3_classic_pardiso      3          512            2                       11840  1.7334144    1      2.3080066    9.2312973     
33: XdgPoissonVelocity_J64_k3_classic_pardiso       3          64             2                       1760   0.1966194    1      0.3786503    1.5144516     
34: XdgPoissonVelocity_J8_k3_classic_pardiso        3          8              2                       320    0.1019828    1      0.1748744    0.6963126     
35: XdgPoissonVelocity_J4096_k2_classic_pardiso     2          4096           2                       43840  11.9812404   1      13.751366    55.0052746    
36: XdgPoissonVelocity_J512_k2_classic_pardiso      2          512            2                       5920   0.5065569    1      0.7910953    3.1643012     
37: XdgPoissonVelocity_J64_k2_classic_pardiso       2          64             2                       880    0.1135139    1      0.2101324    0.8404719     
38: XdgPoissonVelocity_J8_k2_classic_pardiso        2          8              2                       160    0.1034952    1      0.1516858    0.6066017     
==============
//Extract to excel-File
//SubTab.ToCSVFile(WFlowName+".txt");
**************
==============
var RuntimePlot = SubTab.ToPlot("DOFs", "MaxRunSolver","SumRunSolver", // column for x- and y
                        "LinearSolver.SolverCode", "DGdegree:u"); // column for group
**************
==============
SubTab.ToCSVFile(@"V:\ResHHLR\Xdg_4cores_run0\Results\sumOftime.txt");
**************
==============
LastError
**************
System.UnauthorizedAccessException: Access to the path 'C:\' is denied.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy)
   at System.IO.FileStream..ctor(String path, FileMode mode)
   at BoSSS.Application.BoSSSpad.TableExtensions.ToCSVFile(DataTable Tab, String filename, FileMode fm, Char ColSep, Boolean EnforceEqualColumns, Boolean writeHeader, Boolean writeRowIdx) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\TableExtensions.cs:line 626
   at <InteractiveExpressionClass>.Host(Object& $retval)
   at Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in V:\BoSSS-HHLR\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 346
==============
//RuntimePlot.dataGroups.Select(grp => grp.Name);
**************
==============
/*
RuntimePlot.LogX   = true;
RuntimePlot.LogY   = true;
RuntimePlot.Xlabel = "Degrees of freedom";
RuntimePlot.Ylabel = "Runtime [sec]";
RuntimePlot.Title  = "Solver performance -- 3D Poisson problem";
 
RuntimePlot.ModPointType("name0", PointTypes.Circle); // Pardiso
RuntimePlot.ModPointType("name1", PointTypes.UpperTriangle); // Mumps
RuntimePlot.ModPointType("name2", PointTypes.Diamond); // CG
RuntimePlot.ModPointType("name5", PointTypes.Box); // Schwarz
RuntimePlot.ModPointType("name7", PointTypes.LowerTriangle); // LAPACK
RuntimePlot.ModDashType("T2", DashTypes.Dashed); // poly. order 2
RuntimePlot.ModDashType("T3", DashTypes.DotDashed); // poly. order 3
RuntimePlot.ModDashType("T4", DashTypes.DotDotDashed); // poly. order 4
RuntimePlot.ModDashType("T5", DashTypes.Solid); // poly. order 5
RuntimePlot.ModDashType("T6", DashTypes.Dotted); // poly. order 6
RuntimePlot.ModLineColor("T2", LineColors.Blue);
RuntimePlot.ModLineColor("T3", LineColors.Red);
RuntimePlot.ModLineColor("T4", LineColors.Magenta);
RuntimePlot.ModLineColor("T5", LineColors.Orange);
RuntimePlot.ModLineColor("T6", LineColors.Green);
 
foreach(var xyGroup in RuntimePlot.dataGroups) {
    xyGroup.Format.LineWidth = 2;
    xyGroup.Format.PointSize = 1.0;
}
 
foreach(Plot2Ddata.XYvalues graph in RuntimePlot.dataGroups) {
 
    string ret = "";
    if(graph.Name.Contains("name0")) {
        ret += "Pardiso, ";
    } else if(graph.Name.Contains("name1")) {
        ret += "Mumps, ";
    } else if(graph.Name.Contains("name2")) {
        //Console.WriteLine("cg");
        ret += "Cnj Gr, ";
    } else if(graph.Name.Contains("name5")) {
        ret += "Add Swz, ";
    } else if(graph.Name.Contains("name7")) {
        //Console.WriteLine("lapack");
        ret += "LAPACK, ";
    } 
    if(graph.Name.Contains("T2")) {
        ret += "$ k = 2 $";
    } else if(graph.Name.Contains("T3")) {
        ret += "$ k = 3 $";
    } else if(graph.Name.Contains("T4")) {
        ret += "$ k = 4 $";
    } else if(graph.Name.Contains("T5")) {
        ret += "$ k = 5 $";
    } else if(graph.Name.Contains("T6")) {
        ret += "$ k = 6 $";
    }
 
    graph.Name = ret;
}
*/
**************
Incomplete statement - missing closing parentheses?.

==============
//extract all Degrees and put them into array
int rowcount          = SubTab.Rows.Count;
string selectedcolumn = "DGdegree:u";
int[] tmp= new int[20];

int count = 0;
for(int r=0;r<rowcount;r++){
System.Data.DataRow row = (System.Data.DataRow)SubTab.Rows[r];
int bla                 = Convert.ToInt32(row[selectedcolumn]);
if (tmp[bla]==0){
  tmp[bla]=1;
  count++;
}
}
int[] DGdegrees = new int[count];
int count2 = 0;
for(int i=0;i<tmp.Length;i++){
   if(tmp[i]==1){
      DGdegrees[count2]=i;
      count2++; 
   }
}
DGdegrees;
**************
List of 3 instances of Int32 {
  0: 2
  1: 3
  2: 5
}
==============
**************
==============
**************
==============
//RuntimePlot.PlotNow();
**************
==============
//var cl = RuntimePlot.ToGnuplot().PlotCairolatex();
//cl.Preview(trimPage:true);
**************
==============
//cl.WriteMinimalCompileableExample("C:\\tmp\\mini.tex");
**************
==============
**************
==============
int rows    = 3;
int columns = 1;
LinearSolverCode[] ignore_solvers = { LinearSolverCode.classic_cg, LinearSolverCode.exp_softpcg_schwarz, LinearSolverCode.exp_direct_lapack};

Plot2Ddata[,] multiplots = new Plot2Ddata[rows,columns];
int pDegree = 0;
for(int iRow = 0; iRow < rows; iRow++) {
for(int iCol = 0; iCol < columns; iCol++) {
    
    if(pDegree > rows*columns-1)
        continue;
    int tmpDG = -1;
    if(pDegree < DGdegrees.Length)
        tmpDG = DGdegrees[pDegree];
    
    //Create Graphs
    multiplots[iRow,iCol] = SubTab.ToPlot("DOFs", "NoIter", // column for x- and y
       delegate (int iTabRow, 
                 IDictionary<string, object> Row, 
                 out string Nmn, 
                 out PlotFormat Fmt) { 
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           // PlotRowSelector:
           // selects, which table row goes to which graph,
           // and the respective color  
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           int k = Convert.ToInt32(Row["DGdegree:u"]);
           if(k != tmpDG) {
                // degree does not match -> not in this plot
                Nmn = null;
                Fmt = null;
                return;
           }
 
           LinearSolverCode solver_name = (LinearSolverCode) Convert.ToInt32(Row["LinearSolver.SolverCode"]);
           //ignore the solvers specified in ingore_solvers
           foreach(LinearSolverCode sc in ignore_solvers){
               if(solver_name==sc){
                   System.Console.WriteLine("skipped");
                   Nmn = null;
                   Fmt = null;
               return;
               }
           }
           
       
           //if(solver_name==LinearSolverCode.exp_Kcycle_schwarz&&Convert.ToInt32(Row["DGdegree:u"])==3&&Convert.ToInt32(Row["Grid:NoOfCells"])==13824){
           //    System.Console.WriteLine("skipped");
           //        Nmn = null;
           //        Fmt = null;
           //    return;
           //   }
           if(Convert.ToInt32(Row["Grid:NoOfCells"])==8){
               System.Console.WriteLine("skipped");
                   Nmn = null;
                   Fmt = null;
               return;
               }
       
           //process the other solvers
           Fmt = new PlotFormat();
           switch(solver_name) {
           case LinearSolverCode.classic_pardiso: 
               Nmn           = "Pardiso"; 
               Fmt.PointType = PointTypes.OpenCircle;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCode.exp_Kcycle_schwarz: 
               Nmn           = "Kcycle w. add.-schwarz"; 
               Fmt.PointType = PointTypes.UpperTriangle;
               break;
           case LinearSolverCode.exp_gmres_levelpmg: 
               Nmn           = "GMRES p-multigrid"; 
               Fmt.PointType = PointTypes.Box;
               break;
//           case LinearSolverConfig.Code.exp_direct: 
//               Fmt.PointType = PointTypes.OpenBox;
//               Nmn           = "Pardiso w Blk PC"; 
//               break;
           case LinearSolverCode.exp_softpcg_schwarz: 
               Nmn           = "Add Swz"; 
               Fmt.PointType = PointTypes.LowerTriangle;
               break;
           case LinearSolverCode.exp_softpcg_schwarz_directcoarse: 
               Nmn           = "Add Swz w Coarse";
               Fmt.PointType = PointTypes.UpperTriangle;
               break;
           case LinearSolverCode.exp_softpcg_mg:
               Nmn           = "Mult Gr w Blk Jac";
               Fmt.PointType = PointTypes.Box;
               break;
           case LinearSolverCode.exp_direct_lapack: 
               Nmn           = "LAPACK"; 
               Fmt.PointType = PointTypes.Plus;
               break;
           default:
               Console.WriteLine("unknown: " + solver_name); 
               Nmn = "unknown";
               break;
           } 
           Console.WriteLine("name is: " + solver_name); 
           Fmt.PointSize = 0.5;
           Fmt.Style     = Styles.LinesPoints;
           Fmt.LineColor = LineColors.Black;
           Fmt.LineWidth = 3;
       });
    double[] dof = new[]{1e3,1e6};
    double[] linT = dof.Select(x => x*0.001).ToArray();
    var linP = new Plot2Ddata.XYvalues("linear", dof, linT);
    linP.Format.FromString("- black");
    ArrayTools.AddToArray(linP, ref multiplots[iRow,iCol].dataGroups);
 
    //all about axis
    string Title = string.Format("$k = {0}$", tmpDG);
    multiplots[iRow,iCol].Ylabel = Title;
    multiplots[iRow,iCol].LogX = true;
    multiplots[iRow,iCol].LogY = true;
    //specify range of axis
    multiplots[iRow,iCol].YrangeMin = 1e-1;
    multiplots[iRow,iCol].YrangeMax = 1e+5;
    multiplots[iRow,iCol].XrangeMin = 1e1;
    multiplots[iRow,iCol].XrangeMax = 1e7;
    //multiplots[iRow,iCol].Y2rangeMin = 1e-3;
    //multiplots[iRow,iCol].Y2rangeMax = 1e+4;
    //multiplots[iRow,iCol].X2rangeMin = 1e2;
    //multiplots[iRow,iCol].X2rangeMax = 1e7;
    
    //spacing around plots
    multiplots[iRow,iCol].ShowLegend = false;
    multiplots[iRow,iCol].tmargin = 0;
    multiplots[iRow,iCol].bmargin = 1;
    multiplots[iRow,iCol].lmargin = 10;
    multiplots[iRow,iCol].rmargin = 5;
    multiplots[iRow,iCol].ShowXtics=false;

    //I am legend ...
    if(iRow == 0){
    multiplots[iRow,iCol].ShowLegend = true;
    multiplots[iRow,iCol].LegendAlignment=new string[]{"i","t","l"};
    multiplots[iRow,iCol].LegendSwap=true;
    multiplots[iRow,iCol].LegendFont=12;
    }

    //and i am special ...
    if(iRow == rows-1)
        multiplots[iRow,iCol].ShowXtics=true;
    pDegree++;
}                        
}
;
//multiplots.AddDummyPlotsForLegend(3,0);
multiplots.PlotNow()
**************
name is: exp_Kcycle_schwarz
name is: classic_pardiso
name is: exp_Kcycle_schwarz
name is: exp_Kcycle_schwarz
name is: exp_Kcycle_schwarz
skipped
name is: exp_gmres_levelpmg
name is: exp_gmres_levelpmg
name is: exp_gmres_levelpmg
name is: exp_gmres_levelpmg
skipped
name is: classic_pardiso
name is: classic_pardiso
name is: classic_pardiso
skipped
name is: exp_Kcycle_schwarz
name is: exp_gmres_levelpmg
name is: exp_Kcycle_schwarz
name is: exp_Kcycle_schwarz
name is: exp_Kcycle_schwarz
skipped
name is: exp_gmres_levelpmg
name is: exp_gmres_levelpmg
name is: exp_gmres_levelpmg
skipped
name is: classic_pardiso
name is: classic_pardiso
name is: classic_pardiso
skipped
name is: exp_Kcycle_schwarz
name is: exp_gmres_levelpmg
name is: exp_Kcycle_schwarz
name is: exp_Kcycle_schwarz
skipped
name is: exp_gmres_levelpmg
skipped
name is: classic_pardiso
name is: classic_pardiso
skipped
Using gnuplot: V:\BoSSS-BIN\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
set key font ",12"inside top left Left reverse 
System.Drawing.Bitmap
==============
LastError
**************
==============
**************
==============
**************
==============
var CL = multiplots.ToGnuplot().PlotCairolatex(xSize:14,ySize:12);
**************
Using gnuplot: V:\BoSSS-BIN\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
set key font ",12"inside top left Left reverse 

==============
//CL.SaveTo(Path.Combine(CurrentDocDir, "XdgPoissonScaling.tex"));
**************
==============
CL.PlotNow();
**************
System.ComponentModel.Win32Exception occurred: The system cannot find the file specified. Type 'LastError' for details.

==============
Path.Combine(CurrentDocDir, "plots", "MainXdgPoissonScaling.tex")
**************
V:\BoSSS-HHLR\public\doc\handbook\apdx-NodeSolverPerformance\XDGPoisson_SFB\plots\MainXdgPoissonScaling.tex
==============
CL.WriteMinimalCompileableExample(
   Path.Combine(CurrentDocDir, "plots", "MainXdgPoissonScaling.tex"),
   "XdgPoissonScaling.tex");
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
