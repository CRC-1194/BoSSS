restart
**************
  Database Explorer v2
  ____________________

Databases loaded:
List of 24 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 2; Path = p:\BoSSS_DBs\Kovasznay }
  1: { Session Count = 1; Grid Count = 1; Path = p:\BoSSS_DBs\ChannelFlow }
  2: { Session Count = 0; Grid Count = 0; Path = p:\BoSSS_DBs\RectangularCylinder }
  3: { Session Count = 0; Grid Count = 0; Path = p:\BoSSS_DBs\Cylinder3D }
  4: { Session Count = 6; Grid Count = 1; Path = p:\BoSSS_DBs\MPI_Test }
  5: { Session Count = 0; Grid Count = 0; Path = p:\BoSSS_DBs\3DSolverPerformance }
  6: { Session Count = 2; Grid Count = 2; Path = P:\BoSSS_DBs\nonIBM_cylinder }
  7: { Session Count = 12; Grid Count = 1; Path = P:\BoSSS_DBs\osciCylinder }
  8: { Session Count = 0; Grid Count = 0; Path = P:\BoSSS_DBs\osciCylinder_new }
  9: { Session Count = 21; Grid Count = 25; Path = P:\BoSSS_DBs\ImmersedBoundary }
  10: { Session Count = 8; Grid Count = 44; Path = P:\BoSSS_DBs\ParticleInShearFlow\ }
  11: { Session Count = 16; Grid Count = 46; Path = P:\BoSSS_DBs\ParticleUnderGravity }
  12: { Session Count = 8; Grid Count = 31; Path = P:\BoSSS_DBs\fixedCylinder }
  13: { Session Count = 0; Grid Count = 0; Path = P:\BoSSS_DBs\Paper_OsciCylinder }
  14: { Session Count = 43; Grid Count = 45; Path = P:\BoSSS_DBs\IBMPaper }
  15: { Session Count = 28; Grid Count = 15; Path = P:\BoSSS_DBs\Paper_IBM2D }
  16: { Session Count = 38; Grid Count = 22; Path = P:\BoSSS_DBs\Paper_CellAgglo01_Penalty4 }
  17: { Session Count = 52; Grid Count = 65; Path = P:\BoSSS_DBs\Sphere3D }
  18: { Session Count = 22; Grid Count = 10; Path = P:\BoSSS_DBs\Performance }
  19: { Session Count = 24; Grid Count = 14; Path = P:\BoSSS_DBs\PaperRevision }
  20: { Session Count = 0; Grid Count = 0; Path = P:\Lichtenberg_DB }
  21: { Session Count = 2; Grid Count = 354; Path = P:\BoSSS_DBs\Bug }
  22: { Session Count = 28; Grid Count = 7; Path = P:\BoSSS_DBs\NodePerformance }
  23: { Session Count = 136; Grid Count = 98; Path = L:\BoSSS_DB\Lichtenberg_DB }
}

 Console ready for input. Type 'help' for help.

==============
WorkflowMgm.Init("MPISolverPerformance");
**************
Project name is set to 'MPISolverPerformance'.

==============
using System.IO;
using BoSSS.Application.IBM_Solver;
using System.Data;
**************
==============
string dateString = "2018-4-18";
string File       = "SolverRuns--" + dateString + ".json";
string FilePath   = Path.Combine(CurrentDocDir, File);
var SessTab       = TableExtensions.LoadFromFile(FilePath);
**************
==============
// ====================
// Evaluation, plotting
// ====================
**************
==============
SessTab.GetColumnNames();
**************
List of 66 instances of String {
  0: SessionName
  1: DGdegree:Velocity*
  2: DGdegree:Pressure
  3: DGdegree:PhiDG
  4: DGdegree:Phi
  5: Bndtype:Velocity_inlet
  6: Bndtype:Wall
  7: GeneratedFromCode
  8: ControlFileText_Index
  9: dtFixed
  10: NoOfMultigridLevels
  11: AdvancedDiscretizationOptions.ContiSign
  12: AdvancedDiscretizationOptions.RescaleConti
  13: AdvancedDiscretizationOptions.LFFA
  14: AdvancedDiscretizationOptions.LFFB
  15: AdvancedDiscretizationOptions.PenaltySafety
  16: AdvancedDiscretizationOptions.CellAgglomerationThreshold
  17: MaxKrylovDim
  18: MaxSolverIterations
  19: MinSolverIterations
  20: Solver_ConvergenceCriterion
  21: VelocityBlockPrecondMode
  22: LevelSetSmoothing
  23: PhysicalParameters.IncludeConvection
  24: PhysicalParameters.rho_A
  25: PhysicalParameters.mu_A
  26: PhysicalParameters.Material
  27: particleRadius
  28: MeshFactor
  29: Timestepper_Scheme
  30: FixedStreamwisePeriodicBC
  31: Timestepper_Init
  32: NonlinearSolve
  33: LinearSolve
  34: GridPartType
  35: ProjectName
  36: NoOfTimesteps
  37: Endtime
  38: saveperiod
  39: dtMin
  40: dtMax
  41: CompMode
  42: ImmediatePlotPeriod
  43: SuperSampling
  44: savetodb
  45: logFileDirectory
  46: Paramstudy_ContinueOnError
  47: DynamicLoadBalancing_RedistributeAtStartup
  48: DynamicLoadBalancing_Period
  49: DynamicLoadBalancing_ImbalanceThreshold
  50: DynamicLoadBalancing_On
  51: AdaptiveMeshRefinement
  52: CutCellQuadratureType
  53: ContinueOnIoError
  54: Grid:NoOfCells
  55: Grid:hMax
  56: Grid:hMin
  57: UsedNoOfMultigridLevels
  58: C_Drag
  59: C_Lift
  60: RegularTerminated
  61: SlvIter_excl
  62: SlvInit_excl
  63: PrecSolve
  64: NewtonDirder
  65: Processors
}
==============
var SubTab_1 = SessTab.ExtractColumns("Grid:NoOfCells","SlvIter_excl","SlvInit_excl","PrecSolve","NewtonDirder","NonlinearSolve","LinearSolve","NoOfMultigridLevels","DGdegree:Velocity*","RegularTerminated");
**************
==============
SubTab_1.Print();
**************
    Grid:NoOfCells SlvIter_excl SlvInit_excl PrecSolve    NewtonDirder NonlinearSolve LinearSolve NoOfMultigridLevels DGdegree:Velocity* RegularTerminated 
0:  216            520.1138163  3.1646877    482.0188651  0            1              9           2                   2                  True              
1:  216            219.9727671  3.082        200.1796134  0            1              10          2                   2                  True              
2:  125            166.428475   2.2567608    150.8801076  0            1              9           2                   2                  True              
3:  1000           0            0            0            0            1              10          2                   2                  False             
4:  125            38.5221169   2.1901949    28.8226691   0            1              10          2                   2                  True              
5:  729            0            0            0            0            1              10          2                   2                  False             
6:  512            0            0            0            0            1              10          2                   2                  False             
7:  343            0            0            0            0            1              10          2                   2                  False             
8:  64             14.0564835   1.6242066    8.3814191    0            1              10          2                   2                  True              
9:  1000           0            0            0            0            1              9           2                   2                  False             
10: 729            0            0            0            0            1              9           2                   2                  False             
11: 64             42.6727517   1.5881938    35.608083    0            1              9           2                   2                  True              
12: 512            0            0            0            0            1              9           2                   2                  False             
13: 343            0            0            0            0            1              9           2                   2                  False             
14: 729            3570.7376593 7.8447576    2493.5703214 1011.3012092 0              4           2                   2                  True              
15: 512            2597.3784414 5.9013537    383.9002881  2164.4447684 0              6           2                   2                  True              
16: 343            1808.4591779 4.1886806    275.8036966  1505.8021712 0              6           2                   2                  True              
17: 512            1304.0878681 6.1492073    745.6419878  509.2611623  0              4           2                   2                  True              
18: 216            853.4104848  2.9685402    134.0219667  702.4732929  0              6           2                   2                  True              
19: 343            521.6809592  4.3849727    256.8173921  238.1994157  0              4           2                   2                  True              
20: 125            322.7261362  2.0577132    50.3638173   262.6757845  0              6           2                   2                  True              
21: 1000           0            0            0            0            0              6           2                   2                  False             
22: 216            190.6361505  3.1354078    64.4373488   109.2989952  0              4           2                   2                  True              
23: 729            0            0            0            0            0              6           2                   2                  False             
24: 64             66.9455322   1.5908885    10.2234054   51.7496301   0              6           2                   2                  True              
25: 1000           0            0            0            0            0              4           2                   2                  False             
26: 125            61.4173363   2.3222632    10.1868982   41.4743646   0              4           2                   2                  True              
27: 64             21.2277844   1.577938     2.5100449    13.58565     0              4           2                   2                  True              
28: 216            520.1138163  3.1646877    482.0188651  0            1              9           2                   2                  True              
29: 216            219.9727671  3.082        200.1796134  0            1              10          2                   2                  True              
30: 125            166.428475   2.2567608    150.8801076  0            1              9           2                   2                  True              
31: 1000           0            0            0            0            1              10          2                   2                  False             
32: 125            38.5221169   2.1901949    28.8226691   0            1              10          2                   2                  True              
33: 729            0            0            0            0            1              10          2                   2                  False             
34: 512            0            0            0            0            1              10          2                   2                  False             
35: 343            0            0            0            0            1              10          2                   2                  False             
36: 64             14.0564835   1.6242066    8.3814191    0            1              10          2                   2                  True              
37: 1000           0            0            0            0            1              9           2                   2                  False             
38: 729            0            0            0            0            1              9           2                   2                  False             
39: 64             42.6727517   1.5881938    35.608083    0            1              9           2                   2                  True              
40: 512            0            0            0            0            1              9           2                   2                  False             
41: 343            0            0            0            0            1              9           2                   2                  False             
42: 729            3570.7376593 7.8447576    2493.5703214 1011.3012092 0              4           2                   2                  True              
43: 512            2597.3784414 5.9013537    383.9002881  2164.4447684 0              6           2                   2                  True              
44: 343            1808.4591779 4.1886806    275.8036966  1505.8021712 0              6           2                   2                  True              
45: 512            1304.0878681 6.1492073    745.6419878  509.2611623  0              4           2                   2                  True              
46: 216            853.4104848  2.9685402    134.0219667  702.4732929  0              6           2                   2                  True              
47: 343            521.6809592  4.3849727    256.8173921  238.1994157  0              4           2                   2                  True              
48: 125            322.7261362  2.0577132    50.3638173   262.6757845  0              6           2                   2                  True              
49: 1000           0            0            0            0            0              6           2                   2                  False             
50: 216            190.6361505  3.1354078    64.4373488   109.2989952  0              4           2                   2                  True              
51: 729            0            0            0            0            0              6           2                   2                  False             
52: 64             66.9455322   1.5908885    10.2234054   51.7496301   0              6           2                   2                  True              
53: 1000           0            0            0            0            0              4           2                   2                  False             
54: 125            61.4173363   2.3222632    10.1868982   41.4743646   0              4           2                   2                  True              
55: 64             21.2277844   1.577938     2.5100449    13.58565     0              4           2                   2                  True              
==============
// Calculation of speedup times 
List<KeyValuePair<string, int>> procs = new List<KeyValuePair<string, int>>{};
double[] slviter = ((double[])SubTab_1.GetColumn("SlvIter_excl"));
double[] slvinit = ((double[])SubTab_1.GetColumn("SlvInit_excl"));
double[] PrecSolve = ((double[])SubTab_1.GetColumn("PrecSolve"));
double[] NewtonDirder = ((double[])SubTab_1.GetColumn("NewtonDirder"));
double[] slviterSpeedup = new double[slviter.Length];
double[] slvinitSpeedup = new double[slviter.Length];
double[] PrecSolveSpeedup = new double[slviter.Length];
double[] NewtonDirderSpeedup = new double[slviter.Length];

for(int i = 0; i<slviter.Length; i++){
    long[] solve = ((long[])SubTab_1.GetColumn("LinearSolve"));
    string str = solve.Select(s => Convert.ToString(s)).ToArray()[i];
    int val    = ((int[])SubTab_1.GetColumn("Grid:NoOfCells"))[i];

    procs.Add(new KeyValuePair<string,int>(str,val));
      
}
int min;
int max = 0;
for(int i = 0; i < slviter.Length; i++){
    List<KeyValuePair<string, int>> procsCut = procs.FindAll(s => s.Key == procs[i].Key);
    
    int tempMax;
    min     = procsCut.Select(s => s.Value).Min();
    tempMax = procsCut.Select(s => s.Value).Max();
    if(tempMax>max){
        max = tempMax;
    }
    int idx = procs.FindIndex(s => (s.Value == min) && (s.Key == procs[i].Key));
    slviterSpeedup[i] = (slviter[idx]*procs.Pick(idx).Value)/slviter[i];
    slvinitSpeedup[i] = (slvinit[idx]*procs.Pick(idx).Value)/slvinit[i];
    PrecSolveSpeedup[i] = (PrecSolve[idx]*procs.Pick(idx).Value)/PrecSolve[i];
    NewtonDirderSpeedup[i] = (NewtonDirder[idx]*procs.Pick(idx).Value)/NewtonDirder[i];
}    
**************
System.InvalidCastException occurred: Das Objekt des Typs "System.Int64[]" kann nicht in Typ "System.Int32[]" umgewandelt werden.. Type 'LastError' for details.

==============
// Add columns to DataTable
SubTab_1.Columns.Add("SlvIter_speedup",typeof(double));
SubTab_1.Columns.Add("SlvInit_speedup",typeof(double));
SubTab_1.Columns.Add("PrecSolve_speedup",typeof(double));
SubTab_1.Columns.Add("NewtonDirder_speedup",typeof(double));
int i = 0;
foreach (DataRow row in SubTab_1.Rows) {
    row["SlvIter_speedup"] = slviterSpeedup[i];
    row["SlvInit_speedup"] = slvinitSpeedup[i];
    row["PrecSolve_speedup"] = PrecSolveSpeedup[i];
    row["NewtonDirder_speedup"] = NewtonDirderSpeedup[i];
    i++;
}
**************
NewtonDirder_speedup
==============
static public class Formats {
static public void getFormat(int iTabRow,IDictionary<string, object> Row, 
                 out string Nmn, out PlotFormat Fmt){
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           // PlotRowSelector:
           // selects, which table row goes to which graph,
           // and the respective color  
           // - - - - - - - - - - - - - - - - - - - - - - - - 
         
           NonlinearSolverCodes Nonlin_solver_name = (NonlinearSolverCodes) Convert.ToInt32(Row["NonlinearSolve"]);
           LinearSolverCodes solver_name = (LinearSolverCodes) Convert.ToInt32(Row["LinearSolve"]);
           int MGLevels                  = Convert.ToInt32(Row["NoOfMultigridLevels"]);
           Fmt                           = new PlotFormat();
           
           switch(Nonlin_solver_name) {
           case NonlinearSolverCodes.Picard: 
               Nmn = "Picard "; 
               break;  
           case NonlinearSolverCodes.NewtonGMRES: 
               Nmn = "NewtonGmres "; 
               break;          
           default:
               Console.WriteLine("unknown: " + Nonlin_solver_name); 
               Nmn = "unknown"; 
               break;
           } 

          
           switch(solver_name) {
           case LinearSolverCodes.automatic: 
               Nmn           = Nmn+"Automatic"; 
               Fmt.PointType = PointTypes.OpenCircle;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.classic_mumps: 
               Nmn           = Nmn+"Mumps"; 
               Fmt.PointType = PointTypes.OpenUpperTriangle;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.classic_pardiso: 
               Nmn           = Nmn+"Pardiso"; 
               Fmt.PointType = PointTypes.Asterisk;
               Fmt.DashType  = DashTypes.Dashed;
               break;
           case LinearSolverCodes.exp_schwarz_directcoarse: 
               Nmn           = Nmn+"Swz w Coarse"; 
               Fmt.PointType = PointTypes.UpperTriangle;
               Fmt.DashType  = DashTypes.DotDashed;
               break;
           case LinearSolverCodes.exp_schwarz_Kcycle_directcoarse_overlap: 
               Nmn           = Nmn+"Swz Kcycle w Coarse Overlap"; 
               Fmt.PointType = PointTypes.Plus;
               Fmt.DashType  = DashTypes.Dashed;
               break;
           case LinearSolverCodes.exp_schwarz_directcoarse_overlap: 
               Nmn           = Nmn+"Swz w Coarse Overlap"; 
               Fmt.PointType = PointTypes.OpenBox;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.exp_schwarz_Kcycle_directcoarse: 
               Nmn           = Nmn+"Swz Kcycle w Coarse"; 
               Fmt.PointType = PointTypes.LowerTriangle;
               Fmt.DashType  = DashTypes.DotDotDashed;
               break;
           case LinearSolverCodes.exp_softgmres: 
               Nmn           = Nmn+"SoftGMRES"; 
               Fmt.PointType = PointTypes.Box;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.exp_softgmres_schwarz_directcoarse: 
               Nmn           = Nmn+"SoftGMRES Swz w Coarse"; 
               Fmt.PointType = PointTypes.OpenCircle;
               Fmt.DashType  = DashTypes.Dashed;
               break;
          case LinearSolverCodes.exp_softgmres_schwarz_directcoarse_overlap: 
               Nmn           = Nmn+"SoftGMRES Swz w Coarse Overlap"; 
               Fmt.PointType = PointTypes.OpenCircle;
               Fmt.DashType  = DashTypes.Dashed;
               break;
          case LinearSolverCodes.exp_softgmres_schwarz_Kcycle_directcoarse_overlap: 
               Nmn           = Nmn+"SoftGMRES Swz Kcycle w Coarse Overlap"; 
               Fmt.PointType = PointTypes.Times;
               Fmt.DashType  = DashTypes.DotDashed;
               break
           default:
               Console.WriteLine("unknown: " + solver_name); 
               Nmn = Nmn+"unknown"; 
               break;
           } 
           Nmn           = Nmn+" MGLevels"+MGLevels;
           Fmt.PointSize = 0.5;
           Fmt.Style     = Styles.LinesPoints;
           Fmt.LineColor = LineColors.Black;
           Fmt.LineWidth = 3;
       }
}
**************
==============
var plotSlvIterTime = SubTab_1.ToPlot("Grid:NoOfCells", "SlvIter_excl", // column for x- and y
                                  Formats.getFormat); // column for group
var plotSlvIterSpeedup = SubTab_1.ToPlot("Grid:NoOfCells", "SlvIter_speedup", // column for x- and y
                                  Formats.getFormat); // column for group
//var plotSlvInit = SubTab_1.ToPlot("Processors", "SlvInit_excl", // column for x- and y
//                                  Formats.getFormat); // column for group
Plot2Ddata[,] multiplots = new Plot2Ddata[2,1];
//plotSlvIterTime.Title     = "Exclusive times";
plotSlvIterTime.Ylabel    = "Time [s]";
plotSlvIterSpeedup.Xlabel = "Grid:NoOfCells";
plotSlvIterSpeedup.Ylabel = "Speedup";


plotSlvIterTime.XrangeMin    = 0;
plotSlvIterTime.XrangeMax    = 1000;
plotSlvIterTime.LogX         = false;
plotSlvIterTime.LogBaseX     = 2;
plotSlvIterSpeedup.LogX      = false;
plotSlvIterSpeedup.LogY      = false;
plotSlvIterSpeedup.LogBaseX  = 2;
plotSlvIterSpeedup.LogBaseY  = 2;
plotSlvIterSpeedup.XrangeMin = 0;
plotSlvIterSpeedup.XrangeMax = 5000;

multiplots[0,0] = plotSlvIterTime;
multiplots[1,0] = plotSlvIterSpeedup;

// Add ideal
double[] dof = new[]{1.0,2.0,4.0,8.0,16.0,32.0,64.0,128.0};
double[] linT = dof.Select(x => x).ToArray();
var ideal = new Plot2Ddata.XYvalues("Ideal", dof, linT);
ideal.Format.FromString("- black");
ideal.Format.LineWidth = 3;
ArrayTools.AddToArray(ideal, ref multiplots[1,0].dataGroups);


multiplots[0,0].bmargin = 1;
multiplots[1,0].tmargin = 1;
multiplots[0,0].tmargin = 4;
multiplots.PlotNow()
**************
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
unknown: exp_softgmres_schwarz_Kcycle_directcoarse_overlap
Using gnuplot: C:\Users\krause\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
LastError
**************
==============
var CL = multiplots.ToGnuplot().PlotCairolatex(xSize:17, ySize:17);
**************
Using gnuplot: C:\Users\krause\AppData\Local\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
CL.SaveTo(Path.Combine(CurrentDocDir+"/plots/", "NodePerformance.tex"));
**************
(2,1): error CS0103: The name `CL2' does not exist in the current context
(3,1): error CS0103: The name `CL3' does not exist in the current context
(4,1): error CS0103: The name `CL4' does not exist in the current context
No. of errors|warnings: 3|0.

==============
CL.PlotNow();
**************
System.ComponentModel.Win32Exception occurred: Das System kann die angegebene Datei nicht finden. Type 'LastError' for details.

==============
LastError
**************
System.ComponentModel.Win32Exception (0x80004005): Das System kann die angegebene Datei nicht finden
   bei System.Diagnostics.Process.StartWithShellExecuteEx(ProcessStartInfo startInfo)
   bei BoSSS.Application.BoSSSpad.GnuplotExtensions.CairolatexContainer.Preview(Boolean trimPage, Int32 dpi) in C:\BoSSS-experimental\public\src\L4-application\BoSSSpad\GnuplotExtensions.cs:Zeile 325.
   bei <InteractiveExpressionClass>.Host(Object& $retval)
   bei Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   bei BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in C:\BoSSS-experimental\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:Zeile 311.
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
