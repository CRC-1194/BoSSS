restart
**************
  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 4 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 34; Path = C:\BoSSS_DB }
  1: { Session Count = 224; Grid Count = 6; Path = C:\tmp\fk_temp_db }
  2: { Session Count = 197; Grid Count = 6; Path = P:\Performance_DB }
  3: { Session Count = 112; Grid Count = 6; Path = E:\Performance_oldLibs_DB }
}

 Console ready for input. Type 'help' for help.

==============
WorkflowMgm.Init("PoissonSolverPerformance_0_1");
**************
Project name is set to 'PoissonSolverPerformance'.

==============
using System.IO;
using BoSSS.Application.SipPoisson;
**************
==============
string dateString = "2018-11-27";
string File       = "SolverRuns--" + dateString + ".json";
string FilePath   = Path.Combine(CurrentDocDir, File);
var SessTab       = TableExtensions.LoadFromFile(FilePath);
**************
==============
//SessTab.Print();
**************
==============
((int) SolverCodes.exp_softpcg_schwarz_directcoarse);
**************
6
==============
((int) SolverCodes.exp_softpcg_mg);
**************
4
==============
// ====================
// Evaluation, plotting
// ====================
**************
==============
SessTab.GetColumnNames();
**************
List of 50 instances of String {
  0: SessionName
  1: DGdegree:T
  2: DGdegree:Tex
  3: Bndtype:Dirichlet
  4: Bndtype:Neumann
  5: GeneratedFromCode
  6: ControlFileText_Index
  7: dtFixed
  8: NoOfMultigridLevels
  9: penalty_poisson
  10: solver_name
  11: TargetBlockSize
  12: NoOfSolverRuns
  13: ExactSolution_provided
  14: GridPartType
  15: ProjectName
  16: NoOfTimesteps
  17: Endtime
  18: saveperiod
  19: dtMin
  20: dtMax
  21: CompMode
  22: ImmediatePlotPeriod
  23: SuperSampling
  24: savetodb
  25: logFileDirectory
  26: Paramstudy_ContinueOnError
  27: DynamicLoadBalancing_RedistributeAtStartup
  28: DynamicLoadBalancing_Period
  29: DynamicLoadBalancing_ImbalanceThreshold
  30: DynamicLoadBalancing_On
  31: AdaptiveMeshRefinement
  32: CutCellQuadratureType
  33: ContinueOnIoError
  34: Grid:NoOfCells
  35: Grid:hMax
  36: Grid:hMin
  37: RegularTerminated
  38: SipMatrixAssembly_time
  39: Aggregation_basis_init_time
  40: Solver_Init_time
  41: Solver_Run_time
  42: UsedNoOfMultigridLevels
  43: minSolRunT
  44: maxSolRunT
  45: Conv
  46: NoIter
  47: NoOfCells
  48: DOFs
  49: BlockSize
}
==============
//var SubTab_1 = SessTab.ExtractColumns("DGdegree:T", "Grid:NoOfCells", "solver_name", "DOFs", "minSolRunT", "maxSolRunT", "NoIter", "RegularTerminated", "Conv");
**************
==============
var SubTab_1 = SessTab.ExtractRows(delegate(int i, IDictionary<string,object> row) {
    return (  (Convert.ToInt32(row["solver_name"]) ==  ((int) SolverCodes.exp_softpcg_schwarz_directcoarse))
          || (Convert.ToInt32(row["solver_name"]) ==  ((int) SolverCodes.exp_softpcg_schwarz))
          || (Convert.ToInt32(row["solver_name"]) ==  ((int) SolverCodes.exp_softpcg_mg)))
          && (Convert.ToInt32(row["Conv"]) != 0);
    });
**************
==============
var SubTab = SubTab_1.ExtractColumns("DGdegree:T", "Grid:NoOfCells", "solver_name", "DOFs", 
              "minSolRunT", "maxSolRunT", "UsedNoOfMultigridLevels",
              "SipMatrixAssembly_time", "Aggregation_basis_init_time", "Solver_Init_time", "Solver_Run_time");
**************
==============
SubTab.Print();
**************
    DGdegree:T Grid:NoOfCells solver_name DOFs    minSolRunT    maxSolRunT    UsedNoOfMultigridLevels SipMatrixAssembly_time Aggregation_basis_init_time Solver_Init_time Solver_Run_time 
0:  5          2560           4           143360  497.1330584   497.1330584   5                       16.7298691             14.0356003                  43.0682371       454.0343456     
1:  5          320            4           17920   28.3973134    28.3973134    4                       2.426101               1.8252537                   4.6311497        23.7402641      
2:  5          40             4           2240    1.1212961     1.1212961     3                       0.6543525              0.282564                    0.4274076        0.6688036       
3:  3          20480          4           409600  704.9570708   704.9570708   7                       12.9115116             11.3176181                  34.3530146       670.5629089     
4:  3          2560           4           51200   31.6771171    31.6771171    5                       1.9476166              1.0471178                   3.8097454        27.8396438      
5:  3          320            4           6400    1.557986      1.557986      4                       0.5831198              0.1652818                   0.3579663        1.1750633       
6:  3          40             4           800     0.4036891     0.4036891     3                       0.4129103              0.052442                    0.1335032        0.24494         
7:  2          163840         4           1638400 951.588482    951.588482    7                       37.5235688             242.7597558                 79.6920794       871.807734      
8:  2          20480          4           204800  103.7714009   103.7714009   7                       5.0056401              5.8112875                   8.9437361        94.794033       
9:  2          2560           4           25600   9.908968      9.908968      5                       0.9746563              0.3718167                   1.0590948        8.8231086       
10: 2          320            4           3200    0.6306171     0.6306171     4                       0.4704671              0.0771852                   0.1624043        0.4428931       
11: 2          40             4           400     0.3780025     0.3780025     3                       0.3938432              0.0405479                   0.1180742        0.2349079       
12: 5          2560           5           143360  2645.6874397  2645.6874397  5                       16.7044083             13.9590294                  27.5683694       2618.0907748    
13: 5          320            5           17920   28.779916     28.779916     4                       2.4372436              1.8052106                   3.2729003        25.4833613      
14: 5          40             5           2240    1.7173307     1.7173307     3                       0.6527542              0.2829269                   0.5132405        1.1797899       
15: 3          20480          5           409600  5357.7172523  5357.7172523  7                       12.9510196             11.593305                   26.158379        5331.5201813    
16: 3          2560           5           51200   128.0570934   128.0570934   5                       1.9437079              1.0504241                   2.812309         125.2200446     
17: 3          320            5           6400    2.024904      2.024904      4                       0.5867973              0.1661402                   0.4559606        1.5456735       
18: 3          40             5           800     0.5379994     0.5379994     3                       0.4152467              0.055155                    0.1882092        0.3269962       
19: 2          163840         5           1638400 25132.5672957 25132.5672957 7                       38.5233755             245.5504965                 148.2067293      24984.2671042   
20: 2          20480          5           204800  1106.5892615  1106.5892615  7                       5.2054523              5.8661007                   8.247718         1098.3086726    
21: 2          2560           5           25600   24.1967331    24.1967331    5                       1.0056592              0.3716519                   0.897645         23.2740623      
22: 2          320            5           3200    0.6839544     0.6839544     4                       0.4771039              0.0787145                   0.2450828        0.4153516       
23: 2          40             5           400     0.4598177     0.4598177     3                       0.4090182              0.0404921                   0.1765335        0.2594396       
24: 5          2560           6           143360  935.7729459   935.7729459   5                       16.5087015             13.9688942                  32.216042        903.5287137     
25: 5          320            6           17920   41.5323656    41.5323656    4                       2.4090213              1.7911133                   3.8261885        37.682652       
26: 5          40             6           2240    1.9254439     1.9254439     3                       0.6524113              0.2785621                   0.5674528        1.3351335       
27: 3          20480          6           409600  1421.0780502  1421.0780502  7                       12.8999762             10.5674858                  28.6763605       1392.3640335    
28: 3          2560           6           51200   78.0868387    78.0868387    5                       1.954605               1.0328634                   3.1537011        74.9106666      
29: 3          320            6           6400    2.2752466     2.2752466     4                       0.5880044              0.1622375                   0.4985092        1.7553133       
30: 3          40             6           800     0.578944      0.578944      3                       0.4102341              0.0540802                   0.2002866        0.3584104       
31: 2          163840         6           1638400 4494.0690912  4494.0690912  7                       36.9717805             202.2463584                 153.9420908      4340.0410768    
32: 2          20480          6           204800  434.8776575   434.8776575   7                       4.9913418              5.1588303                   9.3340327        425.5150515     
33: 2          2560           6           25600   23.7388973    23.7388973    5                       0.976203               0.3616897                   1.0065361        22.7107868      
34: 2          320            6           3200    0.8816629     0.8816629     4                       0.4562033              0.0772112                   0.2564623        0.6045317       
35: 2          40             6           400     0.5294159     0.5294159     3                       0.3879074              0.0422406                   0.1835803        0.3248682       
==============
**************
==============
**************
==============
**************
==============
var Solvers = new SolverCodes[] {
SolverCodes.exp_softpcg_schwarz_directcoarse,
SolverCodes.exp_softpcg_mg
};
**************
==============
//cl.WriteMinimalCompileableExample("C:\\tmp\\mini.tex");
**************
==============
**************
==============
Plot2Ddata[][,] AllMultiplots = new Plot2Ddata[2][,];
for(int iPlot = 0; iPlot < AllMultiplots.Length; iPlot++) {
Plot2Ddata[,] multiplots = new Plot2Ddata[2,1];
AllMultiplots[iPlot] = multiplots;
int pDegree = 2;
for(int iRow = 0; iRow < 2; iRow++) {
 
    multiplots[iRow,0] = SubTab.ToPlot(
       delegate (int iSweep, int iTabRow, 
                 IDictionary<string, object> Row, 
                 out string Nmn, 
                 out PlotFormat Fmt,
                 out double xValue, out double yValue) { 
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           // PlotRowSelector:
           // selects, which table row goes to which graph,
           // and the respective color  
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           int k = Convert.ToInt32(Row["DGdegree:T"]);
           SolverCodes solver_name = (SolverCodes) Convert.ToInt32(Row["solver_name"]);
           
           if(    k != pDegree 
               || solver_name != Solvers[iPlot]) {
                // degree does not match -> not in this plot
                Nmn    = null;
                Fmt    = null;
                xValue = 0;
                yValue = 0;
                return;
           }
           
           double mtxAssi  = Convert.ToDouble(Row["SipMatrixAssembly_time"]);
           double aggBinit = Convert.ToDouble(Row["Aggregation_basis_init_time"]);
           double slvInit  = Convert.ToDouble(Row["Solver_Init_time"]);
           double slvRun   = Convert.ToDouble(Row["Solver_Run_time"]);
           double dofs     = Convert.ToDouble(Row["DOFs"]);
           
           if(aggBinit > 700)
           Console.Write("aggBinit/slvRun = " + aggBinit + "/" + slvRun);
           
           Fmt           = new PlotFormat();
           Fmt.PointSize = 0.5;
           Fmt.Style     = Styles.LinesPoints;
           Fmt.LineColor = LineColors.Black;
           Fmt.LineWidth = 3;
           
           xValue = dofs;
           
           switch(iSweep) {
               case 0:
               yValue       = slvRun;
               Nmn          = "Slv Iter";
               Fmt.DashType = DashTypes.Dotted;
               Fmt.PointType = PointTypes.OpenCircle;
               break;
               
               case 1:
               yValue        = slvInit;
               Nmn           = "Slv Init";
               Fmt.DashType  = DashTypes.Dashed;
               Fmt.PointType = PointTypes.OpenBox;
               break;
               
               case 2:
               yValue        = aggBinit;
               Nmn           = "Agg Init";
               Fmt.DashType  = DashTypes.DotDashed;
               Fmt.PointType = PointTypes.OpenDiamond;
               break;
               
               case 3:
               yValue        = mtxAssi;
               Nmn           = "Mtx ass";
               Fmt.DashType  = DashTypes.DotDotDashed;
               Fmt.PointType = PointTypes.OpenUpperTriangle;
               break;
               
               default:
               throw new NotImplementedException();
           }
           
           if(aggBinit > 700)
           Console.WriteLine("\t + case: {0} + yValue = {1}", iSweep, yValue);
       },
       4 // 4 sweeps over table
       );
 
    string Title = string.Format("$k = {0}$", pDegree);
    multiplots[iRow,0].Ylabel = Title;
    multiplots[iRow,0].LogX = true;
    multiplots[iRow,0].LogY = true;
 
    multiplots[iRow,0].YrangeMin = 0.1;
    multiplots[iRow,0].YrangeMax = 1e+4;
    
    double[] dof = new[]{1e3,1e6};
    double[] linT = dof.Select(x => x*0.001).ToArray();
    var linP = new Plot2Ddata.XYvalues("linear", dof, linT);
    linP.Format.FromString("- black");
    ArrayTools.AddToArray(linP, ref multiplots[iRow,0].dataGroups);
    //multiplots[iRow,iCol].XrangeMin = 1e2;
    //multiplots[iRow,iCol].XrangeMax = 1e7;
    //multiplots[iRow,iCol].Y2rangeMin = 1e-3;
    //multiplots[iRow,iCol].Y2rangeMax = 1e+4;
    //multiplots[iRow,iCol].X2rangeMin = 1e2;
    //multiplots[iRow,iCol].X2rangeMax = 1e7;
 
    //if(iRow == 2) {
    //    multiplots[iRow,iCol].ShowLegend = true;
    //    multiplots[iRow,iCol].LegendPosition = new double[] {1e12,1e4};
    //} else {
    //    multiplots[iRow,iCol].ShowLegend = false;
    //}
 
    //if(iCol == 1) {
    //    multiplots[iRow,iCol].SwapYaxes();
    //    multiplots[iRow,iCol].lmargin = 1;
    //    multiplots[iRow,iCol].rmargin = 10;
    //} else {
    //    multiplots[iRow,iCol].lmargin = 10;
    //    multiplots[iRow,iCol].rmargin = 1;
    //}
    //multiplots[iRow,iCol].tmargin = 1;
    //multiplots[iRow,iCol].bmargin = 1;
    
    pDegree++;                       
}
}
**************
==============
var CL = AllMultiplots[0].ToGnuplot().PlotCairolatex(xSize:16, ySize:12);
CL.PlotNow();
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.ComponentModel.Win32Exception occurred: Das System kann die angegebene Datei nicht finden. Type 'LastError' for details.

==============
CL.WriteMinimalCompileableExample(
    Path.Combine(CurrentDocDir, "plots", "MainConstCoeffPoisson_Schwarz.tex"),
    "ConstCoeffPoisson_Schwarz.tex");
**************
==============
//CL.WriteMinimalCompileableExample("C:\\tmp\\Schwarz" + dateString + ".tex");
**************
==============
**************
==============
**************
==============
var CL = AllMultiplots[1].ToGnuplot().PlotCairolatex(xSize:16, ySize:12);
CL.PlotNow();
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.ComponentModel.Win32Exception occurred: Das System kann die angegebene Datei nicht finden. Type 'LastError' for details.

==============
LastError;
**************
System.ComponentModel.Win32Exception (0x80004005): Das System kann die angegebene Datei nicht finden
   bei System.Diagnostics.Process.StartWithShellExecuteEx(ProcessStartInfo startInfo)
   bei BoSSS.Application.BoSSSpad.GnuplotExtensions.CairolatexContainer.Preview(Boolean trimPage, Int32 dpi) in C:\BoSSS\BoSSS-SolverPerformance\public\src\L4-application\BoSSSpad\GnuplotExtensions.cs:Zeile 325.
   bei <InteractiveExpressionClass>.Host(Object& $retval)
   bei Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   bei BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in C:\BoSSS\BoSSS-SolverPerformance\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:Zeile 318.
==============
CL.WriteMinimalCompileableExample(
    Path.Combine(CurrentDocDir, "plots", "MainConstCoeffPoisson_MG.tex"),
    "ConstCoeffPoisson_MG.tex");
**************
==============
**************
==============
**************
==============
**************
==============
