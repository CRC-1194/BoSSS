restart
**************
  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 1 instances of IDatabaseInfo {
  0: { Session Count = 12; Grid Count = 31; Path = P:\testDB }
}

 Console ready for input. Type 'help' for help.

==============
ExecutionQueues;
**************
List of 3 instances of BatchProcessorClient {
  0: MiniBatchProcessor client @C:\Users\weber\AppData\Local\BoSSS-LocalJobs
  1: SlurmClient: jw52xeqa@lcluster5.hrz.tu-darmstadt.de, Slurm account: project01217
  2: SlurmClient: jw52xeqa@lcluster14.hrz.tu-darmstadt.de, Slurm account: project01217
}
==============
var ExQueque = ExecutionQueues[1];
**************
==============
var myBatch = (SlurmClient)ExQueque;
ExQueque.AllowedDatabases;
**************
List of 0 instances of IDatabaseInfo {
}
==============
string WFlowName = "Xdg_Stokes_Schwarz_test2_1";
WorkflowMgm.Init(WFlowName);
WorkflowMgm.AllJobs;
**************
Project name is set to 'Xdg_Stokes_Schwarz_test2_1'.
List of 0 instances of KeyValuePair{String,Job} {
}
==============
string dirname = "DB_XdgStokes_trans";
string linpath = @"/work/scratch/jw52xeqa/"+dirname;
string winpath = @"W:\work\scratch\jw52xeqa\"+dirname;
**************
==============
var tempDB = OpenOrCreateDatabase(winpath);
**************
==============
**************
==============
//MiniBatchProcessor.Server.StartIfNotRunning();
**************
==============
// ===================
// Utility definitions
// ===================
**************
==============
static class Utils {
    // DOF per cell in 3D
    public static int Np(int p) {
        return (p*p*p + 6*p*p + 11*p + 6)/6;
    }    
    
    //Non-equidistant nodes
    public static double[] SinLinSpacing(double l, double r, double a, int n) {
        double[] linnodes = GenericBlas.Linspace(-Math.PI * 0.5, Math.PI * 0.5, n);
        double[] linnodes2 = GenericBlas.Linspace(-1, 1, n);
        double[] nodes = new double[n];

        for (int i = 0; i < n; i++)
            //nodes[i] = linnodes2[i] * (1 - a) + (1.0 - Math.Sin(linnodes[i])) * a;
            nodes[i] = linnodes2[i] * (1 - a) + Math.Sin(linnodes[i])*a;

        for (int i = 0; i < n; i++)
            nodes[i] = nodes[i] * (r - l)*0.5 + l;
        return nodes;
    }
}
**************
==============
// ===============================
// Init grids and save to database
// ===============================
**************
==============
tempDB.Grids;
**************
List of 5 instances of IGridInfo {
  0: { Guid = bf5aab4b-fa8d-4cbf-8467-11cdd7f98ca1; Name = Xdg_Stokes_Schwarz_test2_J110592; Cell Count = 110592; Dim = 3 }
  1: { Guid = c7c9e64b-cec3-47b0-b816-9ae10f2b6b4c; Name = Xdg_Stokes_Kcycle_Schwarz_4cores_J262144; Cell Count = 262144; Dim = 3 }
  2: { Guid = 0604b996-4318-43e6-9b6d-f5f8948db0b1; Name = Xdg_Stokes_Schwarz_1TS_J32768; Cell Count = 32768; Dim = 3 }
  3: { Guid = f9a3a511-a7f0-4743-95fa-ae04b034f7b9; Name = Xdg_Stokes_Schwarz_1TS_J4096; Cell Count = 4096; Dim = 3 }
  4: { Guid = d934345a-c0ac-4d95-affc-e0e87eaeb33d; Name = Xdg_Stokes_Schwarz_1TS_J512; Cell Count = 512; Dim = 3 }
}
==============
int[] Resolutions_3D = new int[] { 32,48,64 };
//int[] Resolutions_3D = new int[] { 2 };
IGridInfo[] grids = new IGridInfo[Resolutions_3D.Length];
for(int cnt = 0; cnt < Resolutions_3D.Length; cnt++) {
    int Res = Resolutions_3D[cnt];    
    
    //double[] xNodes = GenericBlas.Linspace(0, 10, Res*5 + 1);
    //double[] yNodes = Utils.SinLinSpacing(-1, +1, 0.6, Res + 1);
    //double[] zNodes = Utils.SinLinSpacing(-1, +1, 0.6, Res + 1);
    double[] xNodes = GenericBlas.Linspace(-1, +1, Res + 1);
    double[] yNodes = GenericBlas.Linspace(-1, +1, Res + 1);
    double[] zNodes = GenericBlas.Linspace(-1, +1, Res + 1);
    int J = (xNodes.Length - 1)*(yNodes.Length - 1)*(zNodes.Length - 1);
    
    string GridName = string.Format(WorkflowMgm.CurrentProject + "_J" + J);
    
    grids[cnt]=null;
    foreach(IGridInfo grd in tempDB.Grids){
        bool check = grd.Name.Contains(string.Format("_J"+ J));
        if(check){
          grids[cnt]=grd;
        }
    }
    
    //grids[cnt] = tempDB.Grids.SingleOrDefault(grd => grd.Name == GridName);
    
    if(grids[cnt] == null){
        Console.WriteLine("Creating grid with " + J + " cells.");
        
        GridCommons g;
        g      = Grid3D.Cartesian3DGrid(xNodes, yNodes, zNodes);
        g.Name = GridName;
        
        g.DefineEdgeTags(delegate (double[] X) {
            if (Math.Abs(X[0] - (-1)) <= 1.0e-8)
                return "wall_left";
            if (Math.Abs(X[0] - (+1)) <= 1.0e-8)
                return "wall_right";
            if (Math.Abs(X[1] - (-1)) <= 1.0e-8)
                return "wall_front";
            if (Math.Abs(X[1] - (+1)) <= 1.0e-8)
                return "wall_back";
            if (Math.Abs(X[2] - (-1)) <= 1.0e-8)
                return "wall_top";
            if (Math.Abs(X[2] - (+1)) <= 1.0e-8)
                return "wall_bottom";
            throw new ArgumentException("unknown wall");
        });
      
        tempDB.SaveGrid(ref g);  
        grids[cnt] = g;
    } else {
        Console.WriteLine("Found Grid: " + grids[cnt]);
        if(grids[cnt].NumberOfCells != J)
            throw new Exception("J mismatch");
        
        if(grids[cnt].SpatialDimension != 3)
            throw new Exception("D mismatch");
    }
}
**************
Found Grid: { Guid = 0604b996-4318-43e6-9b6d-f5f8948db0b1; Name = Xdg_Stokes_Schwarz_1TS_J32768; Cell Count = 32768; Dim = 3 }
Found Grid: { Guid = bf5aab4b-fa8d-4cbf-8467-11cdd7f98ca1; Name = Xdg_Stokes_Schwarz_test2_J110592; Cell Count = 110592; Dim = 3 }
Found Grid: { Guid = c7c9e64b-cec3-47b0-b816-9ae10f2b6b4c; Name = Xdg_Stokes_Kcycle_Schwarz_4cores_J262144; Cell Count = 262144; Dim = 3 }

==============
grids;
**************
List of 3 instances of IGridInfo {
  0: { Guid = 0604b996-4318-43e6-9b6d-f5f8948db0b1; Name = Xdg_Stokes_Schwarz_1TS_J32768; Cell Count = 32768; Dim = 3 }
  1: { Guid = bf5aab4b-fa8d-4cbf-8467-11cdd7f98ca1; Name = Xdg_Stokes_Schwarz_test2_J110592; Cell Count = 110592; Dim = 3 }
  2: { Guid = c7c9e64b-cec3-47b0-b816-9ae10f2b6b4c; Name = Xdg_Stokes_Kcycle_Schwarz_4cores_J262144; Cell Count = 262144; Dim = 3 }
}
==============
**************
==============
// =====================================
// setup control object for a solver run
// =====================================
**************
==============
**************
==============
// - - - - - - - - - - - - - - - - - - -
// Initial Values & Boundary conditions
// - - - - - - - - - - - - - - - - - - -
**************
==============
using BoSSS.Application.XNSE_Solver;
using BoSSS.Solution.LevelSetTools;
using BoSSS.Solution.AdvancedSolvers;
using BoSSS.Solution.XNSECommon;
using BoSSS.Solution.Timestepping;
using BoSSS.Solution.XdgTimestepping ;
**************
==============
Func<LinearSolverCode, int, IGridInfo, int ,XNSE_Control> GenerateCObj = delegate (LinearSolverCode solver, int p, IGridInfo grid, int DOF){
    
    // ProjectName
    // ============
    int NoSblocks = 4;
    int J         = grid.NumberOfCells;
    
    string caseName = string.Format("J{0}_p{1}_{2}", J, p, solver);
    Console.WriteLine("setting up: " + caseName);
    
    XNSE_Control C       = new XNSE_Control();
    C.AlternateDbPaths = new[]{
        new ValueTuple<string,string>(linpath, ""),
        new ValueTuple<string,string>(winpath, "pcmit32")
    };
    C.savetodb           = true;
    C.ProjectName        = WFlowName;
    C.ProjectDescription = "static droplet";
    C.SessionName        = caseName;
    C.GridGuid           = grid.ID;
    
    // DG degrees
    // ============
    
    C.FieldOptions.Add("Velocity*", new FieldOpts() {
        Degree = p,
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });
    C.FieldOptions.Add("Pressure", new FieldOpts() {
        Degree = p - 1,
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });    
    C.FieldOptions.Add("GravityY", new FieldOpts() {
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });
    C.FieldOptions.Add("PhiDG", new FieldOpts() {
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });
    C.FieldOptions.Add("Phi", new FieldOpts() {
        Degree = 2,
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });
    C.FieldOptions.Add("Curvature", new FieldOpts() {
        Degree = Math.Max(4, 2*p + 2),
        SaveToDB = FieldOpts.SaveToDBOpt.TRUE
    });
    
    // Phys. Parameters
    // ============
    
    C.PhysicalParameters.rho_A             = 1e-3; //     kg / cm³
    C.PhysicalParameters.rho_B             = 1.2e-6; //   kg / cm³
    C.PhysicalParameters.mu_A              = 1e-5; //      kg / cm / sec
    C.PhysicalParameters.mu_B              = 17.1e-8; //   kg / cm / sec
    C.PhysicalParameters.Sigma             = 72.75e-3; // kg / sec²   
    C.PhysicalParameters.IncludeConvection = false;
    C.PhysicalParameters.Material          = true;
    
    // Dont know
    // ============
    
    double r     = 0.49;
    double nonsp = 0.5;

    C.AddInitialValue("Phi", new Formula($"X => (X[0]/{r*nonsp}).Pow2() + (X[1]/{r}).Pow2() + (X[2]/{r}).Pow2()-1", false));
    
    C.LSContiProjectionMethod = ContinuityProjectionOption.None;
    C.CutCellQuadratureType   = BoSSS.Foundation.XDG.XQuadFactoryHelper.MomentFittingVariants.Saye;
    C.ComputeEnergyProperties = false;

    //C.AdvancedDiscretizationOptions.CellAgglomerationThreshold = 0.2;
    //C.AdvancedDiscretizationOptions.PenaltySafety = 40;
    //C.AdvancedDiscretizationOptions.UseGhostPenalties = true;
    //C.ContiField = XNSE_Control.ContinuityProjection.ContinuousDG;
    
    // Solver Stuff
    // ============
    
    //C.VelocityBlockPrecondMode         = MultigridOperator.Mode.IdMass_DropIndefinite;
    //C.PressureBlockPrecondMode         = MultigridOperator.Mode.IdMass_DropIndefinite;
    C.UseSchurBlockPrec                = true;
    C.LinearSolver.NoOfMultigridLevels = 5;
    C.LinearSolver.MaxSolverIterations = 5000;
    C.LinearSolver.pMaxOfCoarseSolver  = p;
    
    C.LinearSolver.TargetBlockSize = Math.Min(J*DOF/2,10000); //Make at least two blocks with Schwarz plz...
    //C.LinearSolver.TargetBlockSize = (int)(J*DOF/(NoSblocks-1));

    C.LinearSolver.ConvergenceCriterion = 1e-8;
    C.LevelSet_ConvergenceCriterion     = 1e-6;
    C.LinearSolver.SolverCode           = solver;
    C.LinearSolver.verbose              = true;
    C.NonLinearSolver.verbose           = true;

    C.Option_LevelSetEvolution                          = LevelSetEvolution.None;
    C.AdvancedDiscretizationOptions.SST_isotropicMode   = SurfaceStressTensor_IsotropicMode.LaplaceBeltrami_ContactLine;
    C.AdvancedDiscretizationOptions.ViscosityMode       = ViscosityMode.FullySymmetric;
    C.AdvancedDiscretizationOptions.FilterConfiguration = CurvatureAlgorithms.FilterConfiguration.NoFilter;

    // Timestepping
    // ============

    C.TimeSteppingScheme           = TimeSteppingScheme.ImplicitEuler;
    C.Timestepper_BDFinit          = TimeStepperInit.SingleInit;
    C.Timestepper_LevelSetHandling = LevelSetHandling.None;
    //C.TimesteppingMode             = AppControl._TimesteppingMode.Steady;
    C.TimesteppingMode             = AppControl._TimesteppingMode.Transient;
    C.dtFixed                      = 1E-4;
            
    C.SessionName += "_pLow"+C.LinearSolver.pMaxOfCoarseSolver ;
    return C;
    }
**************
(5,9): warning CS0219: The variable `NoSblocks' is assigned but its value is never used
No. of errors|warnings: 0|1.

==============
**************
==============
**************
==============
**************
==============
// - - - - - - - - - - - - -
// setup of parameter study
// - - - - - - - - - - - - -
**************
==============
int[] PolyDegS = new int[] {2};
//int[] PolyDegS = new int[] {2};
**************
==============
// Solvers which we want to instrument:
LinearSolverCode[] solver_nameS = new LinearSolverCode[] {
    //LinearSolverCode.classic_pardiso,
    //LinearSolverCode.exp_OrthoS_pMG,
    //LinearSolverCode.exp_gmres_levelpmg,
    //LinearSolverCode.exp_softgmres_schwarz_directcoarse_overlap,
    LinearSolverCode.exp_Kcycle_schwarz,
    //LinearSolverConfig.Code.classic_mumps, 
    //LinearSolverConfig.Code.classic_cg,
    //LinearSolverConfig.Code.exp_softpcg_schwarz_directcoarse,
    //LinearSolverConfig.Code.exp_softpcg_mg
}; 
**************
==============
//List<IGridInfo> t_grids=new List<IGridInfo>();
//grids.Pick(1,2,3,4,5,6,7).ForEach(g => t_grids.Add(g));
//t_grids.ToArray();
IGridInfo[] t_grids = grids;
t_grids;
**************
List of 3 instances of IGridInfo {
  0: { Guid = 0604b996-4318-43e6-9b6d-f5f8948db0b1; Name = Xdg_Stokes_Schwarz_1TS_J32768; Cell Count = 32768; Dim = 3 }
  1: { Guid = bf5aab4b-fa8d-4cbf-8467-11cdd7f98ca1; Name = Xdg_Stokes_Schwarz_test2_J110592; Cell Count = 110592; Dim = 3 }
  2: { Guid = c7c9e64b-cec3-47b0-b816-9ae10f2b6b4c; Name = Xdg_Stokes_Kcycle_Schwarz_4cores_J262144; Cell Count = 262144; Dim = 3 }
}
==============
// MaxDof for one claculation (we skip fine grids for higher polynomial orders)
int MaxDof = 10000000;
**************
==============
using BoSSS.Solution.XNSECommon;
using BoSSS.Foundation.XDG;
**************
(1,2): warning CS0105: The using directive for `BoSSS.Solution.XNSECommon' appeared previously in this namespace
No. of errors|warnings: 0|1.

==============
List<XNSE_Control> controls = new List<XNSE_Control>();
**************
==============
controls.Clear();
foreach(LinearSolverCode solver_name in solver_nameS) {
foreach(int k in PolyDegS) {
foreach(IGridInfo grd in t_grids) {

    int Np_V = Utils.Np(k);
    int Np_p = Utils.Np(k-1);
    int J    = grd.NumberOfCells;
    int DOF  = Np_V*3+Np_p;
    if(J*DOF > MaxDof)
        continue;
    
    var Ctrl = GenerateCObj(solver_name,k,grd,DOF);
    
    controls.Add(Ctrl);
}
}
}
**************
setting up: J32768_p2_exp_Kcycle_schwarz
setting up: J110592_p2_exp_Kcycle_schwarz
setting up: J262144_p2_exp_Kcycle_schwarz

==============
**************
==============
**************
==============
**************
==============
**************
==============
// tempDB.Sessions.Pick(1).Export().WithSupersampling(3).Do();
**************
==============
**************
==============
// ==========
// Launch Job
// ==========
**************
==============
//var solver = new XNSE_SolverMain();
//solver.Init(controls[1]);
//solver.RunSolverMode();
//solver.Dispose();
**************
==============
//WorkflowMgm.AllJobs.Pick(0);
//WorkflowMgm.AllJobs.Pick(0).Value.Stdout;
//WorkflowMgm.AllJobs.Pick(0).Value.Stderr;
**************
==============
//tempDB.Sessions.Where(s => s.Name.Contains("softpcg") && s.Name.Contains("k2") && s.Name.Contains("mg"));//.ForEach(si => si.Delete(true));
//tempDB.Sessions.Where(s => s.Name.Contains("exp_direct")).ForEach(si => si.Delete());
**************
==============
foreach(var ctrl in controls) {
    Console.WriteLine(" Submitting: " + ctrl.SessionName); 
    var aJob = new Job(ctrl.SessionName, typeof(XNSE_SolverMain));
    aJob.SetControlObject(ctrl);
    ((SlurmClient)ExQueque).SlurmAccount = "project01287";  // Jens 
    aJob.NumberOfMPIProcs         = 1;
    aJob.ExecutionTime            = "4:00:00";
    aJob.MemPerCPU                = "50000";
    aJob.UseComputeNodesExclusive = true;
    aJob.Activate(myBatch);
}
**************
 Submitting: J32768_p2_exp_Kcycle_schwarz_pLow2
Deploying job J32768_p2_exp_Kcycle_schwarz_pLow2 ... 

Deploying executables and additional files ...
Deployment directory: X:\Deployerie\Xdg_Stokes_Schwarz_test2_1-XNSE_Solver2020Nov16_224022
copied 31 files.
   written file: control.obj
deployment finished.


 Submitting: J110592_p2_exp_Kcycle_schwarz_pLow2
Deploying job J110592_p2_exp_Kcycle_schwarz_pLow2 ... 

Deploying executables and additional files ...
Deployment directory: X:\Deployerie\Xdg_Stokes_Schwarz_test2_1-XNSE_Solver2020Nov16_224030
copied 31 files.
   written file: control.obj
deployment finished.


 Submitting: J262144_p2_exp_Kcycle_schwarz_pLow2
Deploying job J262144_p2_exp_Kcycle_schwarz_pLow2 ... 

Deploying executables and additional files ...
Deployment directory: X:\Deployerie\Xdg_Stokes_Schwarz_test2_1-XNSE_Solver2020Nov16_224038
copied 31 files.
   written file: control.obj
deployment finished.



==============
LastError
**************
System.NullReferenceException: Object reference not set to an instance of an object.
   at BoSSS.Application.BoSSSpad.Job.Deployment.get_BatchProcessorIdentifierToken() in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 574
   at BoSSS.Application.BoSSSpad.Job.Deployment.get_Status() in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 623
   at BoSSS.Application.BoSSSpad.Job.<>c.<GetStatus>b__79_0(Deployment dep) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 1307
   at System.Linq.Enumerable.WhereArrayIterator`1.MoveNext()
   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)
   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)
   at BoSSS.Application.BoSSSpad.Job.GetStatus(Boolean WriteHints) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 1307
   at BoSSS.Application.BoSSSpad.Job.Activate(BatchProcessorClient bpc, Boolean DeleteOldDeploymentsAndSessions) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 1176
   at <InteractiveExpressionClass>.Host(Object& $retval)
   at Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 357
==============
L#astError
**************
Renci.SshNet.Common.SshConnectionException: Server HMAC algorithm not found
   at Renci.SshNet.Session.WaitOnHandle(WaitHandle waitHandle, TimeSpan timeout)
   at Renci.SshNet.Session.Connect()
   at Renci.SshNet.BaseClient.CreateAndConnectSession()
   at Renci.SshNet.BaseClient.Connect()
   at BoSSS.Application.BoSSSpad.SlurmClient.get_SSHConnection() in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\SlurmClient.cs:line 137
   at BoSSS.Application.BoSSSpad.SlurmClient.Submit(Job myJob) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\SlurmClient.cs:line 365
   at BoSSS.Application.BoSSSpad.Job.Activate(BatchProcessorClient bpc) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\Job.cs:line 1027
   at <InteractiveExpressionClass>.Host(Object& $retval)
   at Mono.CSharp.Evaluator.Evaluate(String input, Object& result, Boolean& result_set)
   at BoSSS.Application.BoSSSpad.ReadEvalPrintLoop.EvalPrint(String line, Assembly& AssemblyProduced) in B:\BoSSS-gitlab\public\src\L4-application\BoSSSpad\ReadEvalPrintLoop.cs:line 353
==============
WorkflowMgm.AllJobs;
**************
System.Reflection.TargetInvocationException occurred: Exception has been thrown by the target of an invocation.. Type 'LastError' for details.

==============
WorkflowMgm.AllJobs.Where(s=>s.Value.Status.Equals(JobStatus.Failed)).Where(s=>s.Value.Name.Contains("Kcycle_schwarz"))
**************
List of 3 instances of KeyValuePair{String,Job} {
  0: [XdgPoissonVelocity_J262144_k2_exp_Kcycle_schwarz, XdgPoissonVelocity_J262144_k2_exp_Kcycle_schwarz: Failed (BoSSS.Application.BoSSSpad.MsHPC2012Client)]
  1: [XdgPoissonVelocity_J4096_k5_exp_Kcycle_schwarz, XdgPoissonVelocity_J4096_k5_exp_Kcycle_schwarz: Failed (BoSSS.Application.BoSSSpad.MsHPC2012Client)]
  2: [XdgPoissonVelocity_J32768_k5_exp_Kcycle_schwarz, XdgPoissonVelocity_J32768_k5_exp_Kcycle_schwarz: Failed (BoSSS.Application.BoSSSpad.MsHPC2012Client)]
}
==============
using System.IO
**************
==============
//write out stout
Dictionary<string, string> Stoutlist = new Dictionary<string, string>();
//var somelist = WorkflowMgm.AllJobs.Where(s=>s.Value.Status.Equals(JobStatus.FinishedSuccess));
var somelist = WorkflowMgm.AllJobs;
somelist.ForEach(j=>Stoutlist.Add(j.Value.Name ,j.Value.Stdout.ToString()));
foreach(KeyValuePair<string,string> stout in Stoutlist){
    using(StreamWriter sw = new StreamWriter("G:\\Stout_"+stout.Key+".txt")){
    Console.Write("writing {0} ...",stout.Key);
    sw.WriteLine(stout.Value);
    Console.WriteLine("done.");
    }
}
**************
writing XdgPoissonVelocity_J8_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J64_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J512_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J4096_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J32768_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J262144_k2_classic_pardiso ...done.
writing XdgPoissonVelocity_J8_k3_classic_pardiso ...done.
writing XdgPoissonVelocity_J64_k3_classic_pardiso ...done.
writing XdgPoissonVelocity_J512_k3_classic_pardiso ...done.
writing XdgPoissonVelocity_J4096_k3_classic_pardiso ...done.
writing XdgPoissonVelocity_J32768_k3_classic_pardiso ...done.
writing XdgPoissonVelocity_J8_k5_classic_pardiso ...done.
writing XdgPoissonVelocity_J64_k5_classic_pardiso ...done.
writing XdgPoissonVelocity_J512_k5_classic_pardiso ...done.
writing XdgPoissonVelocity_J4096_k5_classic_pardiso ...done.
writing XdgPoissonVelocity_J32768_k5_classic_pardiso ...done.
writing XdgPoissonVelocity_J8_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J64_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J512_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J4096_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J32768_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J262144_k2_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J8_k3_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J64_k3_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J512_k3_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J4096_k3_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J32768_k3_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J8_k5_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J64_k5_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J512_k5_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J4096_k5_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J32768_k5_exp_gmres_levelpmg ...done.
writing XdgPoissonVelocity_J8_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J64_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J512_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J4096_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J32768_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J262144_k2_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J8_k3_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J64_k3_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J512_k3_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J4096_k3_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J32768_k3_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J8_k5_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J64_k5_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J512_k5_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J4096_k5_exp_Kcycle_schwarz ...done.
writing XdgPoissonVelocity_J32768_k5_exp_Kcycle_schwarz ...done.

==============
WorkflowMgm.AllJobs.Where(s=>s.Value.Status.Equals(JobStatus.Failed))
**************
System.Reflection.TargetInvocationException occurred: Exception has been thrown by the target of an invocation.. Type 'LastError' for details.

==============
//write out stdout of Failed Jobs
Dictionary<string, string> Stoutlist = new Dictionary<string, string>();
var somelist = WorkflowMgm.AllJobs.Where(s=>s.Value.Status.Equals(JobStatus.Failed));
somelist.ForEach(j=>Stoutlist.Add(j.Value.Name ,j.Value.Stdout.ToString()));
foreach(KeyValuePair<string,string> stout in Stoutlist){
    using(StreamWriter sw = new StreamWriter("G:\\Stout_"+stout.Key+".txt")){
    Console.Write("writing {0} ...",stout.Key);
    sw.WriteLine(stout.Value);
    Console.WriteLine("done.");
    }
}
**************
Renci.SshNet.Common.SshConnectionException occurred: Client not connected.. Type 'LastError' for details.

==============
tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value;
**************
List of 48 instances of ISessionInfo {
  0: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k3_classic_pardiso	09/20/2019 13:10:41	67c6d31d...
  1: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k2_exp_Kcycle_schwarz	09/20/2019 13:35:55	6519c7d1...
  2: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k5_exp_Kcycle_schwarz*	09/20/2019 13:48:59	22bfc33d...
  3: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k5_exp_Kcycle_schwarz*	09/20/2019 13:47:47	ab0e8fed...
  4: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k5_exp_Kcycle_schwarz*	09/20/2019 13:45:08	345ff9a3...
  5: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k5_exp_Kcycle_schwarz	09/20/2019 13:43:57	51e47a15...
  6: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k5_exp_Kcycle_schwarz	09/20/2019 13:43:18	23d2324b...
  7: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k3_exp_Kcycle_schwarz*	09/20/2019 13:42:35	0b3de28a...
  8: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k2_exp_gmres_levelpmg	09/20/2019 13:19:59	2bc41150...
  9: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k3_exp_Kcycle_schwarz*	09/20/2019 13:42:10	ff9c45c2...
  10: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k3_exp_Kcycle_schwarz*	09/20/2019 13:41:32	fe0e0067...
  11: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k3_exp_Kcycle_schwarz	09/20/2019 13:41:08	835d9b8c...
  12: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k2_classic_pardiso	09/20/2019 13:08:35	bdd45988...
  13: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J262144_k2_exp_Kcycle_schwarz*	09/20/2019 13:36:36	f1ae6888...
  14: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k3_exp_Kcycle_schwarz	09/20/2019 13:38:37	efd57668...
  15: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k2_exp_Kcycle_schwarz*	09/20/2019 13:35:34	797ce98f...
  16: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k2_exp_Kcycle_schwarz	09/20/2019 13:35:05	1a9a2c02...
  17: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k2_exp_Kcycle_schwarz	09/20/2019 13:34:37	d5e2cf3f...
  18: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k2_exp_Kcycle_schwarz	09/20/2019 13:34:10	f7074fe2...
  19: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k5_exp_gmres_levelpmg*	09/20/2019 13:33:28	35970154...
  20: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k5_exp_gmres_levelpmg	09/20/2019 13:30:05	b584632b...
  21: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k5_exp_gmres_levelpmg*	09/20/2019 13:31:21	dafda96f...
  22: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k3_exp_gmres_levelpmg	09/20/2019 13:26:18	f0440ca9...
  23: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k5_exp_gmres_levelpmg*	09/20/2019 13:29:04	c47d20aa...
  24: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k5_exp_gmres_levelpmg*	09/20/2019 13:27:53	4cc1739c...
  25: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k3_exp_gmres_levelpmg*	09/20/2019 13:26:44	ede2ded4...
  26: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k3_exp_gmres_levelpmg	09/20/2019 13:25:57	418a1594...
  27: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J262144_k2_exp_gmres_levelpmg*	09/20/2019 13:21:16	3bbc274b...
  28: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k3_exp_gmres_levelpmg*	09/20/2019 13:24:41	5216abc5...
  29: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k3_exp_gmres_levelpmg	09/20/2019 13:22:55	af980db3...
  30: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k2_exp_gmres_levelpmg*	09/20/2019 13:18:21	74d48047...
  31: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k2_exp_gmres_levelpmg*	09/20/2019 13:16:57	7c7cfb83...
  32: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k2_exp_gmres_levelpmg	09/20/2019 13:16:14	d36ac0ae...
  33: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k2_exp_gmres_levelpmg	09/20/2019 13:15:02	2791bbbb...
  34: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k5_classic_pardiso	09/20/2019 13:12:39	dcf95286...
  35: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J32768_k5_classic_pardiso*	09/20/2019 13:14:26	2a8fffe0...
  36: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k3_classic_pardiso	09/20/2019 13:10:17	fd9091a8...
  37: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k5_classic_pardiso*	09/20/2019 13:13:40	54713536...
  38: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k5_classic_pardiso	09/20/2019 13:12:08	4a2d2b58...
  39: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J262144_k2_classic_pardiso*	09/20/2019 13:08:53	5b33d87b...
  40: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k5_classic_pardiso	09/20/2019 13:11:37	b5db42b3...
  41: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k3_classic_pardiso	09/20/2019 13:09:58	adcdc7c7...
  42: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k3_classic_pardiso	09/20/2019 13:09:35	eda4e02d...
  43: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k3_classic_pardiso	09/20/2019 13:09:15	1ff0f9d6...
  44: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J4096_k2_classic_pardiso	09/20/2019 13:08:15	14b7de1d...
  45: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J512_k2_classic_pardiso	09/20/2019 13:07:56	e38f4983...
  46: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J64_k2_classic_pardiso	09/20/2019 13:07:38	663b75d8...
  47: Xdg_SFB_Performance_r0	XdgPoissonVelocity_J8_k2_classic_pardiso	09/20/2019 13:07:19	76a019e9...
}
==============
tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.RunningOrCrashed().ForEach(s=>s.ProjectName=WFlowName+"_failed");
**************
==============
tempDB.Projects.Where(p=>p.Key.Contains(WFlowName+"_failed")).Pick(0).Value
**************
System.ArgumentOutOfRangeException occurred: Specified argument was out of the range of valid values.
Parameter name: index. Type 'LastError' for details.

==============
tempDB.Projects.Where(p=>p.Key.Equals(WFlowName)).Pick(0).Value
**************
System.ArgumentOutOfRangeException occurred: Specified argument was out of the range of valid values.
Parameter name: index. Type 'LastError' for details.

==============
//tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.RunningOrCrashed();
//tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.RunningOrCrashed().DeleteAll();
//WorkflowMgm.AllJobs.Select(kv => kv.Key + ": \t" + kv.Value.Status);
//WorkflowMgm.AllJobs.Where(s => s.Value.Status.Equals(JobStatus.InProgress)).Pick(0).Value.Stdout;
//WorkflowMgm.AllJobs.Pick(0).Value.Stdout;
**************
==============
//WorkflowMgm.AllJobs.ElementAt(9).Value.Stdout;
**************
==============
//WorkflowMgm.AllJobs.ElementAt(0).Value.Stdout;
**************
==============
WorkflowMgm.SessionTable.Rows.Count;
**************
0
==============
//tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.Pick(4);
//tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.Pick(4).OpenSessionDirectory();
**************
==============
tempDB.Projects.Where(p=>p.Key.Contains(WFlowName)).Pick(0).Value.Pick(4).Timesteps.Last().Fields.Pick(1).Coordinates.NoOfCols;
**************
112
==============
// =====================================
// Session table
// =====================================
**************
==============
// -------------------------------
// Additional/user-defined columns
// -------------------------------
//tempDB.Projects.Pick(0).Value.Pick(0).KeysAndQueries;
tempDB.Projects.Where(p=>p.Key.Equals(WFlowName)).Pick(0).Value.Pick(0).KeysAndQueries
**************
List of 77 instances of KeyValuePair{String,Object} {
  0: [SessionName, XdgPoissonVelocity_J262144_k2_exp_gmres_levelpmg]
  1: [DGdegree:Phi, 2]
  2: [DGdegree:u, 2]
  3: [GeneratedFromCode, False]
  4: [ControlFileText_Index, 0]
  5: [dtFixed, -1]
  6: [SetDefaultDiriBndCnd, True]
  7: [ViscosityMode, 1]
  8: [MU_A, -1]
  9: [MU_B, -1000]
  10: [ExcactSolSupported, False]
  11: [PrePreCond, 4]
  12: [AgglomerationThreshold, 0.1]
  13: [penalty_multiplyer, 2]
  14: [pOff, 2]
  15: [SuppressExceptionPrompt, True]
  16: [GridPartType, 5]
  17: [ProjectName, Xdg_SFB_Performance_r2]
  18: [NoOfTimesteps, -1]
  19: [Endtime, 1.79769313486232E+308]
  20: [saveperiod, 1]
  21: [rollingSaves, 0]
  22: [dtMin, -1]
  23: [dtMax, -1]
  24: [CompMode, 0]
  25: [ImmediatePlotPeriod, -1]
  26: [SuperSampling, 0]
  27: [savetodb, True]
  28: [logFileDirectory, .]
  29: [Paramstudy_ContinueOnError, True]
  30: [LinearSolver.verbose, True]
  31: [LinearSolver.MaxKrylovDim, 30]
  32: [LinearSolver.MaxSolverIterations, 2000]
  33: [LinearSolver.MinSolverIterations, 2]
  34: [LinearSolver.ConvergenceCriterion, 1E-08]
  35: [LinearSolver.SolverCode, 47]
  36: [LinearSolver.NoOfMultigridLevels, 10]
  37: [LinearSolver.exp_localPrec_muA, 1]
  38: [LinearSolver.exp_localPrec_Min_dt, 0]
  39: [LinearSolver.TargetBlockSize, 10000]
  40: [NonLinearSolver.verbose, False]
  41: [NonLinearSolver.PrecondSolver.verbose, False]
  42: [NonLinearSolver.PrecondSolver.MaxKrylovDim, 30]
  43: [NonLinearSolver.PrecondSolver.MaxSolverIterations, 2000]
  44: [NonLinearSolver.PrecondSolver.MinSolverIterations, 2]
  45: [NonLinearSolver.PrecondSolver.ConvergenceCriterion, 1E-10]
  46: [NonLinearSolver.PrecondSolver.SolverCode, 1]
  47: [NonLinearSolver.PrecondSolver.NoOfMultigridLevels, 1]
  48: [NonLinearSolver.PrecondSolver.exp_localPrec_muA, 1]
  49: [NonLinearSolver.PrecondSolver.exp_localPrec_Min_dt, 0]
  50: [NonLinearSolver.PrecondSolver.TargetBlockSize, 10000]
  51: [NonLinearSolver.MaxSolverIterations, 2000]
  52: [NonLinearSolver.MinSolverIterations, 2]
  53: [NonLinearSolver.ConvergenceCriterion, 1E-08]
  54: [NonLinearSolver.UnderRelax, 1]
  55: [NonLinearSolver.SolverCode, 1]
  56: [DynamicLoadBalancing_RedistributeAtStartup, False]
  57: [DynamicLoadBalancing_Period, -1]
  58: [DynamicLoadBalancing_ImbalanceThreshold, 0.12]
  59: [DynamicLoadBalancing_On, False]
  60: [AdaptiveMeshRefinement, False]
  61: [AMR_startUpSweeps, 1]
  62: [CutCellQuadratureType, 5]
  63: [ContinueOnIoError, True]
  64: [Grid:NoOfCells, 262144]
  65: [Grid:hMax, 0.0541265877365274]
  66: [Grid:hMin, 0.03125]
  67: [UsedNoOfMultigridLevels, 7]
  68: [maxBlkSize, 20]
  69: [minBlkSize, 10]
  70: [NumberOfMatrixBlox, 1810432]
  71: [DOFs, 2671600]
  72: [minSolRunT, 3543.8054746]
  73: [maxSolRunT, 3543.8054746]
  74: [Conv, 1]
  75: [NoIter, 178]
  76: [maxMultigridlvl, 0]
}
==============
static class AddCols {
    static public object SipMatrixAssembly_time(ISessionInfo SI) {
        var mcr = SI.GetProfiling()[0];
        var ndS = mcr.FindChildren("SipMatrixAssembly");
        var nd  = ndS.ElementAt(0);
        return nd.TimeSpentInMethod.TotalSeconds  / nd.CallCount;
    }
    static public object Aggregation_basis_init_time(ISessionInfo SI) {
        var mcr = SI.GetProfiling()[0];
        var ndS = mcr.FindChildren("Aggregation_basis_init");
        var nd  = ndS.ElementAt(0);
        return nd.TimeSpentInMethod.TotalSeconds  / nd.CallCount;
    }
    static public object Solver_Init_time(ISessionInfo SI) {
        var mcr = SI.GetProfiling()[0];
        var ndS = mcr.FindChildren("Solver_Init");
        var nd  = ndS.ElementAt(0);
        //Console.WriteLine("Number of nodes: " + ndS.Count() + " cc " + nd.CallCount );
        return nd.TimeSpentInMethod.TotalSeconds / nd.CallCount;
    }
    static public object Solver_Run_time(ISessionInfo SI) {
        var mcr = SI.GetProfiling()[0];
        var ndS = mcr.FindChildren("Solver_Run");
        var nd  = ndS.ElementAt(0);
        return nd.TimeSpentInMethod.TotalSeconds  / nd.CallCount;
    }
}
**************
==============
WorkflowMgm.AdditionalSessionTableColums.Clear();
WorkflowMgm.AdditionalSessionTableColums.Add(
    "SipMatrixAssembly_time", AddCols.SipMatrixAssembly_time);
WorkflowMgm.AdditionalSessionTableColums.Add(
    "Aggregation_basis_init_time", AddCols.Aggregation_basis_init_time);
WorkflowMgm.AdditionalSessionTableColums.Add(
    "Solver_Init_time", AddCols.Solver_Init_time);
WorkflowMgm.AdditionalSessionTableColums.Add(
    "Solver_Run_time", AddCols.Solver_Run_time);
**************
==============
// --------------------------
// Save Session table in file
// --------------------------
**************
==============
var SessTab = WorkflowMgm.SessionTable;
**************
==============
SessTab.Rows.Count;
**************
38
==============
// The Session column can't be serialized,
// we have to remove it
List<string> AllCols = SessTab.GetColumnNames().ToList();
AllCols.Remove("Session");
**************
True
==============
SessTab = SessTab.ExtractColumns(AllCols.ToArray());
**************
==============
using System.IO;
**************
No. of errors|warnings: 0|1.

==============
// Filename
var now           = DateTime.Now;
SessTab.TableName = "SolverRuns--" + now.Year + "-" + now.Month + "-" + now.Day;
string docpath    = Path.Combine(CurrentDocDir, SessTab.TableName + ".json");
**************
==============
// save session table as file: this can be stored in our git 
// repository
SessTab.SaveToFile(docpath);
**************
==============
**************
==============
LastError;
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
