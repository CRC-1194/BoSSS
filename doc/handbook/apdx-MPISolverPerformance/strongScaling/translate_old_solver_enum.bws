restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 11 instances of IDatabaseInfo {
  0: { Session Count = 0; Grid Count = 34; Path = C:\BoSSS_DB }
  1: { Session Count = 144; Grid Count = 6; Path = C:\tmp\fk_temp_db }
  2: { Session Count = 0; Grid Count = 6; Path = P:\Performance_DB }
  3: { Session Count = 12; Grid Count = 31; Path = P:\testDB }
  4: { Session Count = 112; Grid Count = 6; Path = E:\Performance_oldLibs_DB }
  5: { Session Count = 0; Grid Count = 3; Path = E:\db_2delete }
  6: { Session Count = 32; Grid Count = 12; Path = E:\XdgPerformance }
  7: { Session Count = 112; Grid Count = 136; Path = E:\bosss_db_performance }
  8: { Session Count = 19; Grid Count = 3; Path = F:\test_db }
  9: { Session Count = 144; Grid Count = 139; Path = Z:\weber\Performance_Kram\bosss_db_performance }
  10: { Session Count = 165; Grid Count = 6; Path = E:\Performance_newLibs_DB }
}

 Console ready for input. Type 'help' for help.

==============
using System.IO;
**************
==============
string dateString = "2018-5-2";
string File       = "SolverRuns--" + dateString + ".json";
//string File       = "test.json";
string FilePath   = Path.Combine(CurrentDocDir, File);
var SessTab       = TableExtensions.LoadFromFile(FilePath);
string TargetName = "SolverRuns--" + dateString+"_ac" +".json";
**************
==============
//This bws-sheet translates old solver integer based identification (ENUM) to new solver_id. It probably requires some manual editing, plz be aware of that. Some old ID are e.g.:
//Solver_Name                              SipPoisson          IBM
//NewtonGmres                                       -            0
//Picard                                            -            1
//Newton                                            -            2
//PicardGmres                                       -            3
//automatic                                         -            0
//mumps                                             1            1
//pardiso                                           0            2
//schwarz_directcoarse                              -            3
//schwarz_directcoarse_overlap                      -            4
//schwarz_Kcycle_directcoarse                       -            5
//schwarz_Kcycle_directcoarse_overlap               -            6
//softgmres                                         -            7
//softgmres_schwarz_directcoarse                    -            8
//softgmres_schwarz_Kcycle_directcoarse_overlap     -            9
//softgmres_schwarz_directcoarse_overlap            -           10
//exp_multigrid                                     -           11
//exp_ILU                                           -           12
//exp_Schur                                         -           13
//exp_localPrec                                     -           14
//exp_Simple                                        -           15
//exp_AS_1000                                       -           16
//exp_AS_5000                                       -           17
//exp_AS_10000                                      -           18
//exp_AS_MG                                         -           19
//cg                                                2            -
//exp_direct                                        3            -
//exp_direct_lapack                                 7            -
//exp_softpcg_mg                                    4            -
//exp_softpcg_schwarz                               5            -
//exp_softpcg_schwarz_directcoarse                  6            -
//exp_Kcycle_schwarz                                8            -
**************
==============
//This might help, if no information was stored for used solvers ...
Dictionary<string, int> SipPoisson_Dict=new Dictionary<string, int>();
SipPoisson_Dict.Add("classic_pardiso",0);
SipPoisson_Dict.Add("classic_mumps",1);
SipPoisson_Dict.Add("classic_cg",2);
SipPoisson_Dict.Add("exp_direct",3);
SipPoisson_Dict.Add("exp_softpcg_mg",4);
SipPoisson_Dict.Add("exp_softpcg_schwarz",5);
SipPoisson_Dict.Add("exp_softpcg_schwarz_directcoarse",6);
SipPoisson_Dict.Add("exp_direct_lapack",7);
SipPoisson_Dict.Add("exp_Kcycle_schwarz",8);
Dictionary<string, int> IBM_Dict_NonLin=new Dictionary<string, int>();
IBM_Dict_NonLin.Add("NewtonGmres",0);
IBM_Dict_NonLin.Add("Picard",1);
IBM_Dict_NonLin.Add("Newton",2);
IBM_Dict_NonLin.Add("PicardGMRES",3);
Dictionary<string, int> IBM_Dict_Lin=new Dictionary<string, int>();
IBM_Dict_Lin.Add("automatic",0);
IBM_Dict_Lin.Add("classic_mumps",1);
IBM_Dict_Lin.Add("classic_pardiso",2);
IBM_Dict_Lin.Add("exp_schwarz_directcoarse",3);
IBM_Dict_Lin.Add("exp_schwarz_directcoarse_overlap",4);
IBM_Dict_Lin.Add("exp_schwarz_Kcycle_directcoarse",5);
IBM_Dict_Lin.Add("exp_schwarz_Kcycle_directcoarse_overlap",6);
IBM_Dict_Lin.Add("exp_softgmres",7);
IBM_Dict_Lin.Add("exp_softgmres_schwarz_directcoarse",8);
IBM_Dict_Lin.Add("exp_softgmres_schwarz_Kcycle_directcoarse_overlap",9);
IBM_Dict_Lin.Add("exp_softgmres_schwarz_directcoarse_overlap",10);
IBM_Dict_Lin.Add("exp_multigrid",11);
IBM_Dict_Lin.Add("exp_ILU",12);
IBM_Dict_Lin.Add("exp_Schur",13);
IBM_Dict_Lin.Add("exp_localPrec",14);
IBM_Dict_Lin.Add("exp_Simple",15);
IBM_Dict_Lin.Add("exp_AS_1000",16);
IBM_Dict_Lin.Add("exp_AS_5000",17);
IBM_Dict_Lin.Add("exp_AS_10000",18);
IBM_Dict_Lin.Add("exp_AS_MG",19);
**************
==============
**************
==============
**************
==============
SessTab.GetColumnNames();
**************
List of 63 instances of String {
  0: SessionName
  1: DGdegree:Velocity*
  2: DGdegree:Pressure
  3: DGdegree:PhiDG
  4: DGdegree:Phi
  5: Bndtype:Velocity_inlet
  6: Bndtype:Wall
  7: GeneratedFromCode
  8: ControlFileText_Index
  9: dtFixed
  10: NoOfMultigridLevels
  11: AdvancedDiscretizationOptions.ContiSign
  12: AdvancedDiscretizationOptions.RescaleConti
  13: AdvancedDiscretizationOptions.LFFA
  14: AdvancedDiscretizationOptions.LFFB
  15: AdvancedDiscretizationOptions.PenaltySafety
  16: AdvancedDiscretizationOptions.CellAgglomerationThreshold
  17: MaxKrylovDim
  18: MaxSolverIterations
  19: MinSolverIterations
  20: Solver_ConvergenceCriterion
  21: VelocityBlockPrecondMode
  22: LevelSetSmoothing
  23: PhysicalParameters.IncludeConvection
  24: PhysicalParameters.rho_A
  25: PhysicalParameters.mu_A
  26: PhysicalParameters.Material
  27: particleRadius
  28: MeshFactor
  29: Timestepper_Scheme
  30: FixedStreamwisePeriodicBC
  31: Timestepper_Init
  32: NonlinearSolve
  33: LinearSolve
  34: GridPartType
  35: ProjectName
  36: NoOfTimesteps
  37: Endtime
  38: saveperiod
  39: dtMin
  40: dtMax
  41: CompMode
  42: ImmediatePlotPeriod
  43: SuperSampling
  44: savetodb
  45: logFileDirectory
  46: Paramstudy_ContinueOnError
  47: DynamicLoadBalancing_RedistributeAtStartup
  48: DynamicLoadBalancing_Period
  49: DynamicLoadBalancing_ImbalanceThreshold
  50: DynamicLoadBalancing_On
  51: AdaptiveMeshRefinement
  52: CutCellQuadratureType
  53: ContinueOnIoError
  54: Grid:NoOfCells
  55: Grid:hMax
  56: Grid:hMin
  57: UsedNoOfMultigridLevels
  58: C_Drag
  59: C_Lift
  60: RegularTerminated
  61: SlvIter_excl
  62: Processors
}
==============
string NameOfSessionColumn = "SessionName";
//string NameOfSolverColumn  = "LinearSolver.SolverCode";
string NameOfSolverColumn = "LinearSolve";
string NameOfNLSolverCol  = "NonlinearSolve";
SessTab.ExtractColumns(NameOfSessionColumn,NameOfSolverColumn,NameOfNLSolverCol).Print();
**************
    SessionName                                                                       LinearSolve NonlinearSolve 
0:  DrivenCavity_k2_NewtonGMRES_automatic_J15625_MGLev3                               0           0              
1:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J15625_MGLev3 6           0              
2:  DrivenCavity_k2_NewtonGMRES_automatic_J4913_MGLev3                                0           0              
3:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J4913_MGLev3  6           0              
4:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J2197_MGLev2  6           0              
5:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J1000_MGLev2  6           0              
6:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J343_MGLev2   6           0              
7:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J125_MGLev2   6           0              
8:  DrivenCavity_k2_Picard_classic_mumps_J15625_MGLev1                                1           1              
9:  DrivenCavity_k2_NewtonGMRES_automatic_J2197_MGLev2_v2                             0           0              
10: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2_v2                             0           0              
11: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2_v2                              0           0              
12: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2_v2                              0           0              
13: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2                                0           0              
14: DrivenCavity_k2_Picard_classic_mumps_J4913_MGLev1                                 1           1              
15: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2                                 0           0              
16: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2                                 0           0              
17: DrivenCavity_k2_Picard_classic_mumps_J125_MGLev1                                  1           1              
18: DrivenCavity_k2_Picard_classic_mumps_J2197                                        1           1              
19: DrivenCavity_k2_Picard_classic_mumps_J1000                                        1           1              
20: DrivenCavity_k2_Picard_classic_mumps_J343                                         1           1              
21: DrivenCavity_k2_NewtonGMRES_automatic_J15625_MGLev3                               0           0              
22: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J15625_MGLev3 6           0              
23: DrivenCavity_k2_NewtonGMRES_automatic_J4913_MGLev3                                0           0              
24: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J4913_MGLev3  6           0              
25: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J2197_MGLev2  6           0              
26: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J1000_MGLev2  6           0              
27: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J343_MGLev2   6           0              
28: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J125_MGLev2   6           0              
29: DrivenCavity_k2_Picard_classic_mumps_J15625_MGLev1                                1           1              
30: DrivenCavity_k2_NewtonGMRES_automatic_J2197_MGLev2_v2                             0           0              
31: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2_v2                             0           0              
32: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2_v2                              0           0              
33: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2_v2                              0           0              
34: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2                                0           0              
35: DrivenCavity_k2_Picard_classic_mumps_J4913_MGLev1                                 1           1              
36: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2                                 0           0              
37: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2                                 0           0              
38: DrivenCavity_k2_Picard_classic_mumps_J125_MGLev1                                  1           1              
39: DrivenCavity_k2_Picard_classic_mumps_J2197                                        1           1              
40: DrivenCavity_k2_Picard_classic_mumps_J1000                                        1           1              
41: DrivenCavity_k2_Picard_classic_mumps_J343                                         1           1              
==============
**************
==============
//build a dictionary of all LinearSolverConfig.Code
Dictionary<string,int> helper = new Dictionary<string,int>();
int[] solver_int = (int[])System.Enum.GetValues(typeof(LinearSolverConfig.Code)).Cast<int>();
string[] solver_str = System.Enum.GetNames(typeof(LinearSolverConfig.Code));
if(solver_int.Length!=solver_str.Length)
    throw new Exception("hier stimmt was nicht");
for(int j=0;j<solver_str.Length;j++){
    helper.Add(solver_str[j], solver_int[j]);
    }
helper;
**************
List of 26 instances of KeyValuePair{String,Int32} {
  0: [automatic, 0]
  1: [classic_mumps, 1]
  2: [classic_pardiso, 2]
  3: [exp_multigrid, 3]
  4: [exp_ILU, 4]
  5: [exp_direct_lapack, 7]
  6: [exp_schwarz_directcoarse, 10]
  7: [exp_schwarz_directcoarse_overlap, 11]
  8: [exp_schwarz_Kcycle_directcoarse, 12]
  9: [exp_schwarz_Kcycle_directcoarse_overlap, 13]
  10: [exp_softgmres, 20]
  11: [exp_softgmres_schwarz_directcoarse, 21]
  12: [exp_softgmres_schwarz_directcoarse_overlap, 22]
  13: [exp_softgmres_schwarz_Kcycle_directcoarse_overlap, 23]
  14: [exp_Schur, 24]
  15: [exp_localPrec, 25]
  16: [exp_Simple, 26]
  17: [exp_AS_1000, 27]
  18: [exp_AS_5000, 28]
  19: [exp_AS_10000, 29]
  20: [exp_AS_MG, 30]
  21: [classic_cg, 40]
  22: [exp_Kcycle_schwarz, 41]
  23: [exp_softpcg_mg, 42]
  24: [exp_softpcg_schwarz, 43]
  25: [exp_softpcg_schwarz_directcoarse, 44]
}
==============
//assign probably renamed solvers ...
helper.Add("exp_direct",999);
**************
==============
//Correct table
string SolverCodeRowName = NameOfSolverColumn;
int rowcount             = SessTab.Rows.Count;
for(int iRow=0;iRow<rowcount;iRow++){
System.Data.DataRow row = (System.Data.DataRow)SessTab.Rows[iRow];
int bla                 = Convert.ToInt32(row[SolverCodeRowName]);
string bla_str          = Convert.ToString(row[NameOfSessionColumn]);
//Console.WriteLine(bla_str);
string[] str_array = bla_str.Split('_');
string aux = "";
for(int j=3;j<str_array.Length-1;j++){
    string temp = "_";
    if(j==str_array.Length-1)
        temp = "";
    aux+=str_array[j]+temp;
    }
string[] str_mid=aux.Split('J');
aux = str_mid[0].Substring(0,str_mid[0].Length-1);
//Console.WriteLine(aux);

int bitte = helper.FirstOrDefault(x => x.Key == aux).Value;
//Console.WriteLine(bittsch);
row[SolverCodeRowName]=bitte;
//Console.WriteLine(row[10]);
Console.WriteLine("{2}:{0} --> {1}",bla,bitte,aux);
}
**************
automatic:0 --> 0
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
automatic:0 --> 0
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
classic_mumps:0 --> 1
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
classic_mumps:0 --> 1
automatic:0 --> 0
automatic:0 --> 0
classic_mumps:0 --> 1
classic_mumps:0 --> 1
classic_mumps:0 --> 1
classic_mumps:0 --> 1
automatic:0 --> 0
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
automatic:0 --> 0
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
exp_schwarz_Kcycle_directcoarse_overlap:0 --> 13
classic_mumps:0 --> 1
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
automatic:0 --> 0
classic_mumps:0 --> 1
automatic:0 --> 0
automatic:0 --> 0
classic_mumps:0 --> 1
classic_mumps:0 --> 1
classic_mumps:0 --> 1
classic_mumps:0 --> 1

==============
//Check if everything is fine ...
SessTab.ExtractColumns(NameOfSessionColumn,NameOfSolverColumn).Print();
**************
    SessionName                                                                       LinearSolve 
0:  DrivenCavity_k2_NewtonGMRES_automatic_J15625_MGLev3                               0           
1:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J15625_MGLev3 13          
2:  DrivenCavity_k2_NewtonGMRES_automatic_J4913_MGLev3                                0           
3:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J4913_MGLev3  13          
4:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J2197_MGLev2  13          
5:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J1000_MGLev2  13          
6:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J343_MGLev2   13          
7:  DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J125_MGLev2   13          
8:  DrivenCavity_k2_Picard_classic_mumps_J15625_MGLev1                                1           
9:  DrivenCavity_k2_NewtonGMRES_automatic_J2197_MGLev2_v2                             0           
10: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2_v2                             0           
11: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2_v2                              0           
12: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2_v2                              0           
13: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2                                0           
14: DrivenCavity_k2_Picard_classic_mumps_J4913_MGLev1                                 1           
15: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2                                 0           
16: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2                                 0           
17: DrivenCavity_k2_Picard_classic_mumps_J125_MGLev1                                  1           
18: DrivenCavity_k2_Picard_classic_mumps_J2197                                        1           
19: DrivenCavity_k2_Picard_classic_mumps_J1000                                        1           
20: DrivenCavity_k2_Picard_classic_mumps_J343                                         1           
21: DrivenCavity_k2_NewtonGMRES_automatic_J15625_MGLev3                               0           
22: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J15625_MGLev3 13          
23: DrivenCavity_k2_NewtonGMRES_automatic_J4913_MGLev3                                0           
24: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J4913_MGLev3  13          
25: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J2197_MGLev2  13          
26: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J1000_MGLev2  13          
27: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J343_MGLev2   13          
28: DrivenCavity_k2_NewtonGMRES_exp_schwarz_Kcycle_directcoarse_overlap_J125_MGLev2   13          
29: DrivenCavity_k2_Picard_classic_mumps_J15625_MGLev1                                1           
30: DrivenCavity_k2_NewtonGMRES_automatic_J2197_MGLev2_v2                             0           
31: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2_v2                             0           
32: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2_v2                              0           
33: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2_v2                              0           
34: DrivenCavity_k2_NewtonGMRES_automatic_J1000_MGLev2                                0           
35: DrivenCavity_k2_Picard_classic_mumps_J4913_MGLev1                                 1           
36: DrivenCavity_k2_NewtonGMRES_automatic_J343_MGLev2                                 0           
37: DrivenCavity_k2_NewtonGMRES_automatic_J125_MGLev2                                 0           
38: DrivenCavity_k2_Picard_classic_mumps_J125_MGLev1                                  1           
39: DrivenCavity_k2_Picard_classic_mumps_J2197                                        1           
40: DrivenCavity_k2_Picard_classic_mumps_J1000                                        1           
41: DrivenCavity_k2_Picard_classic_mumps_J343                                         1           
==============
//Write to .json file
TableExtensions.SaveToFile(SessTab,TargetName);
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
