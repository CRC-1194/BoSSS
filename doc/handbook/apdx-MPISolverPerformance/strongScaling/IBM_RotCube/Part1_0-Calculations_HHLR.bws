restart
**************

  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 2 instances of IDatabaseInfo {
  0: { Session Count = 12; Grid Count = 31; Path = P:\testDB }
  1: { Session Count = 2; Grid Count = 4; Path = D:\IBM }
}

 Console ready for input. Type 'help' for help.

==============
using BoSSS.Application.XdgPoisson3;
**************
==============
ExecutionQueues;
**************
List of 4 instances of BatchProcessorClient {
  0: MiniBatchProcessor client  LocalPC @C:\Users\weber\AppData\Local\BoSSS-LocalJobs
  1: MS HPC client  FDY-cluster @DC2, @\\hpccluster\hpccluster-scratch\weber\dply
  2: SlurmClient: jw52xeqa@lcluster5.hrz.tu-darmstadt.de, Slurm account: project01217
  3: SlurmClient HHLR : jw52xeqa@lcluster14.hrz.tu-darmstadt.de, Slurm account: special00006
}
==============
// ==================================
// setup Client & Workflow & Database
// ==================================
//var myBatch = (MsHPC2012Client)ExecutionQueues[1];
var myBatch                     = (SlurmClient)ExecutionQueues[3];
myBatch.AdditionalBatchCommands = new string[]{"#SLURM -p test24","#SLURM -C avx512"}; //new string[]{"#SLURM -p test24", "#SLURM -C avx512","#SLURM -N 3"}; 
**************
==============
string WFlowName = "IBM_RotCube_debugGridCommons";
WorkflowMgm.Init(WFlowName);
WorkflowMgm.SetNameBasedSessionJobControlCorrelation();
WorkflowMgm.AllJobs;
**************
Project name is set to 'IBM_RotCube_debugGridCommons'.
List of 0 instances of KeyValuePair{String,Job} {
}
==============
// providing corresponding paths on both platforms:
string dirname = "DB_IBM_test";
string linpath = @"/work/scratch/jw52xeqa/"+dirname;
string winpath = @"W:\work\scratch\jw52xeqa\"+dirname;
**************
==============
var tempDB = OpenOrCreateDatabase(winpath);
**************
Opening existing database 'W:\work\scratch\jw52xeqa\DB_IBM_test'.

==============
tempDB.Sessions
**************
List of 28 instances of ISessionInfo {
  0: XNSE/IBM_benchmark	XNSE_rotsphere*	05/25/2021 09:50:32	5194a134...
  1: XNSE/IBM_benchmark	XNSE_rotsphere*	05/25/2021 09:50:31	5a5edf0e...
  2: XNSE/IBM_benchmark	XNSE_rotsphere*	05/25/2021 09:49:33	33e82b2e...
  3: XNSE/IBM_benchmark	XNSE_rotsphere*	05/25/2021 09:45:28	5e32c1c1...
  4: XNSE/IBM_benchmark	XNSE_rotsphere*	05/22/2021 00:55:09	46bb5996...
  5: XNSE/IBM_benchmark	XNSE_rotsphere*	05/22/2021 00:36:29	65fb599b...
  6: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 18:31:33	e001635d...
  7: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 18:30:24	ee3ac23c...
  8: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 17:30:01	43a8f315...
  9: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 16:12:48	0d39b29a...
  10: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 15:51:09	d5aeeb5d...
  11: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 14:58:46	a8a1718b...
  12: XNSE/IBM_benchmark	XNSE_rotsphere*	05/21/2021 14:20:43	1135bafe...
  13: XNSE/IBM_benchmark	XNSE_rotsphere*	05/19/2021 12:10:29	ef95e77d...
  14: XNSE/IBM_benchmark	XNSE_rotsphere	02/26/2021 17:30:39	8a132319...
  15: XNSE/RotCube	XNSE_rotcube*	02/26/2021 17:35:09	4abfa7ef...
  16: XNSE/IBM_benchmark	XNSE_rotsphere*	02/26/2021 17:30:55	36684c3b...
  17: XNSE/RotCube	XNSE_rotcube*	02/26/2021 17:25:33	6fc6d6f6...
  18: XNSE/RotCube	XNSE_rotcube*	02/26/2021 17:21:48	10b2437c...
  19: XNSE/RotCube	XNSE_rotcube*	02/26/2021 17:16:46	7de3dcf4...
  20: XNSE/RotCube	XNSE_rotcube*	02/26/2021 17:04:09	00348b81...
  21: XNSE/RotCube	XNSE_rotcube*	02/26/2021 16:53:01	1fd4c0a7...
  22: XNSE/RotCube	XNSE_rotcube*	02/26/2021 16:53:00	f07102c1...
  23: XNSE/RotCube	XNSE_rotcube*	02/26/2021 16:53:00	fa414a6f...
  24: XNSE/RotCube	XNSE_rotcube*	02/26/2021 16:32:44	77a9229f...
  25: XNSE/RotCube	XNSE_rotcube*	02/26/2021 16:05:45	f06072f2...
  26: XNSE/RotCube	XNSE_rotcube*	02/26/2021 15:51:57	88776311...
  27: XNSE/RotCube	XNSE_rotcube*	02/25/2021 21:27:06	6e8461d3...
}
==============
// ===================
// Utility definitions
// ===================
**************
==============
double xMax = 1.0, yMax = 1.0, zMax=1.0;
double xMin = -1.0, yMin = -1.0,zMin = -1.0;
**************
==============
static class Utils {
    // DOF per cell in 3D
    public static int Np(int p) {
        return (p*p*p + 6*p*p + 11*p + 6)/6;
    }    
}
**************
==============
Utils.Np(0);
**************
1
==============
// ===============================
// Init grids and save to database
// ===============================
**************
==============
// set parameterz
int[] core_sweep = {96};
int p             = 4;
int Problemsize   = 1000000;
int MemoryPerCore = 2000;
**************
==============
// calculate grid size
double Res    = Math.Pow(Problemsize/(Utils.Np(p)*3+Utils.Np(p-1)),0.333333333);
int ResRndup  = (int)Math.Ceiling(Res);
int NoOfCells = ResRndup*ResRndup*ResRndup;
double test   = NoOfCells*(Utils.Np(p)*3+Utils.Np(p-1));
ResRndup;
**************
20
==============
ResRndup
**************
20
==============
// - - - - - - - - - - - - -
// setup of parameter study
// - - - - - - - - - - - - -
**************
==============
List<string> controls = new List<string>();
**************
==============
// polynomial degrees to test
//int[] PolyDegS = new int[] {2, 3, 4, 5, 6};
//int[] PolyDegS = new int[] {2, 3 ,5};
int[] PolyDegS = new int[] {p};
**************
==============
// Solvers which we want to instrument:
LinearSolverCode[] solver_nameS = new LinearSolverCode[] {
    //LinearSolverCode.classic_pardiso, 
    //LinearSolverCode.classic_mumps, 
    LinearSolverCode.exp_Kcycle_schwarz, 
    //LinearSolverCode.exp_gmres_levelpmg, 
}; 
**************
==============
// MaxDof for each calculation, prohibit crashes, due to limited memory capabilities of lin solver
int MaxDof = int.MaxValue;
**************
==============
// --------------------
// setup control object
// --------------------

//foreach(LinearSolverCode solver_name in solver_nameS) {
foreach(int k in PolyDegS) {
    //Rotating_Cube(int k = 3, int Res = 20, int SpaceDim = 2, bool useAMR = false, int NoOfTimesteps = 1,bool writeToDB = false, bool tracing = false, bool loadbalancing = false)    
    string jobstr = String.Format(@"cs:BoSSS.Application.XNSE_Solver.HardcodedControl.Rotating_Cube({0}, {1}, {2}, false,{3},true,false,true)",k,ResRndup,3,10);
    controls.Add(jobstr);
    Console.WriteLine(jobstr);
    }
**************
cs:BoSSS.Application.XNSE_Solver.HardcodedControl.Rotating_Cube(4, 20, 3, false,10,true,false,true)

==============
controls
**************
List of 1 instances of String {
  0: cs:BoSSS.Application.XNSE_Solver.HardcodedControl.Rotating_Cube(4, 20, 3, false,10,true,false,true)
}
==============
//var solver = new XdgPoisson3Main();
//solver.Init(c+ontrols[0]);
//solver.RunSolverMode();
//solver.Dispose();
**************
==============
// ==========
// Launch Job
// ==========
**************
==============
using BoSSS.Application.XNSE_Solver;
**************
==============
foreach(var cores in core_sweep){
foreach(var ctrlstr in controls){
    int rndnum = new Random().Next();
    var aJob   = new Job("rotting_cube_"+cores,typeof(XNSE));
    aJob.SetControlStatement(ctrlstr);
    aJob.NumberOfMPIProcs         = cores;
    aJob.ExecutionTime            = "4:00:00";
    aJob.MemPerCPU                = "2000";
    aJob.UseComputeNodesExclusive = true;
    aJob.Activate(myBatch);
}
}
**************
(3,9): warning CS0219: The variable `rndnum' is assigned but its value is never used
Deploying job rotting_cube_96 ... 
Deploying executables and additional files ...
Skipping: System.Threading.Tasks.Extensions
Skipping: System.Text.Encoding.CodePages
Skipping: System.Runtime.Loader
Deployment directory: X:\Deployerie\IBM_RotCube_debugGridCommons-XNSE_Solver2021May27_111925
copied 43 files.
   copied 'amd64' runtime.
deployment finished.

System.ApplicationException: missing job id return value from slurm command.. Type 'LastError' for details.

==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
