restart
**************

  Database Explorer v2
  ____________________

Databases loaded:
List of 10 instances of IDatabaseInfo {
  0: { Session Count = 19; Grid Count = 3; Path = \\dc1\userspace\stange\HiWi_database\OscillatingCylinder }
  1: { Session Count = 84; Grid Count = 24; Path = \\dc1\userspace\stange\HiWi_database\ParticleUnderGravity }
  2: { Session Count = 35; Grid Count = 11; Path = \\dc1\userspace\stange\HiWi_database\IBMPaper }
  3: { Session Count = 5; Grid Count = 10; Path = z:\Stange\HiWi\database }
  4: { Session Count = 11; Grid Count = 11; Path = \\dc1\userspace\stange\HiWi_database\tests }
  5: { Session Count = 376; Grid Count = 17; Path = \\dc1\userspace\stange\HiWi_database\PerformanceTests }
  6: { Session Count = 9; Grid Count = 1; Path = P:\lichtenberg_db }
  7: { Session Count = 10; Grid Count = 9; Path = P:\test_db }
  8: { Session Count = 30; Grid Count = 11; Path = W:\work_db }
  9: { Session Count = 114; Grid Count = 131; Path = Z:\Stange\HiWi\performance_db }
}

 Console ready for input. Type 'help' for help.

==============
WorkflowMgm.Init("MPISolverPerformance");
**************
Project name is set to 'MPISolverPerformance'.

==============
using System.IO;
using BoSSS.Application.IBM_Solver;
using System.Data;
**************
(1,2): warning CS0105: The using directive for `System.IO' appeared previously in this namespace
(2,1): warning CS0105: The using directive for `BoSSS.Application.IBM_Solver' appeared previously in this namespace
No. of errors|warnings: 0|2.

==============
string dateString = "2018-2-16";
string File       = "SolverRuns--" + dateString + ".json";
string FilePath   = Path.Combine(CurrentDocDir, File);
var SessTab       = TableExtensions.LoadFromFile(FilePath);
**************
==============
//SessTab.Print();
**************
==============
// ====================
// Evaluation, plotting
// ====================
**************
==============
SessTab.GetColumnNames();
**************
List of 66 instances of String {
  0: SessionName
  1: DGdegree:VelocityX
  2: DGdegree:VelocityY
  3: DGdegree:VelocityZ
  4: DGdegree:Pressure
  5: DGdegree:PhiDG
  6: DGdegree:Phi
  7: Bndtype:Velocity_inlet
  8: Bndtype:Wall
  9: Bndtype:Pressure_Outlet
  10: GeneratedFromCode
  11: ControlFileText_Index
  12: dtFixed
  13: NoOfMultigridLevels
  14: AdvancedDiscretizationOptions.ContiSign
  15: AdvancedDiscretizationOptions.RescaleConti
  16: AdvancedDiscretizationOptions.LFFA
  17: AdvancedDiscretizationOptions.LFFB
  18: AdvancedDiscretizationOptions.PenaltySafety
  19: AdvancedDiscretizationOptions.CellAgglomerationThreshold
  20: MaxKrylovDim
  21: MaxSolverIterations
  22: MinSolverIterations
  23: Solver_ConvergenceCriterion
  24: VelocityBlockPrecondMode
  25: LevelSetSmoothing
  26: PhysicalParameters.IncludeConvection
  27: PhysicalParameters.rho_A
  28: PhysicalParameters.mu_A
  29: PhysicalParameters.Material
  30: particleRadius
  31: MeshFactor
  32: Timestepper_Scheme
  33: FixedStreamwisePeriodicBC
  34: Timestepper_Init
  35: NonlinearSolve
  36: LinearSolve
  37: GridPartType
  38: ProjectName
  39: NoOfTimesteps
  40: Endtime
  41: saveperiod
  42: dtMin
  43: dtMax
  44: CompMode
  45: ImmediatePlotPeriod
  46: SuperSampling
  47: savetodb
  48: logFileDirectory
  49: Paramstudy_ContinueOnError
  50: DynamicLoadBalancing_RedistributeAtStartup
  51: DynamicLoadBalancing_Period
  52: DynamicLoadBalancing_ImbalanceThreshold
  53: AdaptiveMeshRefinement
  54: CutCellQuadratureType
  55: ContinueOnIoError
  56: Grid:NoOfCells
  57: Grid:hMax
  58: Grid:hMin
  59: UsedNoOfMultigridLevels
  60: C_Drag
  61: C_Lift
  62: RegularTerminated
  63: SlvIter_excl
  64: SlvInit_excl
  65: Processors
}
==============
var SubTab_1 = SessTab.ExtractColumns("Processors","SlvIter_excl","SlvInit_excl","LinearSolve","DGdegree:VelocityX","RegularTerminated");
**************
==============
SubTab_1.Print();
**************
   Processors SlvIter_excl SlvInit_excl LinearSolve DGdegree:VelocityX RegularTerminated SlvIter_speedup SlvInit_speedup 
0: 4          0.0445547    0.0415388    5           1                  True              0.011138675     0.0103847       
1: 2          0.0584902    0.0338874    5           1                  True              0.0292451       0.0169437       
2: 1          0.0339203    0.0328089    5           1                  True              0.0339203       0.0328089       
3: 4          0.1130421    0.0386554    3           1                  True              0.028260525     0.00966385      
4: 2          0.0399982    0.0338559    3           1                  True              0.0199991       0.01692795      
5: 1          0.0364285    0.0302649    3           1                  True              0.0364285       0.0302649       
==============
// Calculation of speedup times 
int[] procs = ((int[])SubTab_1.GetColumn("Processors"));
double[] slviter = ((double[])SubTab_1.GetColumn("SlvIter_excl"));
double[] slvinit = ((double[])SubTab_1.GetColumn("SlvInit_excl"));
double[] slviterSpeedup = new double[procs.Length];
double[] slvinitSpeedup = new double[procs.Length];

for(int i = 0; i<procs.Length; i++){
    slviterSpeedup[i] = slviter[i]/procs[i];
    slvinitSpeedup[i] = slvinit[i]/procs[i];    
}
**************
==============
// Add columns to DataTable
SubTab_1.Columns.Add("SlvIter_speedup",typeof(double));
SubTab_1.Columns.Add("SlvInit_speedup",typeof(double));
int i = 0;
foreach (DataRow row in SubTab_1.Rows) {
    row["SlvIter_speedup"] = slviterSpeedup[i];
    row["SlvInit_speedup"] = slvinitSpeedup[i];
    i++;
}
**************
SlvInit_speedup
==============
//SubTab.ToCSVFile("C:\\tmp\\table.csv");
**************
==============
//RuntimePlot.dataGroups.Select(grp => grp.Name);
**************
==============
//var cl = RuntimePlot.ToGnuplot().PlotCairolatex();
//cl.Preview(trimPage:true);
**************
==============
//cl.WriteMinimalCompileableExample("C:\\tmp\\mini.tex");
**************
==============
static public class Formats {
static public void getFormat(int iTabRow,IDictionary<string, object> Row, 
                 out string Nmn, out PlotFormat Fmt){
           // - - - - - - - - - - - - - - - - - - - - - - - - 
           // PlotRowSelector:
           // selects, which table row goes to which graph,
           // and the respective color  
           // - - - - - - - - - - - - - - - - - - - - - - - - 
         
 
           LinearSolverCodes solver_name = (LinearSolverCodes) Convert.ToInt32(Row["LinearSolve"]);
           Fmt                           = new PlotFormat();

          
           switch(solver_name) {
           case LinearSolverCodes.automatic: 
               Nmn           = "Automatic"; 
               Fmt.PointType = PointTypes.OpenCircle;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.classic_mumps: 
               Nmn           = "Mumps"; 
               Fmt.PointType = PointTypes.OpenUpperTriangle;
               Fmt.DashType  = DashTypes.Dotted;
               break;
           case LinearSolverCodes.classic_pardiso: 
               Nmn           = "Pardiso"; 
               Fmt.PointType = PointTypes.Asterisk;
               break;
           case LinearSolverCodes.exp_schwarz_directcoarse: 
               Nmn           = "Swz w Coarse"; 
               Fmt.PointType = PointTypes.UpperTriangle;
               break;
           case LinearSolverCodes.exp_schwarz_Kcycle_directcoarse_overlap: 
               Nmn           = "Swz Kcycle w Coarse Overlap"; 
               Fmt.PointType = PointTypes.Plus;
               break;
           case LinearSolverCodes.exp_schwarz_directcoarse_overlap: 
               Nmn           = "Swz w Coarse Overlap"; 
               Fmt.PointType = PointTypes.OpenBox;
               break;
           case LinearSolverCodes.exp_schwarz_Kcycle_directcoarse: 
               Nmn           = "Swz Kcycle w Coarse"; 
               Fmt.PointType = PointTypes.LowerTriangle;
               break;
           case LinearSolverCodes.exp_softgmres: 
               Nmn           = "SoftGMRES"; 
               Fmt.PointType = PointTypes.OpenBox;
               break;
           case LinearSolverCodes.exp_softgmres_schwarz_directcoarse: 
               Nmn           = "SoftGMRES Swz w Coarse"; 
               Fmt.PointType = PointTypes.LowerTriangle;
               break;
           default:
               Console.WriteLine("unknown: " + solver_name); 
               Nmn = "unknown"; 
               break;
           } 
           //Console.WriteLine("name is: " + solver_name); 
           Fmt.PointSize = 0.5;
           Fmt.Style     = Styles.LinesPoints;
               Fmt.LineColor = ((LineColors)(solver_name));
          // Fmt.LineColor = LineColors.Black;
       }
}
**************
==============
var plotSlvIter = SubTab_1.ToPlot("Processors", "SlvIter_excl", // column for x- and y
                                  Formats.getFormat); // column for group
var plotSlvInit = SubTab_1.ToPlot("Processors", "SlvInit_excl", // column for x- and y
                                  Formats.getFormat); // column for group
Plot2Ddata[,] multiplots = new Plot2Ddata[2,1];
plotSlvIter.Title = "Exclusive times";
//plotSlvInit.Title  = "SlvInit excl";
//plotSlvIter.Xlabel = "Processors";
plotSlvIter.Ylabel  = "Time [s]";
plotSlvInit.Xlabel  = "Processors";
plotSlvInit.Ylabel  = "Time [s]";
plotSlvIter.Y2label = "SlvIter excl";
plotSlvInit.Y2label = "SlvInit excl";

plotSlvInit.ShowLegend     = false;
plotSlvIter.LegendPosition = new double[] {2.5,0.1};

multiplots[0,0] = plotSlvIter;
multiplots[1,0] = plotSlvInit;


    multiplots[0,0].bmargin = 1;
    multiplots[1,0].tmargin = 1;
multiplots.PlotNow()
**************
Using gnuplot: C:\BoSSSinstall\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
// ToDo: plot speedup columns
var plotSlvIter = SubTab_1.ToPlot("Processors", "SlvIter_speedup", // column for x- and y
                                  Formats.getFormat); // column for group
var plotSlvInit = SubTab_1.ToPlot("Processors", "SlvInit_speedup", // column for x- and y
                                  Formats.getFormat); // column for group
Plot2Ddata[,] speedupsplots = new Plot2Ddata[2,1];
plotSlvIter.Title = "Speedup";
//plotSlvInit.Title  = "SlvInit excl";
//plotSlvIter.Xlabel = "Processors";
plotSlvIter.Ylabel  = "Time per processor [s]";
plotSlvInit.Xlabel  = "Processors";
plotSlvInit.Ylabel  = "Time per processor [s]";
plotSlvIter.Y2label = "SlvIter excl";
plotSlvInit.Y2label = "SlvInit excl";

plotSlvInit.ShowLegend     = false;
plotSlvIter.LegendPosition = new double[] {2.5,0.1};

speedupsplots[0,0] = plotSlvIter;
speedupsplots[1,0] = plotSlvInit;


    speedupsplots[0,0].bmargin = 1;
    speedupsplots[1,0].tmargin = 1;
speedupsplots.PlotNow()
**************
Using gnuplot: C:\BoSSSinstall\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
**************
==============
**************
==============
**************
==============
var CL  = multiplots.ToGnuplot().PlotCairolatex(xSize:17, ySize:17);
var CL2 = speedupsplots.ToGnuplot().PlotCairolatex(xSize:17, ySize:17);
**************
Using gnuplot: C:\BoSSSinstall\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
Using gnuplot: C:\BoSSSinstall\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe

==============
CL.SaveTo(Path.Combine(CurrentDocDir, "MPIScalingTimes.tex"));
CL2.SaveTo(Path.Combine(CurrentDocDir, "MPISpeedup.tex"));
**************
==============
CL.PlotNow();
CL2.PlotNow();
**************
System.ComponentModel.Win32Exception occurred: The system cannot find the file specified. Type 'LastError' for details.

==============
//CL.WriteMinimalCompileableExample("C:\\tmp\\AllSolvers" + dateString + ".tex");
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
