restart
**************
  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 0 instances of IDatabaseInfo {
}

 Console ready for input. Type 'help' for help.

==============
**************
==============
using System.Diagnostics;
using BoSSS.Solution.NSECommon;
using static System.Math;
using BoSSS.Solution.Queries;
using System.IO;
using System.Globalization;
**************
==============
string WFlowName = "HeatedSquareCavityConvStudy_ConvProblem_"; 
WorkflowMgm.Init(WFlowName);
**************
Project name is set to 'HeatedSquareCavityConvStudy_ConvProblem_'.

==============
 
var baseDbPath = @"\\hpccluster\hpccluster-scratch\gutierrez\HC_ConvProb\";
 
**************
==============
**************
==============
Type solver = typeof(BoSSS.Application.XNSEC.XNSEC);
**************
==============
// ==========
// Parameters
// ==========
int[] dgDegree = new int[]{1,2,3,4};
int[] Resolutions = new int[]{2,3,4,5};// 


//int[] dgDegree = new int[]{1,2};
//int[] Resolutions = new int[]{1,2};
double Ra = 1e2;

double dt = -1;
var  NofCells = Resolutions.ToList().Select(r=> (int)Math.Pow(2,r+1)).ToArray();
string baseJobName              = "HeatedSquareCavity";   
int VariableTransportParameters = 1; // 0 is constant. 1 Sutherland.
int VariableRho                 = 1; // 0 is rhoone = true and nogravity. 1 is rho=rho(T)
int p0MassDetermined            = 1; // 0 is constant, 1 is mass determined
double T_left            ; // 1.6 is the original one
double T_right           ; // 0.4 is the original one
double penalty = 2;

bool inverted = false;
bool lowTemp  = false;

string inv = "";
string lt  = "";
if(inverted){
T_left  = 0.4;  
T_right = 1.6;  
inv     = "_inverted";
} else{
if(!lowTemp){    
T_left  = 1.6;  
T_right = 0.4; 
}else{
    T_left = 1.1;  
T_right = 0.9; 
}
inv     = "_NOTinverted"
}
**************
==============
string ending = "VariableRho"+ VariableRho + "_VariableMu" +VariableTransportParameters + "_p0MassDetermined" + p0MassDetermined + "_Penalty" + penalty + inv+"LowTemperature";
string ending = "BB";
string dbPath = baseDbPath + ending;

var myDb = OpenOrCreateDatabase(dbPath );
**************
Opening existing database '\\hpccluster\hpccluster-scratch\gutierrez\HC_ConvProb\BB'.

==============
myDb.Sessions.Pick(2).Export().Do()
**************
Starting export process... System.IO.DirectoryNotFoundException: Could not find a part of the path 'd:\Users\Gutierrez\AppData\Local\BoSSS\plots\sessions\HeatedSquareCavityConvStudy_ConvProblem___HeatedSquareCavityVariableRho1_VariableMu1_p0MassDetermined1_Penalty4_NOTinvertedLowTemperature_p2_cellNumber64__2b0b62b8-1f9d-4afc-bf92-3298e716fa08\plotConfig.xml'.. Type 'LastError' for details.

==============
 
**************
Incomplete statement - missing closing parentheses?.

==============
string dataPathResultsBase = @"d:\Users\Gutierrez\Documents\data\convergenceProblemData\" ;
string folderpath          = dataPathResultsBase  + ending +"LowTemp"+ @"\";
System.IO.Directory.CreateDirectory(folderpath); // Create folder for storing data


**************
==============
folderpath
**************
d:\Users\Gutierrez\Documents\data\convergenceProblemData\VariableRho1_VariableMu0_p0MassDetermined1_Penalty4_NOTinvertedLowTemp\
==============
string[] varnames = new string[]{"VelocityX","VelocityY","Temperature", "Pressure", "ThermodynamicPressure" };// 
**************
==============
foreach (var varname in varnames) {
    foreach (int pDeg in dgDegree) {
       var pDegSessions = myDb.Sessions.Where(
            Si => (Convert.ToInt32(Si.KeysAndQueries["DGdegree:Velocity*"]) == pDeg) 
         ).ToArray();
        Plot2Ddata pDegPlot =
         pDegSessions.ToEstimatedGridConvergenceData(varname,
           xAxis_Is_hOrDof: true, // false selects DOFs for x-axis 
           normType: NormType.L2_embedded );
            //Saving to a txt file
        pDegPlot.SaveTextFileToPublish(folderpath+"\\"+  varname + "DG" + pDeg, false);
    }
}

**************
==============
DirectoryInfo di = new DirectoryInfo(@"./");
FileInfo[] files = di.GetFiles("*.plt")
                     .Where(p => p.Extension == ".plt").ToArray();
foreach (FileInfo file in files)
    try
    {
        file.Attributes = FileAttributes.Normal;
        File.Delete(file.FullName);
    }
    catch { }

**************
==============
 // Plot error as "Value- Value_fine"
foreach(int pDeg in dgDegree) {
    ISessionInfo[] pDegSessions = myDb.Sessions.Where(
            Si => (Convert.ToInt32(Si.KeysAndQueries["DGdegree:Velocity*"]) == pDeg)  // function which is true on all sessions we are interested in: 
         ).ToArray(); // Select databases with a given dgdegree

    var sortedSessions = pDegSessions.OrderBy(o => o.Timesteps[1].Grid.NumberOfCells).ToList();

    // Select timestep corresponding to the converged solution
    ITimestepInfo[] timesteps = sortedSessions.Select(s => s.Timesteps.Last()).ToArray();

    // pick the timestep with the finest mesh
    var fine = timesteps.Last();
    var notfine = timesteps.Take(timesteps.Length - 1);

    int c = 0;
    foreach(var L in notfine) {
        DGField[] allErrors = new DGField[] { };
        foreach(var varname in varnames) {
            var fieldFine = (fine.Fields.Where(s => (s.Identification == varname)).First()).CloneAs();
            var fieldCoarse = (L.Fields.Where(s => (s.Identification == varname)).First()).CloneAs(); //////////////////////
            DGField err = fieldFine.CloneAs();
            err = DGField_Arithmetic.ScaledSummation(err, -1.0, fieldCoarse, -1.0);
            fieldFine.Identification = fieldFine.Identification + "Fine";
            fieldCoarse.Identification = fieldCoarse.Identification + "Coarse";

            err.Identification = varname + "err";

            allErrors = ArrayTools.Cat<DGField>(allErrors, new DGField[] { err });
        }
        BoSSS.Solution.Tecplot.Tecplot.PlotFields(allErrors, "Errors_DG" + pDeg + "_Res" + c, 0, 3);
        c++;
    }
    }


**************
==============
// Move files to the data folder
    string[] txtFiles = Directory.GetFiles("./", "*.plt");
    foreach(var item in txtFiles) {
        File.Move(item, Path.Combine(folderpath, Path.GetFileName(item)));
        }
**************
==============
 folderpath
**************
d:\Users\Gutierrez\Documents\data\convergenceProblemData\VariableRho1_VariableMu0_p0MassDetermined1_Penalty4_NOTinvertedLowTemp\
==============
txtFiles
**************
List of 6 instances of String {
  0: ./Errors_DG2_Res0.plt
  1: ./Errors_DG2_Res1.plt
  2: ./Errors_DG2_Res2.plt
  3: ./Errors_DG3_Res0.plt
  4: ./Errors_DG3_Res1.plt
  5: ./Errors_DG3_Res2.plt
}
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
