restart;
**************
  BoSSSpad C# interpreter
  _______________________

Databases loaded:
List of 2 instances of IDatabaseInfo {
  0: { Session Count = 531; Grid Count = 724; Path = c:\bosss_db_flamesheet }
  1: { Session Count = 72; Grid Count = 72; Path = c:\BoSSS_DB }
}

 Console ready for input. Type 'help' for help.

==============
LoadAssembly(@"C:\BoSSS\experimental\internal\src\private-gutz\L4-application\LowMachCombustionNSE\bin\Release\LowMachCombustionNSE.exe")
**************
==============
using System.Diagnostics;
using BoSSS.Solution.NSECommon;
using static System.Math;
using BoSSS.Solution.Queries;
using BoSSS.Application.LowMachCombustionNSE;
**************
==============
WorkflowMgm.Init("NaturalConvection1");
**************
Project name is set to 'NaturalConvection1'.

==============
//string dbPath = @"\\hpccluster\hpccluster-scratch\gutierrez\bosss_db_Natconv";
string dbPath = @"C:\BoSSS_DB";
var myDb      = OpenOrCreateDatabase(dbPath);
**************
==============
**************
==============
double xleft  = -0.5;
double xright = 0.5;
double ybot   = -0.5;
double ytop   = 0.5;
int nPoints   = 60;
double[] x_p = GenericBlas.Linspace(xleft,xright ,nPoints);
double[] y_p = GenericBlas.Linspace(ybot,ytop,3);
double eps = 1e-7;
**************
==============
**************
==============
**************
==============
var myDb2 = databases.Pick(1);

**************
==============
var _fields = myDb2.Sessions.Pick(0).Timesteps.Pick(1).Fields;
**************
==============
**************
==============
**************
==============
**************
==============
///Extract the Temperature values along some coordinate.
**************
==============
List<Tuple<double, double, double>> Temperature = new List<Tuple<double, double, double>>();

foreach (double xi in x_p) {
    foreach (double yi in y_p) {
        double epsx = 0;
        double epsy = 0;

        if (xi == xright && yi == ytop) {
            epsx = -eps;
            epsy = -eps;
        } else if (yi == ytop) {
            epsx = eps;
            epsy = -eps;
        } else if (xi == xright) {
            epsx = -eps;
            epsy = eps;
        } else {
            epsx = eps;
            epsy = eps;
        }

        var ti = _fields.Pick(10).ProbeAt(xi + epsx, yi + epsy);
        var pair = new Tuple<double, double, double>(xi, yi, ti);
        Temperature.Add(pair);
    }
};

double[] x_print = new double[Temperature.Count()];
double[] T_print = new double[Temperature.Count()];
for (int i = 0; i < Temperature.Count(); i++) {
    x_print[i] = Temperature[i].Item1;
    T_print[i] = Temperature[i].Item3;

}
**************
==============
**************
==============
double[] x_plot= new double[Temperature.Count()/3];
double[] T_plot1= new double[Temperature.Count()/3];
double[] T_plot2= new double[Temperature.Count()/3];
double[] T_plot3= new double[Temperature.Count()/3];

double offset = 0.5;
for( int i =0, y=0; i< Temperature.Count(); i+=3, y++){    
    x_plot[y]=Temperature[i].Item1 + offset; // The calculated values where calculated with an offset...duh!
    T_plot1[y]=Temperature[i].Item3;
    T_plot2[y]=Temperature[i+1].Item3;
    T_plot3[y]=Temperature[i+2].Item3;
}
**************
==============
Dictionary<string,  IEnumerable<double>> Table0 = new Dictionary<string, IEnumerable<double>>();
Dictionary<string,  IEnumerable<double>> Table1 = new Dictionary<string, IEnumerable<double>>();
Dictionary<string,  IEnumerable<double>> Table2 = new Dictionary<string, IEnumerable<double>>();
**************
==============
CSVFile.ReadFromCSVFile(Table0,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\T(x=0.0).csv" ,',' );
CSVFile.ReadFromCSVFile(Table1,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\T(x=0.5).csv" ,',' );
CSVFile.ReadFromCSVFile(Table2,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\T(x=1.0).csv" ,',' );

**************
==============
Plot(Table0.Values.Pick(0), Table0.Values.Pick(1), "Temperature(X=0.0)", "xr",
     Table1.Values.Pick(0), Table1.Values.Pick(1), "Temperature(X=0.5)", "xg",
     Table2.Values.Pick(0), Table2.Values.Pick(1), "Temperature(X=1.0)", "xb",
     x_plot, T_plot1, "Temperature(X=0.0)","-k",
     x_plot, T_plot2, "Temperature(X=0.5)","-k",
     x_plot, T_plot3, "Temperature(X=1.0)","-k"
);
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
// Now plot along the Y coordinate
double[] x_pr ={0.0} ;
double[] y_pr = GenericBlas.Linspace(ybot,ytop ,nPoints);
**************
==============
List <Tuple<double, double, double>> Temperature = new List <Tuple<double, double, double>>();
foreach (double xi in x_pr) {
  foreach (double yi in y_pr) { 
      
      
    if( xi == xright && yi == ytop){
   var  ti = _fields.Pick(10).ProbeAt(xi-eps,yi-eps);
   var pair = new Tuple<double, double, double> (xi,yi,ti);
   Temperature.Add(pair); 
}
   else if( yi == ytop){
   var  ti = _fields.Pick(10).ProbeAt(xi+eps,yi-eps);
   var pair = new Tuple<double, double, double> (xi,yi,ti);
   Temperature.Add(pair); 
} else if( xi == xright){
   var  ti = _fields.Pick(10).ProbeAt(xi-eps,yi+eps);
   var pair = new Tuple<double, double, double> (xi,yi,ti);
   Temperature.Add(pair); 
}else {
   var  ti = _fields.Pick(10).ProbeAt(xi+eps,yi+eps);
   var pair = new Tuple<double, double, double> (xi,yi,ti);
   Temperature.Add(pair); 
  }
  
  }  
    };

double[] x_print1 = new double[Temperature.Count()];
double[] T_print1 = new double[Temperature.Count()];
for( int i =0; i< Temperature.Count(); i++)
{
    x_print1[i]= Temperature[i].Item2+0.5;
    T_print1[i]= Temperature[i].Item3;
    
}
**************
==============
Dictionary<string,  IEnumerable<double>> Table3 = new Dictionary<string, IEnumerable<double>>();
**************
==============
//CSVFile.ReadFromCSVFile(Table3,@"d:\Users\yotov\Desktop\LowMachCouette\Extracted Data\x2_t.csv" ,',' );
CSVFile.ReadFromCSVFile(Table3,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\x2_t.csv" ,',' );
**************
==============
Plot(Table3.Values.Pick(0),Table3.Values.Pick(1), "Temperature(Y=0.5)", "xg",
   T_print1,  x_print1,  "Temperature(Y=0.5) calculated", "-k"
);
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
double[] x_pr1 ={0.0} ;
double[] y_pr1 = GenericBlas.Linspace(ybot,ytop ,nPoints);

**************
==============
List <Tuple<double, double, double>> Velocity = new List <Tuple<double, double, double>>();
foreach (double xi in x_pr1) {
  foreach (double yi in y_pr1) { 
  double epsx = 0;
  double epsy = 0;

    if (xi == xright && yi == ytop) {
    epsx = -eps;
    epsy = -eps;
    } else if (yi == ytop) {
    epsx = eps;
    epsy = -eps;
    } else if (xi == xright) {
    epsx = -eps;
    epsy = eps;
    } else {
    epsx = eps;
    epsy = eps;
    }
    var ti   = _fields.Pick(0).ProbeAt(xi + epsx, yi + epsy);
    var pair = new Tuple<double, double, double>(xi, yi, ti);
    Velocity.Add(pair);
  }  
};

double[] x_print1 = new double[Velocity.Count()];
double[] T_print1 = new double[Velocity.Count()];
for( int i =0; i< Velocity.Count(); i++)
{
    x_print1[i]= Velocity[i].Item2 + offset;
    T_print1[i]= Velocity[i].Item3;
    
}
**************
==============
Dictionary<string,  IEnumerable<double>> Table4 = new Dictionary<string, IEnumerable<double>>();
**************
==============
CSVFile.ReadFromCSVFile(Table4,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\u1_x2.csv" ,',' );

**************
==============
Plot(Table4.Values.Pick(0),Table4.Values.Pick(1), "VelocityX(Y=0.5)", "xg",
     T_print1, x_print1, "VelocityX(Y=0.5)", "-k"
);
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
double[] y_pr1 ={0.0} ;
double[] x_pr1 = GenericBlas.Linspace(xleft,xright ,nPoints);


**************
==============
**************
==============
List <Tuple<double, double, double>> Velocity = new List <Tuple<double, double, double>>();
foreach (double xi in x_pr1) {
  foreach (double yi in y_pr1) { 
      
      
      
  double epsx = 0;
  double epsy = 0;

    if (xi == xright && yi == ytop) {
    epsx = -eps;
    epsy = -eps;
    } else if (yi == ytop) {
    epsx = eps;
    epsy = -eps;
    } else if (xi == xright) {
    epsx = -eps;
    epsy = eps;
    } else {
    epsx = eps;
    epsy = eps;
    }
    var ti   = _fields.Pick(1).ProbeAt(xi + epsx, yi + epsy);
    var pair = new Tuple<double, double, double>(xi, yi, ti);
    Velocity.Add(pair);
      
     
  
  
  }  
    };

double[] x_print2 = new double[Velocity.Count()];
double[] V_print2 = new double[Velocity.Count()];
for( int i =0; i< Velocity.Count(); i++)
{
    x_print2[i]= Velocity[i].Item1+0.5;
    V_print2[i]= Velocity[i].Item3;
    
}
**************
==============
Dictionary<string,  IEnumerable<double>> Table5 = new Dictionary<string, IEnumerable<double>>();
**************
==============
**************
==============
//CSVFile.ReadFromCSVFile(Table5,@"d:\Users\yotov\Desktop\LowMachCouette\Extracted Data\x1_u2.csv" ,',' );
CSVFile.ReadFromCSVFile(Table5,@"C:\Users\jfgj8\Documents\Uni\Worksheets\Low Mach\Square Cavity\Hardcoded\Extracted Data\x1_u2.csv" ,',' );
**************
==============
Plot(Table5.Values.Pick(0),Table5.Values.Pick(1), "VelocityY(X=0.5)", "xg",
     x_print2, V_print2, "VelocityY(X=0.5)", "-k"
);
**************
Using gnuplot: C:\Program Files (x86)\FDY\BoSSS\bin\native\win\gnuplot-gp510-20160418-win32-mingw\gnuplot\bin\gnuplot.exe
System.Drawing.Bitmap
==============
**************
==============
**************
==============
**************
==============
