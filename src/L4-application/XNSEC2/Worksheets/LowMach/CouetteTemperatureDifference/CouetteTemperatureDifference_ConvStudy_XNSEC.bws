restart
**************

  BoSSSpad C# interpreter
  _______________________

JsonReaderException caught while loading batch processor configuration file - using a default configuration. Message: Error reading string. Unexpected token: StartObject. Path 'AllQueues[2].AllowedDatabasesPaths[0]', line 29, position 5.
Databases loaded:
List of 2 instances of IDatabaseInfo {
  0: { Session Count = 415; Grid Count = 674; Path = C:\Databases\BoSSS_DB }
  1: { Session Count = 5; Grid Count = 4; Path = C:\Databases\BoSSS_DB_COMBUSTION }
}

 Console ready for input. Type 'help' for help.

==============
**************
==============
using System.Diagnostics;
using BoSSS.Solution.NSECommon;
using static System.Math;
using BoSSS.Solution.Queries;
using System.IO;
using System.Globalization;
**************
==============
string WFlowName = "HeatedSquareCavityConvStudy"; 
WorkflowMgm.Init(WFlowName);
**************
Project name is set to 'HeatedSquareCavityConvStudy'.

==============
**************
==============
**************
==============
**************
==============
**************
==============
//var myBatch = (MsHPC2012Client)ExecutionQueues[2];
var myBatch = new MiniBatchProcessorClient(@"C:\deploy-Mini");
MiniBatchProcessor.Server.StartIfNotRunning();

**************
Starting mini batch processor in external process...
Started mini batch processor on local machine, process id is 312.
started.
True
==============
string dbPath =@"C:\Databases\Couette_TempDiffConvStudy_ConstantMu";
var myDb      = OpenOrCreateDatabase(dbPath);
**************
Opening existing database 'C:\Databases\Couette_TempDiffConvStudy_ConstantMu'.

==============
Type solver = typeof(BoSSS.Application.XNSEC.XNSEC);
**************
==============
// ==========
// Parameters
// ==========
//int[] dgDegree = new int[]{1,2,3,4};
//int[] Resolutions = new int[]{1,2,3,4,5,6};//

int[] dgDegree = new int[]{1,2,3};
int[] Resolutions = new int[]{1,2,3,4};

double[] RaArr = new double[]{1e2};
double[] newtonConvCriteria = new double[] {1e-10}; // 1e-5, 1e-7, 1e-9,
double dt = -1;
var  NofCells = Resolutions.ToList().Select(r=> (int)Math.Pow(2,r+1)).ToArray();
string baseJobName = "HeatedSquareCavity"   
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
 
**************
Incomplete statement - missing closing parentheses?.

==============
string[] varnames = new string[]{"VelocityX","VelocityY","Temperature", "Pressure" };// 
 
string basepath = @"C:\tmp\ConvPlots\data\CouetteTempDifference_convSt";
System.IO.Directory.CreateDirectory(basepath); // Create folder for storing data

foreach (var varname in varnames) {
    foreach (int pDeg in dgDegree) {
       var pDegSessions = myDb.Sessions.Where(
            Si => (Convert.ToInt32(Si.KeysAndQueries["DGdegree:Velocity*"]) == pDeg) // function which is true on all sessions we are interested in: 
         ).ToArray();
        Plot2Ddata pDegPlot =
         pDegSessions.ToEstimatedGridConvergenceData(varname,
           xAxis_Is_hOrDof: true, // false selects DOFs for x-axis 
           normType: NormType.L2_embedded );
            //Saving to a txt file
        pDegPlot.SaveTextFileToPublish(basepath+"\\"+  varname + "DG" + pDeg, false);
    }
    

}

**************
(7,26): error CS0103: The name `dgDegree' does not exist in the current context
No. of errors|warnings: 1|0.

==============
myDb.Sessions
**************
(1,2): error CS0103: The name `myDb' does not exist in the current context
No. of errors|warnings: 1|0.

==============
**************
==============
// Plot error as "Value- Value_fine"
foreach (int pDeg in dgDegree) {
ISessionInfo[]  pDegSessions = myDb.Sessions.Where(
        Si => (Convert.ToInt32(Si.KeysAndQueries["DGdegree:Velocity*"]) == pDeg)  // function which is true on all sessions we are interested in: 
     ).ToArray(); // Select databases with a given dgdegree
  
     var sortedSessions = pDegSessions.OrderBy(o => o.Timesteps[1].Grid.NumberOfCells).ToList();
     
      // Select timestep corresponding to the converged solution
     ITimestepInfo[] timesteps = sortedSessions.Select(s => s.Timesteps.Last()).ToArray();

     // pick the timestep with the finest mesh
     var fine    = timesteps.Last();
     var notfine = timesteps.Take(timesteps.Length-1);
      
     int c = 0;
     foreach(var L in notfine){
         DGField[] allErrors = new DGField[]{};
         foreach (var varname in varnames) {
            var fieldFine   = (fine.Fields.Where(s => (s.Identification == varname)).First()).CloneAs();
            var fieldCoarse = (L.Fields.Where(s => (s.Identification == varname)).First()).CloneAs(); //////////////////////
            DGField err     = fieldFine.CloneAs();
       err = DGField_Arithmetic.ScaledSummation(err,-1.0, fieldCoarse ,-1.0);
            fieldFine.Identification   = fieldFine.Identification  + "Fine"; 
            fieldCoarse.Identification = fieldCoarse.Identification  + "Coarse"; 
     
            err.Identification         = varname + "err";
       
            allErrors = ArrayTools.Cat<DGField>(allErrors, new DGField[] {err});
         }
              BoSSS.Solution.Tecplot.Tecplot.PlotFields(allErrors,"Errors_DG"+pDeg+ "_Res"+c  ,0,2);
          c++;    
     }
    
}
**************
==============
myDb.Sessions
**************
List of 12 instances of ISessionInfo {
  0: HeatedSquareCavityConvStudy	HeatedSquareCavityP3K32Ra0p1	06/08/2021 13:07:50	5a041b6b...
  1: HeatedSquareCavityConvStudy	HeatedSquareCavityP3K16Ra0p1	06/08/2021 13:06:35	4497431b...
  2: HeatedSquareCavityConvStudy	HeatedSquareCavityP2K32Ra0p1	06/08/2021 13:04:58	6cec887f...
  3: HeatedSquareCavityConvStudy	HeatedSquareCavityP3K8Ra0p1	06/08/2021 13:05:14	65aa1690...
  4: HeatedSquareCavityConvStudy	HeatedSquareCavityP3K4Ra0p1	06/08/2021 13:05:14	a9e85f4e...
  5: HeatedSquareCavityConvStudy	HeatedSquareCavityP2K16Ra0p1	06/08/2021 13:03:46	49835067...
  6: HeatedSquareCavityConvStudy	HeatedSquareCavityP2K8Ra0p1	06/08/2021 13:02:45	cca31dcc...
  7: HeatedSquareCavityConvStudy	HeatedSquareCavityP2K4Ra0p1	06/08/2021 13:02:45	a4b7688c...
  8: HeatedSquareCavityConvStudy	HeatedSquareCavityP1K32Ra0p1	06/08/2021 13:01:00	99e91924...
  9: HeatedSquareCavityConvStudy	HeatedSquareCavityP1K16Ra0p1	06/08/2021 13:00:14	40108af1...
  10: HeatedSquareCavityConvStudy	HeatedSquareCavityP1K8Ra0p1	06/08/2021 12:59:24	f93ac278...
  11: HeatedSquareCavityConvStudy	HeatedSquareCavityP1K4Ra0p1	06/08/2021 12:59:24	a76f3f13...
}
==============
var a = myDb.Sessions.Pick(0).Timesteps.Pick(1).Fields.Pick(7);
**************
==============
a.ProbeAt(0,0)
**************
0.973540844514021
==============
Dictionary<int,double[]> All_p0values = new Dictionary<int,double[]>();
**************
==============
foreach (int pDeg in dgDegree) {
    double[] p0values;
    var pDegSessions = myDb.Sessions.Where(
         Si => (Convert.ToInt32(Si.KeysAndQueries["DGdegree:Velocity*"]) == pDeg) // function which is true on all sessions we are interested in: 
      ).ToArray();

    p0values = new double[pDegSessions.Length];
    int i = 0;
    foreach (var sess in pDegSessions) {
        double p0value = sess.Timesteps.Last().Fields.Pick(7).ProbeAt(0, 0);
        p0values[i] = p0value;
        i++;
    }
All_p0values.Add(pDeg,p0values);
}
**************
==============
int dgDg = 2;
**************
==============
            string basepath = @"C:\tmp\NaturalConvection\data\ThermoPress\";
            foreach (int dgDg in dgDegree) {

                if (dgDg != 5) {
                    string names = "p0" + dgDg.ToString() + ".txt";
                    string txtpath = basepath + names;
                    using (StreamWriter stw = new StreamWriter(txtpath)) {
                        stw.WriteLine("x\ty");
                        for (int i = 0; i < Resolutions.Length; i++) {
                    
                            stw.Write(Resolutions[i].ToString("E16", NumberFormatInfo.InvariantInfo) + "\t");
                            
                            stw.Write(All_p0values[dgDg][i].ToString("E16", NumberFormatInfo.InvariantInfo));
                            stw.WriteLine();
                        }
                    }
                }

            }
**************
==============
**************
List of 4 instances of Int32 {
  0: 1
  1: 2
  2: 3
  3: 4
}
==============
**************
==============
 
**************
==============
 
**************
==============
**************
==============
 All_p0values[3]
**************
List of 4 instances of Double {
  0: 0.973540844514021
  1: 0.973540876718422
  2: 0.973543396130121
  3: 0.973551513270655
}
==============
**************
==============
**************
==============
myDb.Sessions
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
**************
==============
